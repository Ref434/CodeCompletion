{
    "test_acc": {
        "STRUCTURED_DATA": {
            "numpy.mean": 1.0
        }
    },
    "self._data": {
        "STRUCTURED_DATA": {
            "numpy.hstack": 0.5,
            "numpy.vstack": 0.5
        }
    },
    "col": {
        "REQUESTS": {
            "pandas.cut": 1.0
        }
    },
    "dum": {
        "REQUESTS": {
            "pandas.get_dummies": 1.0
        }
    },
    "df_full": {
        "REQUESTS": {
            "pandas.read_csv": 1.0
        }
    },
    "df['mo_earliest_credit']": {
        "REQUESTS": {
            "pandas.to_datetime": 1.0
        }
    },
    "df['term']": {
        "REQUESTS": {
            "pandas.to_numeric": 1.0
        }
    },
    "df['int_rate']": {
        "REQUESTS": {
            "pandas.to_numeric": 1.0
        }
    },
    "df['emp_length']": {
        "REQUESTS": {
            "pandas.to_numeric": 1.0
        }
    },
    "df['revol_util']": {
        "REQUESTS": {
            "pandas.to_numeric": 1.0
        }
    },
    "rfc": {
        "REQUESTS": {
            "sklearn.ensemble.RandomForestClassifier": 1.0
        }
    },
    "X_train,X_test,y_train,y_test": {
        "REQUESTS": {
            "sklearn.model_selection.train_test_split": 1.0
        }
    },
    "gc": {
        "REQUESTS": {
            "sklearn.model_selection.GridSearchCV": 1.0
        }
    },
    "gbc": {
        "REQUESTS": {
            "sklearn.ensemble.GradientBoostingClassifier": 1.0
        }
    },
    "dataset": {
        "REQUESTS": {
            "pandas.read_csv": 1.0
        }
    },
    "sc": {
        "REQUESTS": {
            "sklearn.preprocessing.MinMaxScaler": 1.0
        }
    },
    "admitdata": {
        "REQUESTS": {
            "pandas.read_csv": 1.0
        }
    },
    "log_reg": {
        "REQUESTS": {
            "sklearn.linear_model.LogisticRegression": 1.0
        }
    },
    "cnf_matrix": {
        "REQUESTS": {
            "sklearn.metrics.confusion_matrix": 1.0
        }
    },
    "result": {
        "REQUESTS": {
            "sklearn.metrics.confusion_matrix": 1.0
        }
    },
    "fpr,tpr,thresholds": {
        "REQUESTS": {
            "sklearn.metrics.roc_curve": 1.0
        }
    },
    "predictionsY_test": {
        "CS771": {
            "numpy.vstack": 1.0
        }
    },
    "X_train": {
        "CS771": {
            "numpy.genfromtxt": 1.0
        }
    },
    "Y_train": {
        "CS771": {
            "numpy.genfromtxt": 1.0
        }
    },
    "X_test": {
        "CS771": {
            "numpy.genfromtxt": 1.0
        }
    },
    "x": {
        "TENSOR_FLOW": {
            "numpy.array": 0.5555555555555556,
            "numpy.exp": 0.2222222222222222,
            "numpy.arange": 0.1111111111111111,
            "numpy.zeros": 0.1111111111111111
        },
        "IPython": {
            "numpy.clip": 0.6666666666666666,
            "numpy.expand_dims": 0.3333333333333333
        },
        "SCIKIT_LEARN": {
            "numpy.linspace": 1.0
        }
    },
    "corpus": {
        "TENSOR_FLOW": {
            "numpy.array": 0.5,
            "numpy.load": 0.5
        }
    },
    "self.h": {
        "TENSOR_FLOW": {
            "numpy.zeros": 1.0
        }
    },
    "self.c": {
        "TENSOR_FLOW": {
            "numpy.zeros": 1.0
        }
    },
    "lstm_b": {
        "TENSOR_FLOW": {
            "numpy.zeros": 1.0
        }
    },
    "affine_b": {
        "TENSOR_FLOW": {
            "numpy.zeros": 1.0
        }
    },
    "lstm_b1": {
        "TENSOR_FLOW": {
            "numpy.zeros": 1.0
        }
    },
    "lstm_b2": {
        "TENSOR_FLOW": {
            "numpy.zeros": 1.0
        }
    },
    "out": {
        "TENSOR_FLOW": {
            "numpy.empty": 0.16666666666666666,
            "numpy.concatenate": 0.6666666666666666,
            "numpy.dot": 0.16666666666666666
        }
    },
    "hs": {
        "TENSOR_FLOW": {
            "numpy.empty": 0.5,
            "numpy.repeat": 0.5
        }
    },
    "dxs": {
        "TENSOR_FLOW": {
            "numpy.empty": 1.0
        }
    },
    "dhs": {
        "TENSOR_FLOW": {
            "numpy.zeros_like": 1.0
        }
    },
    "A": {
        "TENSOR_FLOW": {
            "numpy.dot": 1.0
        }
    },
    "dWh": {
        "TENSOR_FLOW": {
            "numpy.dot": 1.0
        }
    },
    "dWx": {
        "TENSOR_FLOW": {
            "numpy.dot": 1.0
        }
    },
    "dx": {
        "TENSOR_FLOW": {
            "numpy.dot": 1.0
        }
    },
    "dh_prev": {
        "TENSOR_FLOW": {
            "numpy.dot": 1.0
        }
    },
    "dW": {
        "TENSOR_FLOW": {
            "numpy.dot": 1.0
        }
    },
    "sample_id": {
        "TENSOR_FLOW": {
            "numpy.argmax": 1.0
        }
    },
    "char_id": {
        "TENSOR_FLOW": {
            "numpy.argmax": 1.0
        }
    },
    "db": {
        "TENSOR_FLOW": {
            "numpy.sum": 1.0
        }
    },
    "total_norm+": {
        "TENSOR_FLOW": {
            "numpy.sum": 1.0
        }
    },
    "ls": {
        "TENSOR_FLOW": {
            "numpy.log": 1.0
        }
    },
    "total_norm": {
        "TENSOR_FLOW": {
            "numpy.sqrt": 1.0
        }
    },
    "g": {
        "TENSOR_FLOW": {
            "numpy.tanh": 1.0
        }
    },
    "tanh_c_next": {
        "TENSOR_FLOW": {
            "numpy.tanh": 1.0
        }
    },
    "dA": {
        "TENSOR_FLOW": {
            "numpy.hstack": 1.0
        }
    },
    "indices": {
        "TENSOR_FLOW": {
            "numpy.arange": 1.0
        }
    },
    "t": {
        "TENSOR_FLOW": {
            "numpy.zeros": 1.0
        }
    },
    "start_time": {
        "TENSOR_FLOW": {
            "time.time": 1.0
        }
    },
    "elapsed_time": {
        "TENSOR_FLOW": {
            "time.time": 1.0
        }
    },
    "df": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "pandas.read_csv": 1.0
        },
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "pandas.read_table": 1.0
        },
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "pandas.merge": 1.0
        },
        "NUMPY_VISUALIZATION": {
            "pandas.read_csv": 1.0
        },
        "SCIKIT_LEARN": {
            "pandas.melt": 1.0
        }
    },
    "x_train,x_test,y_train,y_test": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.model_selection.train_test_split": 1.0
        }
    },
    "pac": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.linear_model.PassiveAggressiveClassifier": 1.0
        }
    },
    "score": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.metrics.accuracy_score": 1.0
        }
    },
    "time": {
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "datetime.datetime": 0.3333333333333333,
            "datetime.datetime.strptime": 0.6666666666666666
        }
    },
    "list_files": {
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "os.listdir": 1.0
        }
    },
    "ax": {
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "matplotlib.pyplot.axes": 1.0
        },
        "TENSOR_FLOW": {
            "seaborn.barplot": 1.0
        }
    },
    "fig": {
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "matplotlib.pyplot.figure": 1.0
        },
        "TENSOR_FLOW": {
            "matplotlib.pyplot.figure": 1.0
        }
    },
    "a": {
        "SCIENTIFIC_COMPUTING": {
            "numpy.arange": 0.4,
            "numpy.array": 0.2,
            "numpy.zeros": 0.1,
            "numpy.ones": 0.2,
            "numpy.linspace": 0.1
        }
    },
    "b": {
        "SCIENTIFIC_COMPUTING": {
            "numpy.ones": 0.5,
            "numpy.linspace": 0.5
        }
    },
    "NKE": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "pandas.read_csv": 1.0
        }
    },
    "JPM": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "pandas.read_csv": 1.0
        }
    },
    "SBUX": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "pandas.read_csv": 1.0
        }
    },
    "BRK_B": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "pandas.read_csv": 1.0
        }
    },
    "RRC": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "pandas.read_csv": 1.0
        }
    },
    "CAR": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "pandas.read_csv": 1.0
        }
    },
    "COST": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "pandas.read_csv": 1.0
        }
    },
    "JanReturn": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.dot": 1.0
        }
    },
    "FebReturn": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.dot": 1.0
        }
    },
    "MarReturn": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.dot": 1.0
        }
    },
    "index": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.argmax": 0.5,
            "numpy.argmin": 0.5
        }
    },
    "exp_returns_monthly": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.power": 1.0
        }
    },
    "target_returns": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.linspace": 1.0
        }
    },
    "ad_data": {
        "REQUESTS": {
            "pandas.read_csv": 1.0
        }
    },
    "logmodel": {
        "REQUESTS": {
            "sklearn.linear_model.LogisticRegression": 1.0
        }
    },
    "display_grid": {
        "IPython": {
            "numpy.zeros": 1.0
        }
    },
    "results": {
        "IPython": {
            "numpy.zeros": 1.0
        }
    },
    "channel_image": {
        "IPython": {
            "numpy.clip": 1.0
        }
    },
    "heatmap": {
        "IPython": {
            "numpy.mean": 0.3333333333333333,
            "numpy.maximum": 0.3333333333333333,
            "numpy.uint8": 0.3333333333333333
        }
    },
    "img_tensor": {
        "IPython": {
            "numpy.expand_dims": 1.0
        }
    },
    "noise_tensor": {
        "DEEP_NEURAL_NETWORKS": {
            "numpy.zeros": 1.0
        }
    },
    "le": {
        "NUMPY_VISUALIZATION": {
            "sklearn.preprocessing.LabelEncoder": 1.0
        }
    },
    "train": {
        "TENSOR_FLOW": {
            "pandas.read_csv": 1.0
        }
    },
    "test": {
        "TENSOR_FLOW": {
            "pandas.read_csv": 1.0
        }
    },
    "train_smp": {
        "TENSOR_FLOW": {
            "pandas.read_csv": 1.0
        }
    },
    "train['click_time']": {
        "TENSOR_FLOW": {
            "pandas.to_datetime": 1.0
        }
    },
    "train['attributed_time']": {
        "TENSOR_FLOW": {
            "pandas.to_datetime": 1.0
        }
    },
    "test['click_time']": {
        "TENSOR_FLOW": {
            "pandas.to_datetime": 1.0
        }
    },
    "train_smp['click_time']": {
        "TENSOR_FLOW": {
            "pandas.to_datetime": 1.0
        }
    },
    "train_smp['attributed_time']": {
        "TENSOR_FLOW": {
            "pandas.to_datetime": 1.0
        }
    },
    "df_test": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "pandas.read_csv": 1.0
        }
    },
    "mu_X": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.mean": 1.0
        }
    },
    "std_X": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.std": 1.0
        }
    },
    "lr": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.linear_model.LinearRegression": 1.0
        }
    },
    "sk_lr": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.linear_model.LinearRegression": 1.0
        }
    },
    "NaN": {
        "SCIKIT_LEARN": {
            "pandas.isna": 1.0
        }
    },
    "data": {
        "SCIKIT_LEARN": {
            "pandas.read_csv": 1.0
        }
    },
    "base_prior": {
        "SCIKIT_LEARN": {
            "scipy.stats.cauchy": 1.0
        }
    },
    "multiplier_prior": {
        "SCIKIT_LEARN": {
            "scipy.stats.gamma": 1.0
        }
    },
    "error_prior": {
        "SCIKIT_LEARN": {
            "scipy.stats.invgamma": 1.0
        }
    },
    "encoder": {
        "SCIKIT_LEARN": {
            "sklearn.preprocessing.OrdinalEncoder": 1.0
        }
    }
}
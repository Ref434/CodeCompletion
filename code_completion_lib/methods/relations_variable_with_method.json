{
    "test_acc": {
        "TENSOR_FLOW": {
            "numpy.mean": 0.6666666666666666,
            "numpy.argmax": 0.3333333333333333
        }
    },
    "self._data": {
        "TENSOR_FLOW": {
            "numpy.hstack": 0.5,
            "numpy.vstack": 0.5
        }
    },
    "p": {
        "TENSOR_FLOW": {
            "numpy.random.permutation": 0.3333333333333333,
            "numpy.random.normal": 0.4333333333333333,
            "numpy.squeeze": 0.3333333333333333
        },
        "SCIKIT_LEARN": {
            "numpy.clip": 0.5,
            "numpy.random.binomial": 0.5
        },
        "CS771": {
            "numpy.array": 1.0
        }
    },
    "Epsilon": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.arange": 1.0
        }
    },
    "y_true,y_pred": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.array": 1.0
        },
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.array": 1.0
        }
    },
    "var": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.cumsum": 1.0
        }
    },
    "ssres": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.sum": 1.0
        }
    },
    "sstot": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.sum": 1.0
        }
    },
    "f_test": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.var": 1.0
        }
    },
    "tsne": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.manifold.TSNE": 1.0
        },
        "TENSOR_FLOW": {
            "sklearn.manifold.TSNE": 1.0
        },
        "NUMPY_VISUALIZATION": {
            "sklearn.manifold.TSNE": 1.0
        },
        "STRUCTURED_DATA_VISUALIZATION": {
            "sklearn.manifold.TSNE": 1.0
        }
    },
    "X_train,X_test,y_train,y_test": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.model_selection.train_test_split": 1.0
        },
        "STRUCTURED_DATA_VISUALIZATION": {
            "sklearn.model_selection.train_test_split": 1.0
        },
        "NUMPY_VISUALIZATION": {
            "sklearn.model_selection.train_test_split": 1.0
        },
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "sklearn.model_selection.train_test_split": 1.0
        },
        "TENSOR_FLOW": {
            "sklearn.model_selection.train_test_split": 1.0
        },
        "REQUESTS": {
            "sklearn.model_selection.train_test_split": 1.0
        },
        "DEEP_NEURAL_NETWORKS": {
            "sklearn.model_selection.train_test_split": 1.0
        }
    },
    "clf": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.svm.SVR": 0.03225806451612903,
            "sklearn.ensemble.IsolationForest": 0.06451612903225806,
            "sklearn.ensemble.RandomForestClassifier": 0.12903225806451613,
            "sklearn.dummy.DummyClassifier": 0.03225806451612903,
            "sklearn.svm.SVC": 0.12903225806451613,
            "sklearn.linear_model.LogisticRegression": 0.12903225806451613,
            "sklearn.ensemble.GradientBoostingClassifier": 0.06451612903225806,
            "sklearn.neighbors.KNeighborsClassifier": 0.06451612903225806,
            "sklearn.naive_bayes.MultinomialNB": 0.3225806451612903,
            "sklearn.tree.DecisionTreeClassifier": 0.03225806451612903
        },
        "TENSOR_FLOW": {
            "sklearn.svm.LinearSVC": 1.0
        },
        "NUMPY_VISUALIZATION": {
            "sklearn.linear_model.LinearRegression": 0.05,
            "sklearn.neighbors.KNeighborsClassifier": 0.2,
            "sklearn.ensemble.AdaBoostClassifier": 0.15,
            "sklearn.linear_model.LogisticRegression": 0.1,
            "sklearn.pipeline.Pipeline": 0.05,
            "sklearn.ensemble.ExtraTreesRegressor": 0.05,
            "sklearn.tree.DecisionTreeClassifier": 0.1,
            "sklearn.ensemble.BaggingClassifier": 0.05,
            "sklearn.linear_model.LogisticRegressionCV": 0.05,
            "sklearn.svm.SVC": 0.05,
            "sklearn.ensemble.RandomForestClassifier": 0.05,
            "sklearn.model_selection.GridSearchCV": 0.05,
            "sklearn.ensemble.RandomForestRegressor": 0.05
        },
        "STRUCTURED_DATA_VISUALIZATION": {
            "sklearn.linear_model.LogisticRegression": 1.0
        },
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "sklearn.tree.DecisionTreeClassifier": 1.0
        },
        "IPython": {
            "sklearn.tree.DecisionTreeClassifier": 0.25,
            "sklearn.tree.DecisionTreeRegressor": 0.25,
            "sklearn.svm.LinearSVC": 0.5
        },
        "SCIKIT_LEARN": {
            "sklearn.linear_model.LinearRegression": 1.0
        },
        "CS771": {
            "sklearn.naive_bayes.GaussianNB": 0.75,
            "sklearn.ensemble.RandomForestClassifier": 0.25
        },
        "REQUESTS": {
            "sklearn.naive_bayes.MultinomialNB": 1.0
        }
    },
    "mlp": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.neural_network.MLPRegressor": 0.3333333333333333,
            "sklearn.neural_network.MLPClassifier": 0.6666666666666666
        },
        "SCIKIT_LEARN": {
            "sklearn.neural_network.MLPClassifier": 1.0
        },
        "NUMPY_VISUALIZATION": {
            "sklearn.neural_network.MLPClassifier": 1.0
        }
    },
    "pca": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.decomposition.PCA": 1.0
        },
        "NUMPY_VISUALIZATION": {
            "sklearn.decomposition.PCA": 1.0
        },
        "STRUCTURED_DATA_VISUALIZATION": {
            "sklearn.decomposition.PCA": 1.0
        }
    },
    "regr": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.ensemble.RandomForestRegressor": 1.0
        },
        "NUMPY_VISUALIZATION": {
            "sklearn.linear_model.RidgeCV": 1.0
        }
    },
    "scale": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.preprocessing.StandardScaler": 1.0
        },
        "NUMPY_VISUALIZATION": {
            "sklearn.preprocessing.StandardScaler": 1.0
        }
    },
    "AUC": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "scipy.integrate.simps": 1.0
        },
        "NUMPY_VISUALIZATION": {
            "sklearn.metrics.roc_auc_score": 1.0
        }
    },
    "b": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.unique": 0.5,
            "numpy.array": 0.5
        },
        "CS771": {
            "numpy.imag": 0.3,
            "numpy.repeat": 0.1,
            "numpy.linspace": 0.1,
            "numpy.random.randn": 0.4,
            "numpy.random.rand": 0.1
        },
        "SCIENTIFIC_COMPUTING": {
            "numpy.array": 0.6,
            "numpy.random.randn": 0.2,
            "numpy.zeros": 0.2
        },
        "STRUCTURED_DATA": {
            "numpy.random.randn": 0.2857142857142857,
            "numpy.zeros": 0.14285714285714285,
            "numpy.array": 0.2857142857142857,
            "numpy.random.rand": 0.14285714285714285,
            "numpy.ones": 0.14285714285714285
        },
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "collections.Counter": 1.0
        },
        "TENSOR_FLOW": {
            "numpy.random.randn": 1.0
        },
        "SCIKIT_LEARN": {
            "numpy.sqrt": 0.3333333333333333,
            "numpy.array": 0.6666666666666666
        },
        "NUMPY_VISUALIZATION": {
            "numpy.array": 0.6,
            "numpy.zeros": 0.2,
            "numpy.ones_like": 0.2
        },
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.array": 1.0
        }
    },
    "bet_number": {
        "IPython": {
            "random.randint": 1.0
        }
    },
    "bet": {
        "IPython": {
            "random.randint": 1.0
        }
    },
    "spin": {
        "IPython": {
            "random.randint": 1.0
        }
    },
    "emoji_pattern": {
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "re.compile": 1.0
        }
    },
    "image_copy": {
        "DEEP_NEURAL_NETWORKS": {
            "numpy.copy": 1.0
        }
    },
    "key_pts_copy": {
        "DEEP_NEURAL_NETWORKS": {
            "numpy.copy": 1.0
        }
    },
    "rand_i": {
        "DEEP_NEURAL_NETWORKS": {
            "numpy.random.randint": 1.0
        }
    },
    "top": {
        "DEEP_NEURAL_NETWORKS": {
            "numpy.random.randint": 1.0
        }
    },
    "left": {
        "DEEP_NEURAL_NETWORKS": {
            "numpy.random.randint": 1.0
        }
    },
    "kf": {
        "NUMPY_VISUALIZATION": {
            "sklearn.model_selection.KFold": 1.0
        },
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.model_selection.KFold": 1.0
        }
    },
    "english_words_counter": {
        "TENSOR_FLOW": {
            "collections.Counter": 1.0
        }
    },
    "french_words_counter": {
        "TENSOR_FLOW": {
            "collections.Counter": 1.0
        }
    },
    "sentences": {
        "TENSOR_FLOW": {
            "numpy.array": 1.0
        }
    },
    "v[\"dW\"+str(l+1)]": {
        "SCIKIT_LEARN": {
            "numpy.zeros_like": 1.0
        }
    },
    "v[\"db\"+str(l+1)]": {
        "SCIKIT_LEARN": {
            "numpy.zeros_like": 1.0
        }
    },
    "s[\"dW\"+str(l+1)]": {
        "SCIKIT_LEARN": {
            "numpy.zeros_like": 1.0
        }
    },
    "s[\"db\"+str(l+1)]": {
        "SCIKIT_LEARN": {
            "numpy.zeros_like": 1.0
        }
    },
    "trained_image": {
        "DEEP_NEURAL_NETWORKS": {
            "numpy.array": 1.0
        }
    },
    "trained_label": {
        "DEEP_NEURAL_NETWORKS": {
            "numpy.array": 1.0
        }
    },
    "im": {
        "DEEP_NEURAL_NETWORKS": {
            "numpy.array": 0.5,
            "numpy.zeros": 0.5
        },
        "TENSOR_FLOW": {
            "numpy.expand_dims": 1.0
        },
        "STRUCTURED_DATA": {
            "numpy.zeros": 1.0
        }
    },
    "self.all_weights": {
        "DEEP_NEURAL_NETWORKS": {
            "numpy.frombuffer": 1.0
        }
    },
    "self.label": {
        "DEEP_NEURAL_NETWORKS": {
            "numpy.argmax": 1.0
        }
    },
    "class_sort": {
        "DEEP_NEURAL_NETWORKS": {
            "numpy.argsort": 1.0
        }
    },
    "size": {
        "DEEP_NEURAL_NETWORKS": {
            "numpy.prod": 1.0
        }
    },
    "image": {
        "DEEP_NEURAL_NETWORKS": {
            "numpy.expand_dims": 1.0
        },
        "STRUCTURED_DATA": {
            "numpy.array": 0.6666666666666666,
            "numpy.reshape": 0.3333333333333333
        },
        "TENSOR_FLOW": {
            "numpy.array": 0.75,
            "numpy.pad": 0.25
        },
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.concatenate": 0.5,
            "numpy.zeros": 0.5
        }
    },
    "score": {
        "NUMPY_VISUALIZATION": {
            "sklearn.metrics.accuracy_score": 0.3333333333333333,
            "sklearn.ensemble.AdaBoostClassifier": 0.1111111111111111,
            "sklearn.tree.DecisionTreeClassifier": 0.1111111111111111,
            "sklearn.model_selection.cross_val_score": 0.4444444444444444
        },
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.model_selection.cross_val_score": 0.5555555555555556,
            "sklearn.metrics.accuracy_score": 0.2222222222222222,
            "numpy.sqrt": 0.2222222222222222
        },
        "STRUCTURED_DATA_VISUALIZATION": {
            "sklearn.model_selection.cross_val_score": 1.0
        },
        "DEEP_NEURAL_NETWORKS": {
            "numpy.mean": 1.0
        },
        "CS771": {
            "numpy.array": 1.0
        }
    },
    "trainX,testX,trainy,testy": {
        "NUMPY_VISUALIZATION": {
            "sklearn.model_selection.train_test_split": 1.0
        }
    },
    "model": {
        "NUMPY_VISUALIZATION": {
            "sklearn.linear_model.LogisticRegression": 0.23529411764705882,
            "sklearn.tree.DecisionTreeRegressor": 0.058823529411764705,
            "sklearn.ensemble.RandomForestRegressor": 0.058823529411764705,
            "sklearn.ensemble.ExtraTreesClassifier": 0.058823529411764705,
            "sklearn.linear_model.LinearRegression": 0.17647058823529413,
            "sklearn.pipeline.Pipeline": 0.058823529411764705,
            "sklearn.ensemble.RandomForestClassifier": 0.058823529411764705,
            "sklearn.feature_selection.SelectFromModel": 0.058823529411764705,
            "sklearn.neural_network.MLPClassifier": 0.17647058823529413,
            "sklearn.svm.SVC": 0.058823529411764705
        },
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.ensemble.RandomForestRegressor": 0.0967741935483871,
            "sklearn.cluster.DBSCAN": 0.06451612903225806,
            "sklearn.cluster.AgglomerativeClustering": 0.03225806451612903,
            "sklearn.linear_model.LinearRegression": 0.25806451612903225,
            "sklearn.manifold.TSNE": 0.12903225806451613,
            "sklearn.linear_model.LogisticRegression": 0.06451612903225806,
            "sklearn.neighbors.KNeighborsClassifier": 0.03225806451612903,
            "sklearn.naive_bayes.GaussianNB": 0.03225806451612903,
            "sklearn.tree.DecisionTreeClassifier": 0.0967741935483871,
            "sklearn.linear_model.SGDRegressor": 0.03225806451612903,
            "sklearn.linear_model.Ridge": 0.03225806451612903,
            "sklearn.linear_model.Lasso": 0.03225806451612903,
            "sklearn.svm.SVC": 0.06451612903225806,
            "sklearn.pipeline.make_pipeline": 0.03225806451612903
        },
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "sklearn.ensemble.RandomForestClassifier": 0.4,
            "sklearn.cluster.KMeans": 0.3,
            "sklearn.cluster.DBSCAN": 0.1,
            "sklearn.neighbors.KNeighborsClassifier": 0.1,
            "sklearn.decomposition.NMF": 0.1
        },
        "SCIENTIFIC_COMPUTING": {
            "sklearn.cluster.KMeans": 1.0
        },
        "STRUCTURED_DATA_VISUALIZATION": {
            "sklearn.cluster.AgglomerativeClustering": 1.0
        },
        "IPython": {
            "sklearn.linear_model.LinearRegression": 1.0
        }
    },
    "self.trees": {
        "STRUCTURED_DATA": {
            "numpy.zeros": 1.0
        }
    },
    "self.fires": {
        "STRUCTURED_DATA": {
            "numpy.zeros": 1.0
        }
    },
    "fires": {
        "STRUCTURED_DATA": {
            "numpy.zeros": 1.0
        }
    },
    "returns": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.dot": 1.0
        }
    },
    "max_sharpe[date]": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.argmax": 1.0
        }
    },
    "weights/": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.sum": 1.0
        }
    },
    "weights": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.random.random": 1.0
        },
        "STRUCTURED_DATA": {
            "numpy.zeros": 1.0
        },
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.array": 1.0
        }
    },
    "mask": {
        "STRUCTURED_DATA": {
            "numpy.where": 0.5,
            "numpy.zeros_like": 0.5
        },
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.zeros_like": 0.6,
            "numpy.zeros": 0.4
        },
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.full": 1.0
        },
        "SCIKIT_LEARN": {
            "numpy.zeros_like": 1.0
        },
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.zeros_like": 1.0
        },
        "CS771": {
            "numpy.random.choice": 0.8,
            "numpy.zeros": 0.2
        },
        "TENSOR_FLOW": {
            "numpy.array": 0.4,
            "numpy.ones": 0.4,
            "numpy.repeat": 0.2
        }
    },
    "u0": {
        "STRUCTURED_DATA": {
            "numpy.ones": 1.0
        }
    },
    "x": {
        "STRUCTURED_DATA": {
            "numpy.linspace": 0.2571428571428571,
            "numpy.loadtxt": 0.05714285714285714,
            "numpy.random.uniform": 0.02857142857142857,
            "numpy.arange": 0.14285714285714285,
            "numpy.asarray": 0.02857142857142857,
            "numpy.expand_dims": 0.05714285714285714,
            "numpy.random.randn": 0.05714285714285714,
            "numpy.random.rand": 0.05714285714285714,
            "numpy.ravel": 0.05714285714285714,
            "numpy.empty": 0.05714285714285714,
            "numpy.array": 0.2
        },
        "IPython": {
            "re.sub": 0.1,
            "random.randrange": 0.5,
            "numpy.arange": 0.4
        },
        "TENSOR_FLOW": {
            "numpy.load": 0.14285714285714285,
            "numpy.random.random": 0.14285714285714285,
            "numpy.random.randint": 0.14285714285714285,
            "numpy.expand_dims": 0.14285714285714285,
            "numpy.random.normal": 0.2857142857142857,
            "numpy.zeros": 0.14285714285714285
        },
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.arange": 0.34782608695652173,
            "numpy.array": 0.17391304347826086,
            "numpy.sort": 0.043478260869565216,
            "numpy.append": 0.2608695652173913,
            "numpy.linspace": 0.08695652173913043,
            "numpy.eye": 0.08695652173913043
        },
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.random.randn": 0.5,
            "numpy.where": 0.5
        },
        "NUMPY_VISUALIZATION": {
            "numpy.asanyarray": 0.09523809523809523,
            "numpy.arange": 0.2857142857142857,
            "numpy.array": 0.47619047619047616,
            "numpy.linspace": 0.09523809523809523,
            "numpy.random.randn": 0.047619047619047616
        },
        "SCIKIT_LEARN": {
            "numpy.log": 0.08333333333333333,
            "numpy.arange": 0.16666666666666666,
            "numpy.linspace": 0.3333333333333333,
            "numpy.random.randn": 0.08333333333333333,
            "numpy.random.standard_normal": 0.08333333333333333,
            "numpy.random.choice": 0.08333333333333333,
            "numpy.linalg.solve": 0.16666666666666666
        },
        "CS771": {
            "numpy.cos": 0.1111111111111111,
            "numpy.linspace": 0.4444444444444444,
            "numpy.random.normal": 0.1111111111111111,
            "numpy.random.randn": 0.3333333333333333
        },
        "REQUESTS": {
            "numpy.arange": 1.0
        },
        "DEEP_NEURAL_NETWORKS": {
            "numpy.array": 0.3333333333333333,
            "numpy.append": 0.3333333333333333,
            "numpy.fromfile": 0.3333333333333333
        },
        "SCIENTIFIC_COMPUTING": {
            "numpy.asarray": 0.5,
            "numpy.random.normal": 0.25,
            "numpy.zeros": 0.25
        },
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.linspace": 1.0
        }
    },
    "projection": {
        "NUMPY_VISUALIZATION": {
            "sklearn.manifold.TSNE": 1.0
        }
    },
    "kmeans": {
        "NUMPY_VISUALIZATION": {
            "sklearn.cluster.KMeans": 1.0
        },
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.cluster.KMeans": 1.0
        },
        "REQUESTS": {
            "sklearn.cluster.KMeans": 1.0
        },
        "STRUCTURED_DATA_VISUALIZATION": {
            "sklearn.cluster.KMeans": 1.0
        }
    },
    "mask_img": {
        "STRUCTURED_DATA": {
            "numpy.array": 1.0
        }
    },
    "mdl": {
        "REQUESTS": {
            "sklearn.tree.DecisionTreeClassifier": 1.0
        }
    },
    "mismP": {
        "CS771": {
            "numpy.array": 0.5,
            "numpy.append": 0.5
        }
    },
    "mismQ": {
        "CS771": {
            "numpy.array": 0.5,
            "numpy.append": 0.5
        }
    },
    "Y": {
        "CS771": {
            "numpy.zeros": 1.0
        },
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.array": 1.0
        },
        "STRUCTURED_DATA": {
            "numpy.arange": 0.5,
            "numpy.asarray": 0.5
        },
        "DEEP_NEURAL_NETWORKS": {
            "numpy.zeros": 1.0
        }
    },
    "tii": {
        "CS771": {
            "numpy.zeros": 1.0
        }
    },
    "tjj": {
        "CS771": {
            "numpy.zeros": 1.0
        }
    },
    "tij": {
        "CS771": {
            "numpy.zeros": 1.0
        }
    },
    "H": {
        "CS771": {
            "numpy.zeros": 1.0
        }
    },
    "N": {
        "CS771": {
            "numpy.zeros": 1.0
        },
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.sum": 1.0
        }
    },
    "M": {
        "CS771": {
            "numpy.zeros": 0.6666666666666666,
            "numpy.stack": 0.3333333333333333
        },
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "numpy.argmax": 1.0
        },
        "SCIKIT_LEARN": {
            "numpy.vstack": 1.0
        }
    },
    "L": {
        "CS771": {
            "numpy.zeros": 1.0
        },
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.arange": 1.0
        },
        "SCIKIT_LEARN": {
            "numpy.linspace": 0.5,
            "numpy.zeros": 0.5
        }
    },
    "B_line": {
        "CS771": {
            "numpy.zeros": 1.0
        }
    },
    "B_2line": {
        "CS771": {
            "numpy.zeros": 1.0
        }
    },
    "P_Calc": {
        "CS771": {
            "numpy.zeros_like": 1.0
        }
    },
    "Q_Calc": {
        "CS771": {
            "numpy.zeros_like": 1.0
        }
    },
    "DP": {
        "CS771": {
            "numpy.zeros_like": 1.0
        }
    },
    "DQ": {
        "CS771": {
            "numpy.zeros_like": 1.0
        }
    },
    "DV": {
        "CS771": {
            "numpy.dot": 1.0
        }
    },
    "d_theta": {
        "CS771": {
            "numpy.dot": 1.0
        }
    },
    "dV": {
        "CS771": {
            "numpy.dot": 1.0
        }
    },
    "J1": {
        "CS771": {
            "numpy.hstack": 1.0
        }
    },
    "J2": {
        "CS771": {
            "numpy.hstack": 1.0
        }
    },
    "B": {
        "CS771": {
            "numpy.imag": 0.6666666666666666,
            "numpy.hstack": 0.3333333333333333
        },
        "NUMPY_VISUALIZATION": {
            "numpy.array": 1.0
        },
        "SCIENTIFIC_COMPUTING": {
            "numpy.array": 1.0
        },
        "TENSOR_FLOW": {
            "numpy.asarray": 0.5,
            "numpy.reshape": 0.5
        }
    },
    "G": {
        "CS771": {
            "numpy.real": 1.0
        }
    },
    "g": {
        "CS771": {
            "numpy.real": 1.0
        },
        "STRUCTURED_DATA": {
            "numpy.exp": 1.0
        },
        "SCIKIT_LEARN": {
            "numpy.sum": 1.0
        },
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.array": 1.0
        }
    },
    "data_branches": {
        "CS771": {
            "numpy.loadtxt": 1.0
        }
    },
    "node_data": {
        "CS771": {
            "numpy.loadtxt": 1.0
        }
    },
    "node2_data": {
        "CS771": {
            "numpy.loadtxt": 1.0
        }
    },
    "J": {
        "CS771": {
            "numpy.linalg.inv": 1.0
        }
    },
    "B_line_inv": {
        "CS771": {
            "numpy.linalg.inv": 1.0
        }
    },
    "B_2line_inv": {
        "CS771": {
            "numpy.linalg.inv": 1.0
        }
    },
    "rf": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.ensemble.RandomForestClassifier": 0.9130434782608695,
            "sklearn.ensemble.RandomForestRegressor": 0.08695652173913043
        },
        "STRUCTURED_DATA_VISUALIZATION": {
            "sklearn.ensemble.RandomForestClassifier": 1.0
        },
        "NUMPY_VISUALIZATION": {
            "sklearn.ensemble.RandomForestClassifier": 0.5,
            "sklearn.ensemble.RandomForestRegressor": 0.5
        }
    },
    "X_TSNE": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.manifold.TSNE": 1.0
        }
    },
    "ann_id": {
        "STRUCTURED_DATA": {
            "numpy.random.choice": 1.0
        }
    },
    "big_mat1": {
        "SCIENTIFIC_COMPUTING": {
            "numpy.ones": 1.0
        }
    },
    "big_mat2": {
        "SCIENTIFIC_COMPUTING": {
            "numpy.ones": 1.0
        }
    },
    "features": {
        "TENSOR_FLOW": {
            "numpy.array": 1.0
        },
        "DEEP_NEURAL_NETWORKS": {
            "numpy.zeros": 0.5,
            "numpy.concatenate": 0.5
        },
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.array": 1.0
        },
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.zeros": 1.0
        },
        "NUMPY_VISUALIZATION": {
            "numpy.array": 1.0
        },
        "STRUCTURED_DATA": {
            "numpy.hstack": 1.0
        }
    },
    "batch_x": {
        "TENSOR_FLOW": {
            "numpy.array": 1.0
        }
    },
    "batch_y": {
        "TENSOR_FLOW": {
            "numpy.array": 1.0
        }
    },
    "delta": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.array": 0.5,
            "numpy.dot": 0.5
        }
    },
    "stamp": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.array": 1.0
        }
    },
    "total_recording_time": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "datetime.timedelta": 1.0
        }
    },
    "data['dist']": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.sqrt": 1.0
        }
    },
    "X_std": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.preprocessing.StandardScaler": 1.0
        }
    },
    "X_std_test": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.preprocessing.StandardScaler": 1.0
        }
    },
    "sklearn_pca": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.decomposition.PCA": 1.0
        }
    },
    "classes": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.array": 0.5,
            "numpy.unique": 0.5
        },
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.unique": 1.0
        },
        "STRUCTURED_DATA": {
            "numpy.array": 1.0
        }
    },
    "prediction": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.random.choice": 1.0
        },
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.argmax": 0.5,
            "numpy.reshape": 0.5
        }
    },
    "random_sample": {
        "SCIENTIFIC_COMPUTING": {
            "numpy.random.choice": 1.0
        }
    },
    "statistical_population": {
        "SCIENTIFIC_COMPUTING": {
            "numpy.random.randint": 1.0
        }
    },
    "scores": {
        "NUMPY_VISUALIZATION": {
            "sklearn.model_selection.cross_val_score": 1.0
        },
        "STRUCTURED_DATA_VISUALIZATION": {
            "sklearn.model_selection.cross_val_score": 1.0
        },
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.model_selection.cross_val_score": 1.0
        },
        "STRUCTURED_DATA": {
            "numpy.dot": 1.0
        },
        "IPython": {
            "sklearn.model_selection.cross_val_score": 1.0
        }
    },
    "ox,oy": {
        "DEEP_NEURAL_NETWORKS": {
            "random.randint": 1.0
        }
    },
    "X_fooling_np": {
        "DEEP_NEURAL_NETWORKS": {
            "numpy.asarray": 1.0
        }
    },
    "diff": {
        "DEEP_NEURAL_NETWORKS": {
            "numpy.asarray": 1.0
        }
    },
    "target_y": {
        "DEEP_NEURAL_NETWORKS": {
            "numpy.random.randint": 1.0
        }
    },
    "X_grid": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.arange": 1.0
        }
    },
    "rmse": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.sqrt": 1.0
        },
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.sqrt": 1.0
        },
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.sqrt": 1.0
        }
    },
    "sc_X": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.preprocessing.StandardScaler": 1.0
        },
        "NUMPY_VISUALIZATION": {
            "sklearn.preprocessing.StandardScaler": 1.0
        },
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "sklearn.preprocessing.StandardScaler": 1.0
        }
    },
    "lin_reg": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.linear_model.LinearRegression": 1.0
        },
        "STRUCTURED_DATA_VISUALIZATION": {
            "sklearn.linear_model.LinearRegression": 1.0
        },
        "NUMPY_VISUALIZATION": {
            "sklearn.linear_model.LinearRegression": 1.0
        }
    },
    "lin_reg_2": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.linear_model.LinearRegression": 1.0
        }
    },
    "poly_reg": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.preprocessing.PolynomialFeatures": 1.0
        },
        "NUMPY_VISUALIZATION": {
            "sklearn.preprocessing.PolynomialFeatures": 1.0
        }
    },
    "range_arrays": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.arange": 1.0
        }
    },
    "a1": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.array": 1.0
        },
        "NUMPY_VISUALIZATION": {
            "numpy.ones": 1.0
        }
    },
    "a2": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.array": 1.0
        },
        "NUMPY_VISUALIZATION": {
            "numpy.zeros": 1.0
        }
    },
    "a3": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.array": 1.0
        }
    },
    "sample_array": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.array": 1.0
        }
    },
    "high_var_arr": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.array": 1.0
        }
    },
    "low_var_arr": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.array": 1.0
        }
    },
    "zeros": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.zeros": 1.0
        },
        "SCIKIT_LEARN": {
            "numpy.zeros": 1.0
        }
    },
    "ones": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.ones": 1.0
        },
        "SCIKIT_LEARN": {
            "numpy.ones": 1.0
        },
        "TENSOR_FLOW": {
            "numpy.where": 1.0
        }
    },
    "rand_arr_3": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.random.rand": 1.0
        }
    },
    "random_array": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.random.randint": 1.0
        }
    },
    "rand_arr_4": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.random.randint": 1.0
        }
    },
    "a4": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.random.randint": 1.0
        }
    },
    "rand_arr_2": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.random.random": 1.0
        }
    },
    "massive_array": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.random.random": 1.0
        }
    },
    "images": {
        "STRUCTURED_DATA": {
            "numpy.array": 1.0
        },
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.reshape": 0.6666666666666666,
            "numpy.transpose": 0.3333333333333333
        },
        "DEEP_NEURAL_NETWORKS": {
            "numpy.pad": 1.0
        },
        "TENSOR_FLOW": {
            "numpy.array": 1.0
        }
    },
    "imageTest": {
        "STRUCTURED_DATA": {
            "numpy.array": 1.0
        }
    },
    "sample": {
        "STRUCTURED_DATA": {
            "numpy.array": 1.0
        }
    },
    "fold": {
        "NUMPY_VISUALIZATION": {
            "sklearn.model_selection.StratifiedKFold": 1.0
        }
    },
    "X_train,X_val,y_train,y_val": {
        "NUMPY_VISUALIZATION": {
            "sklearn.model_selection.train_test_split": 1.0
        },
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.model_selection.train_test_split": 1.0
        },
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "sklearn.model_selection.train_test_split": 1.0
        }
    },
    "data": {
        "NUMPY_VISUALIZATION": {
            "numpy.array": 0.125,
            "sklearn.datasets.load_iris": 0.125,
            "sklearn.datasets.fetch_20newsgroups_vectorized": 0.125,
            "sklearn.datasets.load_wine": 0.125,
            "numpy.asarray": 0.125,
            "numpy.transpose": 0.125,
            "sklearn.preprocessing.scale": 0.125,
            "numpy.pad": 0.125
        },
        "STRUCTURED_DATA": {
            "numpy.random.randint": 0.045454545454545456,
            "numpy.random.random_sample": 0.18181818181818182,
            "numpy.array": 0.13636363636363635,
            "numpy.squeeze": 0.045454545454545456,
            "numpy.zeros": 0.13636363636363635,
            "numpy.load": 0.045454545454545456,
            "numpy.genfromtxt": 0.045454545454545456,
            "numpy.asarray": 0.09090909090909091,
            "numpy.transpose": 0.09090909090909091,
            "json.loads": 0.18181818181818182
        },
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.array": 1.0
        },
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.datasets.fetch_species_distributions": 1.0
        },
        "CS771": {
            "numpy.loadtxt": 0.5,
            "numpy.array": 0.5
        },
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "numpy.zeros": 0.5,
            "json.load": 0.5
        },
        "TENSOR_FLOW": {
            "json.load": 1.0
        },
        "IPython": {
            "json.dumps": 1.0
        },
        "SCIENTIFIC_COMPUTING": {
            "numpy.random.randn": 0.6666666666666666,
            "numpy.zeros": 0.3333333333333333
        },
        "REQUESTS": {
            "json.loads": 0.5,
            "json.load": 0.5
        },
        "DEEP_NEURAL_NETWORKS": {
            "numpy.load": 0.16666666666666666,
            "numpy.sin": 0.3333333333333333,
            "json.load": 0.5
        },
        "STRUCTURED_DATA_VISUALIZATION": {
            "json.load": 0.6666666666666666,
            "numpy.asarray": 0.3333333333333333
        }
    },
    "target": {
        "NUMPY_VISUALIZATION": {
            "numpy.array": 1.0
        },
        "DEEP_NEURAL_NETWORKS": {
            "numpy.array": 1.0
        },
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.argmax": 1.0
        },
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.where": 1.0
        }
    },
    "xtrain,xtest,ytrain,ytest": {
        "NUMPY_VISUALIZATION": {
            "sklearn.model_selection.train_test_split": 1.0
        },
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.model_selection.train_test_split": 1.0
        }
    },
    "wine": {
        "NUMPY_VISUALIZATION": {
            "sklearn.datasets.load_wine": 1.0
        }
    },
    "X_TF_train": {
        "TENSOR_FLOW": {
            "numpy.array": 1.0
        }
    },
    "y_TF_train": {
        "TENSOR_FLOW": {
            "numpy.array": 1.0
        }
    },
    "X_TF_pred": {
        "TENSOR_FLOW": {
            "numpy.array": 1.0
        }
    },
    "y_TF_pred": {
        "TENSOR_FLOW": {
            "numpy.array": 1.0
        }
    },
    "mean_tpr": {
        "TENSOR_FLOW": {
            "numpy.zeros_like": 1.0
        }
    },
    "tempX": {
        "TENSOR_FLOW": {
            "numpy.expand_dims": 1.0
        }
    },
    "all_fpr": {
        "TENSOR_FLOW": {
            "numpy.unique": 1.0
        }
    },
    "array": {
        "TENSOR_FLOW": {
            "numpy.load": 1.0
        },
        "NUMPY_VISUALIZATION": {
            "numpy.array": 1.0
        },
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.zeros": 1.0
        }
    },
    "X_TF_train,X_TF_test,y_TF_train,y_TF_test": {
        "TENSOR_FLOW": {
            "sklearn.model_selection.train_test_split": 1.0
        }
    },
    "fpr[i],tpr[i],_": {
        "TENSOR_FLOW": {
            "sklearn.metrics.roc_curve": 1.0
        }
    },
    "fpr[\"micro\"],tpr[\"micro\"],_": {
        "TENSOR_FLOW": {
            "sklearn.metrics.roc_curve": 1.0
        }
    },
    "roc_auc[i]": {
        "TENSOR_FLOW": {
            "sklearn.metrics.auc": 1.0
        }
    },
    "roc_auc[\"micro\"]": {
        "TENSOR_FLOW": {
            "sklearn.metrics.auc": 1.0
        }
    },
    "roc_auc[\"macro\"]": {
        "TENSOR_FLOW": {
            "sklearn.metrics.auc": 1.0
        }
    },
    "gbrt": {
        "TENSOR_FLOW": {
            "sklearn.ensemble.GradientBoostingClassifier": 1.0
        }
    },
    "figsize": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.array": 1.0
        }
    },
    "axes": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.array": 1.0
        },
        "STRUCTURED_DATA": {
            "numpy.full": 1.0
        }
    },
    "a": {
        "CS771": {
            "numpy.array": 0.3333333333333333,
            "numpy.linspace": 0.2222222222222222,
            "numpy.random.rand": 0.1111111111111111,
            "numpy.random.randn": 0.3333333333333333
        },
        "SCIENTIFIC_COMPUTING": {
            "numpy.array": 0.8,
            "numpy.arange": 0.2
        },
        "STRUCTURED_DATA": {
            "numpy.array": 0.6666666666666666,
            "numpy.ones": 0.1111111111111111,
            "numpy.zeros": 0.2222222222222222
        },
        "DEEP_NEURAL_NETWORKS": {
            "numpy.array": 0.2857142857142857,
            "numpy.where": 0.2857142857142857,
            "numpy.concatenate": 0.14285714285714285,
            "numpy.zeros": 0.14285714285714285,
            "numpy.ones": 0.14285714285714285
        },
        "SCIKIT_LEARN": {
            "numpy.linspace": 1.0
        },
        "NUMPY_VISUALIZATION": {
            "sklearn.metrics.r2_score": 0.05,
            "numpy.arange": 0.15,
            "numpy.array": 0.65,
            "numpy.zeros": 0.05,
            "numpy.empty": 0.05,
            "numpy.random.choice": 0.05
        },
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.array": 0.5,
            "numpy.asarray": 0.5
        },
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.arange": 0.25,
            "numpy.array": 0.75
        }
    },
    "assertnp.all(new_array": {
        "CS771": {
            "numpy.array": 1.0
        }
    },
    "y": {
        "CS771": {
            "numpy.array": 0.2222222222222222,
            "numpy.sin": 0.1111111111111111,
            "numpy.random.normal": 0.1111111111111111,
            "numpy.zeros": 0.1111111111111111,
            "numpy.asarray": 0.1111111111111111,
            "numpy.random.randint": 0.3333333333333333
        },
        "STRUCTURED_DATA": {
            "numpy.sin": 0.05,
            "numpy.loadtxt": 0.1,
            "numpy.random.uniform": 0.1,
            "numpy.arange": 0.2,
            "numpy.ravel": 0.1,
            "numpy.linspace": 0.2,
            "numpy.random.rand": 0.05,
            "numpy.array": 0.15,
            "numpy.empty_like": 0.05
        },
        "NUMPY_VISUALIZATION": {
            "numpy.reshape": 0.09090909090909091,
            "numpy.array": 0.5454545454545454,
            "numpy.asanyarray": 0.18181818181818182,
            "numpy.log": 0.09090909090909091,
            "numpy.linspace": 0.09090909090909091
        },
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.array": 0.4,
            "numpy.arange": 0.2,
            "numpy.sin": 0.2,
            "numpy.linspace": 0.2
        },
        "IPython": {
            "random.randrange": 1.0
        },
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.random.randn": 1.0
        },
        "SCIKIT_LEARN": {
            "numpy.log": 0.1,
            "numpy.arange": 0.1,
            "numpy.random.standard_normal": 0.1,
            "numpy.array": 0.2,
            "numpy.exp": 0.1,
            "numpy.zeros": 0.1,
            "numpy.linalg.solve": 0.1,
            "numpy.hstack": 0.1,
            "numpy.sin": 0.1
        },
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.array": 0.5,
            "numpy.empty": 0.25,
            "numpy.log": 0.25
        },
        "TENSOR_FLOW": {
            "numpy.random.randint": 0.5,
            "numpy.zeros": 0.5
        },
        "DEEP_NEURAL_NETWORKS": {
            "numpy.ones": 0.5,
            "numpy.array": 0.25,
            "numpy.append": 0.25
        }
    },
    "indices": {
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "numpy.argsort": 0.6666666666666666,
            "numpy.zeros": 0.3333333333333333
        },
        "NUMPY_VISUALIZATION": {
            "numpy.argsort": 0.8333333333333334,
            "numpy.nonzero": 0.16666666666666666
        },
        "TENSOR_FLOW": {
            "numpy.arange": 1.0
        },
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.argsort": 1.0
        },
        "STRUCTURED_DATA": {
            "numpy.argmax": 1.0
        }
    },
    "std": {
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "numpy.std": 1.0
        },
        "STRUCTURED_DATA": {
            "numpy.zeros": 1.0
        },
        "NUMPY_VISUALIZATION": {
            "numpy.std": 0.5,
            "numpy.nanstd": 0.5
        },
        "DEEP_NEURAL_NETWORKS": {
            "numpy.array": 1.0
        }
    },
    "bins": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.linspace": 0.5,
            "numpy.arange": 0.5
        },
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "numpy.linspace": 1.0
        },
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.arange": 0.6666666666666666,
            "numpy.linspace": 0.3333333333333333
        },
        "NUMPY_VISUALIZATION": {
            "numpy.arange": 1.0
        },
        "SCIKIT_LEARN": {
            "numpy.linspace": 1.0
        }
    },
    "bestfeatures": {
        "NUMPY_VISUALIZATION": {
            "sklearn.feature_selection.SelectKBest": 1.0
        }
    },
    "ifdirty_data['time'][i]>": {
        "SCIENTIFIC_COMPUTING": {
            "datetime.timedelta": 1.0
        }
    },
    "anddirty_data['time'][i]<": {
        "SCIENTIFIC_COMPUTING": {
            "datetime.timedelta": 1.0
        }
    },
    "price": {
        "SCIENTIFIC_COMPUTING": {
            "numpy.where": 1.0
        }
    },
    "outlier_data['residual'][i]": {
        "SCIENTIFIC_COMPUTING": {
            "numpy.absolute": 1.0
        }
    },
    "Q1": {
        "SCIENTIFIC_COMPUTING": {
            "numpy.percentile": 1.0
        }
    },
    "out_index.append(i)Q1": {
        "SCIENTIFIC_COMPUTING": {
            "numpy.percentile": 1.0
        }
    },
    "break_prices": {
        "SCIENTIFIC_COMPUTING": {
            "numpy.linalg.solve": 1.0
        }
    },
    "lunch_prices": {
        "SCIENTIFIC_COMPUTING": {
            "numpy.linalg.solve": 1.0
        }
    },
    "dinner_prices": {
        "SCIENTIFIC_COMPUTING": {
            "numpy.linalg.solve": 1.0
        }
    },
    "dirty_data['order_items'][i]": {
        "SCIENTIFIC_COMPUTING": {
            "re.sub": 1.0
        }
    },
    "max_sims": {
        "NUMPY_VISUALIZATION": {
            "collections.Counter": 1.0
        }
    },
    "return(100.0*np.sum(np.argmax(predictions,1)": {
        "TENSOR_FLOW": {
            "numpy.argmax": 1.0
        }
    },
    "trainX": {
        "TENSOR_FLOW": {
            "numpy.linspace": 1.0
        },
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "numpy.hstack": 1.0
        }
    },
    "correct_scores": {
        "CS771": {
            "numpy.asarray": 1.0
        },
        "STRUCTURED_DATA": {
            "numpy.asarray": 1.0
        }
    },
    "mean_image": {
        "CS771": {
            "numpy.mean": 1.0
        },
        "STRUCTURED_DATA": {
            "numpy.mean": 1.0
        }
    },
    "X_train": {
        "CS771": {
            "numpy.reshape": 0.6,
            "numpy.hstack": 0.4
        },
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.array": 1.0
        },
        "TENSOR_FLOW": {
            "numpy.append": 0.6666666666666666,
            "numpy.array": 0.3333333333333333
        },
        "NUMPY_VISUALIZATION": {
            "numpy.reshape": 1.0
        },
        "SCIENTIFIC_COMPUTING": {
            "numpy.empty": 1.0
        }
    },
    "X_val": {
        "CS771": {
            "numpy.reshape": 0.5555555555555556,
            "numpy.hstack": 0.4444444444444444
        },
        "TENSOR_FLOW": {
            "numpy.array": 1.0
        }
    },
    "X_test": {
        "CS771": {
            "numpy.reshape": 0.6,
            "numpy.hstack": 0.4
        },
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.array": 1.0
        },
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.array": 0.5,
            "numpy.reshape": 0.5
        },
        "NUMPY_VISUALIZATION": {
            "numpy.reshape": 0.3333333333333333,
            "numpy.array": 0.6666666666666666
        },
        "SCIENTIFIC_COMPUTING": {
            "numpy.empty": 1.0
        },
        "TENSOR_FLOW": {
            "numpy.array": 1.0
        }
    },
    "channel_states": {
        "SCIKIT_LEARN": {
            "numpy.zeros": 1.0
        }
    },
    "v_gnd": {
        "SCIKIT_LEARN": {
            "numpy.mean": 1.0
        }
    },
    "v_abs_mean": {
        "SCIKIT_LEARN": {
            "numpy.mean": 1.0
        }
    },
    "v_filtered_mean": {
        "SCIKIT_LEARN": {
            "numpy.mean": 1.0
        }
    },
    "ind": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.arange": 1.0
        },
        "TENSOR_FLOW": {
            "numpy.arange": 1.0
        },
        "CS771": {
            "numpy.array": 1.0
        },
        "SCIKIT_LEARN": {
            "numpy.where": 1.0
        },
        "DEEP_NEURAL_NETWORKS": {
            "numpy.random.permutation": 1.0
        },
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.argsort": 1.0
        }
    },
    "y_train": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.array": 1.0
        },
        "TENSOR_FLOW": {
            "numpy.append": 0.5,
            "numpy.array": 0.25,
            "numpy.reshape": 0.25
        },
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.log": 1.0
        },
        "NUMPY_VISUALIZATION": {
            "numpy.ravel": 1.0
        }
    },
    "h,w": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.array": 1.0
        }
    },
    "y_test": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.array": 1.0
        },
        "TENSOR_FLOW": {
            "numpy.array": 0.5,
            "numpy.reshape": 0.5
        }
    },
    "labels": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.fromfile": 0.2,
            "numpy.array": 0.6,
            "numpy.ndarray": 0.2
        },
        "TENSOR_FLOW": {
            "numpy.expand_dims": 0.25,
            "numpy.array": 0.25,
            "numpy.zeros": 0.25,
            "numpy.ndarray": 0.25
        },
        "NUMPY_VISUALIZATION": {
            "numpy.array": 1.0
        },
        "SCIENTIFIC_COMPUTING": {
            "numpy.array": 1.0
        }
    },
    "everything": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.fromfile": 1.0
        }
    },
    "pred": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.argmax": 0.5,
            "sklearn.metrics.accuracy_score": 0.5
        },
        "NUMPY_VISUALIZATION": {
            "sklearn.model_selection.cross_val_predict": 1.0
        }
    },
    "yhat": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.argmax": 1.0
        }
    },
    "yhat_cnn": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.argmax": 1.0
        }
    },
    "yhat_mlp": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.argmax": 1.0
        }
    },
    "error": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.var": 1.0
        }
    },
    "mean_fpr": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.linspace": 1.0
        }
    },
    "x_train_up": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.stack": 1.0
        }
    },
    "x_test_up": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.stack": 1.0
        }
    },
    "X_train_cnn": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.expand_dims": 1.0
        }
    },
    "X_test_cnn": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.expand_dims": 1.0
        }
    },
    "fpr,tpr,thresholds": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "sklearn.metrics.roc_curve": 1.0
        },
        "SCIKIT_LEARN": {
            "sklearn.metrics.roc_curve": 1.0
        },
        "NUMPY_VISUALIZATION": {
            "sklearn.metrics.roc_curve": 1.0
        },
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.metrics.roc_curve": 1.0
        },
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "sklearn.metrics.roc_curve": 1.0
        }
    },
    "roc_auc+": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "sklearn.metrics.auc": 1.0
        }
    },
    "skf": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "sklearn.model_selection.StratifiedKFold": 1.0
        },
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.model_selection.StratifiedKFold": 1.0
        }
    },
    "cf_a": {
        "STRUCTURED_DATA": {
            "numpy.array": 1.0
        }
    },
    "add_cf": {
        "STRUCTURED_DATA": {
            "numpy.array": 1.0
        }
    },
    "cf": {
        "STRUCTURED_DATA": {
            "numpy.array": 1.0
        }
    },
    "cf_add": {
        "STRUCTURED_DATA": {
            "numpy.array": 1.0
        }
    },
    "n": {
        "STRUCTURED_DATA": {
            "numpy.array": 0.5,
            "numpy.zeros": 0.5
        },
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.random.uniform": 1.0
        },
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.column_stack": 1.0
        }
    },
    "cf1": {
        "STRUCTURED_DATA": {
            "numpy.array": 1.0
        }
    },
    "x_train,x_test,y_train,y_test": {
        "TENSOR_FLOW": {
            "sklearn.model_selection.train_test_split": 1.0
        },
        "NUMPY_VISUALIZATION": {
            "sklearn.model_selection.train_test_split": 1.0
        },
        "IPython": {
            "sklearn.model_selection.train_test_split": 1.0
        },
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.model_selection.train_test_split": 1.0
        }
    },
    "dummy": {
        "TENSOR_FLOW": {
            "sklearn.dummy.DummyClassifier": 1.0
        }
    },
    "X,y": {
        "TENSOR_FLOW": {
            "numpy.array": 0.5,
            "sklearn.datasets.make_classification": 0.5
        },
        "NUMPY_VISUALIZATION": {
            "sklearn.datasets.make_classification": 0.3333333333333333,
            "sklearn.datasets.make_blobs": 0.3333333333333333,
            "sklearn.datasets.make_moons": 0.3333333333333333
        }
    },
    "embedding_matrix": {
        "TENSOR_FLOW": {
            "numpy.zeros": 1.0
        }
    },
    "raw_data": {
        "NUMPY_VISUALIZATION": {
            "numpy.random.randint": 1.0
        }
    },
    "qtable": {
        "STRUCTURED_DATA": {
            "numpy.zeros": 1.0
        }
    },
    "action": {
        "STRUCTURED_DATA": {
            "numpy.argmax": 1.0
        },
        "STRUCTURED_DATA_VISUALIZATION": {
            "random.randint": 1.0
        },
        "TENSOR_FLOW": {
            "numpy.argmax": 0.6666666666666666,
            "numpy.random.randint": 0.3333333333333333
        }
    },
    "exploration_prob": {
        "STRUCTURED_DATA": {
            "numpy.random.uniform": 1.0
        }
    },
    "counter": {
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "collections.Counter": 1.0
        },
        "NUMPY_VISUALIZATION": {
            "collections.Counter": 1.0
        },
        "REQUESTS": {
            "collections.Counter": 1.0
        }
    },
    "tempCounter": {
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "collections.Counter": 1.0
        }
    },
    "c_pos": {
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "collections.Counter": 1.0
        }
    },
    "c_neg": {
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "collections.Counter": 1.0
        }
    },
    "tiny_image": {
        "STRUCTURED_DATA": {
            "numpy.array": 1.0
        }
    },
    "max_val": {
        "STRUCTURED_DATA": {
            "numpy.amax": 1.0
        },
        "NUMPY_VISUALIZATION": {
            "numpy.nanmax": 1.0
        }
    },
    "min_val": {
        "STRUCTURED_DATA": {
            "numpy.amin": 1.0
        },
        "NUMPY_VISUALIZATION": {
            "numpy.nanmin": 1.0
        }
    },
    "extras": {
        "STRUCTURED_DATA": {
            "numpy.ones": 1.0
        }
    },
    "T": {
        "STRUCTURED_DATA": {
            "numpy.float32": 1.0
        },
        "NUMPY_VISUALIZATION": {
            "numpy.array": 1.0
        },
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.zeros": 1.0
        }
    },
    "x_values": {
        "SCIKIT_LEARN": {
            "numpy.linspace": 1.0
        }
    },
    "random_x": {
        "SCIKIT_LEARN": {
            "numpy.random.randint": 1.0
        }
    },
    "random_y": {
        "SCIKIT_LEARN": {
            "numpy.random.randint": 1.0
        }
    },
    "y_values": {
        "SCIKIT_LEARN": {
            "numpy.random.randn": 1.0
        }
    },
    "x_train,y_train": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.array": 1.0
        }
    },
    "x_test": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.array": 0.5,
            "numpy.reshape": 0.5
        },
        "TENSOR_FLOW": {
            "numpy.array": 1.0
        },
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.concatenate": 1.0
        },
        "NUMPY_VISUALIZATION": {
            "numpy.asarray": 1.0
        },
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "numpy.matrix": 1.0
        }
    },
    "x_train": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.reshape": 1.0
        },
        "TENSOR_FLOW": {
            "numpy.array": 1.0
        },
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.concatenate": 1.0
        },
        "NUMPY_VISUALIZATION": {
            "numpy.asarray": 1.0
        },
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "numpy.matrix": 1.0
        }
    },
    "scaler": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "sklearn.preprocessing.MinMaxScaler": 1.0
        },
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.preprocessing.StandardScaler": 0.6666666666666666,
            "sklearn.preprocessing.MinMaxScaler": 0.3333333333333333
        },
        "NUMPY_VISUALIZATION": {
            "sklearn.preprocessing.StandardScaler": 0.5454545454545454,
            "sklearn.preprocessing.MinMaxScaler": 0.45454545454545453
        },
        "TENSOR_FLOW": {
            "sklearn.preprocessing.StandardScaler": 1.0
        },
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "sklearn.preprocessing.StandardScaler": 1.0
        },
        "STRUCTURED_DATA_VISUALIZATION": {
            "sklearn.preprocessing.StandardScaler": 0.25,
            "sklearn.preprocessing.MinMaxScaler": 0.75
        }
    },
    "df": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "datetime.date": 1.0
        }
    },
    "train_Y": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.log1p": 1.0
        },
        "NUMPY_VISUALIZATION": {
            "numpy.log1p": 1.0
        }
    },
    "MMEncoder": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.preprocessing.MinMaxScaler": 1.0
        }
    },
    "estimator": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.linear_model.LinearRegression": 0.6428571428571429,
            "numpy.array": 0.07142857142857142,
            "sklearn.ensemble.RandomForestRegressor": 0.07142857142857142,
            "sklearn.linear_model.LogisticRegression": 0.21428571428571427
        },
        "STRUCTURED_DATA_VISUALIZATION": {
            "sklearn.tree.DecisionTreeClassifier": 0.3333333333333333,
            "sklearn.ensemble.RandomForestClassifier": 0.3333333333333333,
            "sklearn.linear_model.TheilSenRegressor": 0.3333333333333333
        },
        "NUMPY_VISUALIZATION": {
            "sklearn.linear_model.LogisticRegression": 0.5555555555555556,
            "sklearn.linear_model.LinearRegression": 0.2222222222222222,
            "sklearn.ensemble.GradientBoostingRegressor": 0.2222222222222222
        }
    },
    "x,y": {
        "NUMPY_VISUALIZATION": {
            "numpy.array": 1.0
        },
        "STRUCTURED_DATA": {
            "numpy.meshgrid": 1.0
        },
        "CS771": {
            "numpy.random.uniform": 1.0
        }
    },
    "padding": {
        "NUMPY_VISUALIZATION": {
            "numpy.zeros": 0.5,
            "numpy.ones": 0.5
        }
    },
    "for_predict": {
        "NUMPY_VISUALIZATION": {
            "numpy.reshape": 1.0
        }
    },
    "predictions_scaled": {
        "NUMPY_VISUALIZATION": {
            "numpy.append": 1.0
        }
    },
    "sc": {
        "NUMPY_VISUALIZATION": {
            "sklearn.preprocessing.MinMaxScaler": 0.3333333333333333,
            "sklearn.preprocessing.StandardScaler": 0.6666666666666666
        },
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.preprocessing.StandardScaler": 0.75,
            "sklearn.preprocessing.MinMaxScaler": 0.25
        }
    },
    "pipeline": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.pipeline.make_pipeline": 0.5,
            "sklearn.pipeline.Pipeline": 0.5
        },
        "NUMPY_VISUALIZATION": {
            "sklearn.pipeline.Pipeline": 1.0
        },
        "SCIENTIFIC_COMPUTING": {
            "sklearn.pipeline.Pipeline": 1.0
        }
    },
    "tracer": {
        "STRUCTURED_DATA": {
            "numpy.zeros": 0.5,
            "numpy.fromfile": 0.125,
            "numpy.ones": 0.125,
            "numpy.expand_dims": 0.25
        }
    },
    "grid_zeros": {
        "STRUCTURED_DATA": {
            "numpy.zeros": 1.0
        }
    },
    "dt": {
        "STRUCTURED_DATA": {
            "numpy.dtype": 0.5,
            "numpy.random.uniform": 0.5
        },
        "STRUCTURED_DATA_VISUALIZATION": {
            "sklearn.tree.DecisionTreeClassifier": 1.0
        },
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.tree.DecisionTreeClassifier": 1.0
        }
    },
    "zi": {
        "STRUCTURED_DATA": {
            "numpy.concatenate": 1.0
        }
    },
    "tracer[:,:,kk]": {
        "STRUCTURED_DATA": {
            "numpy.ones": 1.0
        }
    },
    "tracer_rsh": {
        "STRUCTURED_DATA": {
            "numpy.reshape": 1.0
        }
    },
    "freq": {
        "TENSOR_FLOW": {
            "numpy.sin": 0.5,
            "numpy.random.random": 0.5
        }
    },
    "text": {
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "re.sub": 1.0
        },
        "STRUCTURED_DATA_VISUALIZATION": {
            "re.sub": 1.0
        }
    },
    "predictions": {
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "numpy.array": 0.5,
            "numpy.append": 0.5
        },
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.column_stack": 0.3333333333333333,
            "sklearn.model_selection.cross_val_predict": 0.3333333333333333,
            "numpy.exp": 0.3333333333333333
        },
        "TENSOR_FLOW": {
            "numpy.array": 1.0
        }
    },
    "test_data": {
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "numpy.array": 1.0
        },
        "NUMPY_VISUALIZATION": {
            "numpy.array": 1.0
        }
    },
    "split_array": {
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "numpy.array_split": 1.0
        }
    },
    "positive_counts": {
        "STRUCTURED_DATA": {
            "collections.Counter": 1.0
        },
        "IPython": {
            "collections.Counter": 1.0
        }
    },
    "negative_counts": {
        "STRUCTURED_DATA": {
            "collections.Counter": 1.0
        },
        "IPython": {
            "collections.Counter": 1.0
        }
    },
    "total_counts": {
        "STRUCTURED_DATA": {
            "collections.Counter": 1.0
        },
        "IPython": {
            "collections.Counter": 1.0
        }
    },
    "pos_neg_ratios": {
        "STRUCTURED_DATA": {
            "collections.Counter": 1.0
        },
        "IPython": {
            "collections.Counter": 1.0
        }
    },
    "review_counter": {
        "STRUCTURED_DATA": {
            "collections.Counter": 1.0
        }
    },
    "frequency_frequency": {
        "STRUCTURED_DATA": {
            "collections.Counter": 1.0
        }
    },
    "layer_0": {
        "STRUCTURED_DATA": {
            "numpy.zeros": 1.0
        },
        "IPython": {
            "numpy.zeros": 1.0
        }
    },
    "self.weights_0_1": {
        "STRUCTURED_DATA": {
            "numpy.zeros": 1.0
        }
    },
    "self.layer_0": {
        "STRUCTURED_DATA": {
            "numpy.zeros": 1.0
        }
    },
    "layer_1": {
        "STRUCTURED_DATA": {
            "numpy.zeros": 1.0
        }
    },
    "self.layer_1": {
        "STRUCTURED_DATA": {
            "numpy.zeros": 1.0
        }
    },
    "pos_neg_ratios[word]": {
        "STRUCTURED_DATA": {
            "numpy.log": 1.0
        },
        "IPython": {
            "numpy.log": 1.0
        }
    },
    "hist,edges": {
        "STRUCTURED_DATA": {
            "numpy.histogram": 1.0
        }
    },
    "self.weights_1_2": {
        "STRUCTURED_DATA": {
            "numpy.random.normal": 1.0
        }
    },
    "weights_0_1": {
        "STRUCTURED_DATA": {
            "numpy.random.randn": 1.0
        }
    },
    "y_pred_arg_class": {
        "NUMPY_VISUALIZATION": {
            "numpy.argmax": 1.0
        }
    },
    "matrix": {
        "NUMPY_VISUALIZATION": {
            "sklearn.metrics.confusion_matrix": 1.0
        },
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "sklearn.metrics.confusion_matrix": 1.0
        }
    },
    "report": {
        "NUMPY_VISUALIZATION": {
            "sklearn.metrics.classification_report": 1.0
        },
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "sklearn.metrics.classification_report": 1.0
        }
    },
    "y_text": {
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "numpy.array": 1.0
        }
    },
    "x_text": {
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "numpy.array": 1.0
        }
    },
    "featureVec": {
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "numpy.zeros": 0.3333333333333333,
            "numpy.add": 0.3333333333333333,
            "numpy.divide": 0.3333333333333333
        }
    },
    "shuffle_indices": {
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "numpy.random.permutation": 1.0
        }
    },
    "string": {
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "re.sub": 1.0
        },
        "IPython": {
            "re.sub": 1.0
        }
    },
    "routes": {
        "NUMPY_VISUALIZATION": {
            "json.loads": 1.0
        }
    },
    "human_files": {
        "DEEP_NEURAL_NETWORKS": {
            "numpy.array": 1.0
        }
    },
    "dog_files": {
        "DEEP_NEURAL_NETWORKS": {
            "numpy.array": 1.0
        }
    },
    "correct+": {
        "DEEP_NEURAL_NETWORKS": {
            "numpy.sum": 1.0
        }
    },
    "hih": {
        "DEEP_NEURAL_NETWORKS": {
            "numpy.average": 1.0
        }
    },
    "hid": {
        "DEEP_NEURAL_NETWORKS": {
            "numpy.average": 1.0
        }
    },
    "dih": {
        "DEEP_NEURAL_NETWORKS": {
            "numpy.average": 1.0
        }
    },
    "did": {
        "DEEP_NEURAL_NETWORKS": {
            "numpy.average": 1.0
        }
    },
    "gradient": {
        "NUMPY_VISUALIZATION": {
            "numpy.zeros": 0.5,
            "numpy.sum": 0.5
        },
        "STRUCTURED_DATA": {
            "numpy.dot": 1.0
        }
    },
    "w": {
        "NUMPY_VISUALIZATION": {
            "numpy.zeros": 0.5,
            "numpy.linalg.inv": 0.5
        },
        "CS771": {
            "numpy.linspace": 0.8,
            "numpy.random.randn": 0.2
        },
        "STRUCTURED_DATA": {
            "numpy.array": 0.5,
            "numpy.linspace": 0.25,
            "numpy.zeros": 0.25
        },
        "TENSOR_FLOW": {
            "numpy.random.random": 1.0
        }
    },
    "init_w": {
        "NUMPY_VISUALIZATION": {
            "numpy.zeros": 1.0
        }
    },
    "totalError": {
        "NUMPY_VISUALIZATION": {
            "numpy.dot": 1.0
        }
    },
    "m": {
        "NUMPY_VISUALIZATION": {
            "numpy.size": 1.0
        },
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.neural_network.MLPRegressor": 1.0
        },
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.shape": 1.0
        },
        "CS771": {
            "numpy.linspace": 1.0
        },
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.concatenate": 1.0
        }
    },
    "points": {
        "NUMPY_VISUALIZATION": {
            "numpy.genfromtxt": 1.0
        },
        "STRUCTURED_DATA": {
            "numpy.arange": 1.0
        }
    },
    "encoded_labels": {
        "DEEP_NEURAL_NETWORKS": {
            "numpy.array": 1.0
        }
    },
    "features[i,-len(row):]": {
        "DEEP_NEURAL_NETWORKS": {
            "numpy.array": 1.0
        }
    },
    "correct": {
        "DEEP_NEURAL_NETWORKS": {
            "numpy.squeeze": 1.0
        },
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.where": 1.0
        },
        "NUMPY_VISUALIZATION": {
            "numpy.nonzero": 1.0
        }
    },
    "num_correct+": {
        "DEEP_NEURAL_NETWORKS": {
            "numpy.sum": 1.0
        }
    },
    "counts": {
        "DEEP_NEURAL_NETWORKS": {
            "collections.Counter": 1.0
        },
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.zeros": 1.0
        },
        "SCIKIT_LEARN_VISUALIZATION": {
            "collections.Counter": 1.0
        },
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "collections.Counter": 1.0
        }
    },
    "review_lens": {
        "DEEP_NEURAL_NETWORKS": {
            "collections.Counter": 1.0
        }
    },
    "elem_re": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "re.compile": 1.0
        }
    },
    "core_samples_mask": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.zeros_like": 1.0
        }
    },
    "angle": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.arctan": 1.0
        }
    },
    "labels_unique": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.unique": 1.0
        }
    },
    "sd": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.preprocessing.StandardScaler": 1.0
        },
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.sqrt": 1.0
        }
    },
    "Hclustering_10": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.cluster.AgglomerativeClustering": 1.0
        }
    },
    "Hclustering_4": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.cluster.AgglomerativeClustering": 1.0
        }
    },
    "knn_graph": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.neighbors.kneighbors_graph": 1.0
        }
    },
    "ms": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.cluster.MeanShift": 1.0
        }
    },
    "bandwidth": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.cluster.estimate_bandwidth": 1.0
        }
    },
    "db": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.cluster.DBSCAN": 1.0
        },
        "STRUCTURED_DATA": {
            "numpy.zeros": 0.3333333333333333,
            "numpy.random.randn": 0.6666666666666666
        },
        "NUMPY_VISUALIZATION": {
            "sklearn.cluster.DBSCAN": 1.0
        },
        "STRUCTURED_DATA_VISUALIZATION": {
            "sklearn.cluster.DBSCAN": 1.0
        }
    },
    "birch": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.cluster.Birch": 1.0
        }
    },
    "knn": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.neighbors.KNeighborsRegressor": 0.15384615384615385,
            "sklearn.neighbors.KNeighborsClassifier": 0.8461538461538461
        },
        "NUMPY_VISUALIZATION": {
            "sklearn.neighbors.KNeighborsRegressor": 0.25,
            "sklearn.neighbors.KNeighborsClassifier": 0.75
        }
    },
    "knnc": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.neighbors.KNeighborsClassifier": 1.0
        }
    },
    "linreg": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.linear_model.LinearRegression": 1.0
        }
    },
    "linregols": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.linear_model.LinearRegression": 1.0
        }
    },
    "linregrfe": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.linear_model.LinearRegression": 1.0
        }
    },
    "r2": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.metrics.r2_score": 1.0
        }
    },
    "rL2": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.metrics.r2_score": 1.0
        }
    },
    "rLO2": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.metrics.r2_score": 1.0
        }
    },
    "rRFE2": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.metrics.r2_score": 1.0
        }
    },
    "mae": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.metrics.mean_absolute_error": 1.0
        }
    },
    "maeL": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.metrics.mean_absolute_error": 1.0
        }
    },
    "maeLO": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.metrics.mean_absolute_error": 1.0
        }
    },
    "maeRFE": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.metrics.mean_absolute_error": 1.0
        }
    },
    "mse": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.metrics.mean_squared_error": 1.0
        },
        "NUMPY_VISUALIZATION": {
            "sklearn.metrics.mean_squared_error": 1.0
        }
    },
    "mseL": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.metrics.mean_squared_error": 1.0
        }
    },
    "mseLO": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.metrics.mean_squared_error": 1.0
        }
    },
    "mseRFE": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.metrics.mean_squared_error": 1.0
        }
    },
    "rfe": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.feature_selection.RFE": 1.0
        }
    },
    "training_array": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.array": 1.0
        }
    },
    "testing_array": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.array": 1.0
        }
    },
    "train_pl_array": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.asarray": 1.0
        }
    },
    "train_pw_array": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.asarray": 1.0
        }
    },
    "test_pl_array": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.asarray": 1.0
        }
    },
    "test_pw_array": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.asarray": 1.0
        }
    },
    "clf_gini": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.tree.DecisionTreeClassifier": 1.0
        }
    },
    "lsvc_clf": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.svm.LinearSVC": 1.0
        }
    },
    "X_test_pred": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.asarray": 1.0
        }
    },
    "train_cv_err": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.mean": 1.0
        }
    },
    "test_cv_err": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.mean": 1.0
        }
    },
    "train_scores_mean": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.mean": 1.0
        },
        "NUMPY_VISUALIZATION": {
            "numpy.mean": 0.5,
            "numpy.std": 0.5
        }
    },
    "test_scores_mean": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.mean": 1.0
        }
    },
    "lr,X,y,cv": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.linspace": 1.0
        }
    },
    "lr_acc": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.metrics.accuracy_score": 1.0
        }
    },
    "dem_acc": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.metrics.accuracy_score": 1.0
        }
    },
    "rep_acc": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.metrics.accuracy_score": 1.0
        }
    },
    "acc": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.metrics.accuracy_score": 1.0
        },
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.average": 1.0
        }
    },
    "lr": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.linear_model.LogisticRegression": 0.5833333333333334,
            "sklearn.linear_model.LinearRegression": 0.4166666666666667
        },
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "sklearn.linear_model.LogisticRegression": 1.0
        },
        "IPython": {
            "sklearn.linear_model.LogisticRegression": 1.0
        },
        "NUMPY_VISUALIZATION": {
            "sklearn.linear_model.LinearRegression": 1.0
        }
    },
    "m,train_cv_err,test_cv_err": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.model_selection.learning_curve": 1.0
        }
    },
    "train_sizes,train_scores,test_scores": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.model_selection.learning_curve": 1.0
        }
    },
    "cvs": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.model_selection.cross_val_score": 1.0
        }
    },
    "x1": {
        "NUMPY_VISUALIZATION": {
            "numpy.array": 1.0
        },
        "STRUCTURED_DATA": {
            "numpy.random.multivariate_normal": 0.5,
            "numpy.random.rand": 0.5
        },
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.arange": 1.0
        },
        "IPython": {
            "numpy.arange": 1.0
        },
        "SCIKIT_LEARN": {
            "numpy.linspace": 1.0
        }
    },
    "top_region": {
        "NUMPY_VISUALIZATION": {
            "numpy.array": 1.0
        }
    },
    "bottom_region": {
        "NUMPY_VISUALIZATION": {
            "numpy.array": 1.0
        }
    },
    "point": {
        "NUMPY_VISUALIZATION": {
            "numpy.array": 1.0
        }
    },
    "bias": {
        "NUMPY_VISUALIZATION": {
            "numpy.ones": 1.0
        }
    },
    "x_span": {
        "NUMPY_VISUALIZATION": {
            "numpy.linspace": 1.0
        }
    },
    "y_span": {
        "NUMPY_VISUALIZATION": {
            "numpy.linspace": 1.0
        }
    },
    "all_points": {
        "NUMPY_VISUALIZATION": {
            "numpy.vstack": 1.0
        }
    },
    "line_parameters": {
        "NUMPY_VISUALIZATION": {
            "numpy.matrix": 1.0
        }
    },
    "xx,yy": {
        "NUMPY_VISUALIZATION": {
            "numpy.meshgrid": 1.0
        },
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.meshgrid": 1.0
        }
    },
    "C": {
        "CS771": {
            "numpy.empty": 0.6666666666666666,
            "numpy.vstack": 0.3333333333333333
        },
        "STRUCTURED_DATA": {
            "numpy.zeros": 1.0
        },
        "NUMPY_VISUALIZATION": {
            "numpy.dot": 0.3333333333333333,
            "numpy.arange": 0.6666666666666666
        }
    },
    "count": {
        "CS771": {
            "collections.Counter": 1.0
        },
        "STRUCTURED_DATA": {
            "collections.defaultdict": 1.0
        },
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "collections.Counter": 1.0
        }
    },
    "unigram_counts": {
        "STRUCTURED_DATA": {
            "collections.defaultdict": 1.0
        }
    },
    "unigram_probs": {
        "STRUCTURED_DATA": {
            "collections.defaultdict": 1.0
        }
    },
    "self._count_table[history]": {
        "STRUCTURED_DATA": {
            "collections.defaultdict": 1.0
        }
    },
    "self._prob_table[history]": {
        "STRUCTURED_DATA": {
            "collections.defaultdict": 1.0
        }
    },
    "sentence_probability_sum+": {
        "STRUCTURED_DATA": {
            "numpy.log": 1.0
        }
    },
    "prob_sum+": {
        "STRUCTURED_DATA": {
            "numpy.log": 1.0
        }
    },
    "income": {
        "STRUCTURED_DATA": {
            "numpy.random.normal": 1.0
        }
    },
    "sen": {
        "STRUCTURED_DATA": {
            "numpy.random.uniform": 1.0
        }
    },
    "one": {
        "NUMPY_VISUALIZATION": {
            "sklearn.preprocessing.OneHotEncoder": 1.0
        }
    },
    "le": {
        "NUMPY_VISUALIZATION": {
            "sklearn.preprocessing.LabelEncoder": 1.0
        },
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.preprocessing.LabelEncoder": 1.0
        },
        "STRUCTURED_DATA_VISUALIZATION": {
            "sklearn.preprocessing.LabelEncoder": 1.0
        },
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "sklearn.preprocessing.LabelEncoder": 1.0
        }
    },
    "expected_next_w": {
        "CS771": {
            "numpy.asarray": 1.0
        }
    },
    "expected_velocity": {
        "CS771": {
            "numpy.asarray": 1.0
        }
    },
    "expected_cache": {
        "CS771": {
            "numpy.asarray": 1.0
        }
    },
    "expected_a": {
        "CS771": {
            "numpy.asarray": 1.0
        }
    },
    "expected_v": {
        "CS771": {
            "numpy.asarray": 1.0
        }
    },
    "y_test_pred": {
        "CS771": {
            "numpy.argmax": 1.0
        }
    },
    "y_val_pred": {
        "CS771": {
            "numpy.argmax": 1.0
        }
    },
    "dw": {
        "CS771": {
            "numpy.linspace": 1.0
        }
    },
    "v": {
        "CS771": {
            "numpy.linspace": 1.0
        },
        "STRUCTURED_DATA": {
            "numpy.random.normal": 0.3333333333333333,
            "numpy.array": 0.6666666666666666
        },
        "SCIKIT_LEARN": {
            "numpy.median": 0.5,
            "numpy.linspace": 0.5
        },
        "SCIENTIFIC_COMPUTING": {
            "numpy.asarray": 1.0
        }
    },
    "finshDeque": {
        "CS771": {
            "collections.deque": 1.0
        }
    },
    "waitingDeque": {
        "CS771": {
            "collections.deque": 1.0
        }
    },
    "f": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.cos": 1.0
        },
        "NUMPY_VISUALIZATION": {
            "numpy.stack": 1.0
        },
        "SCIKIT_LEARN": {
            "numpy.zeros": 1.0
        },
        "STRUCTURED_DATA_VISUALIZATION": {
            "scipy.interpolate.interp1d": 1.0
        }
    },
    "t": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.linspace": 1.0
        },
        "STRUCTURED_DATA": {
            "numpy.arange": 0.6666666666666666,
            "numpy.zeros": 0.3333333333333333
        },
        "SCIKIT_LEARN": {
            "numpy.linspace": 0.6666666666666666,
            "numpy.arange": 0.16666666666666666,
            "numpy.meshgrid": 0.16666666666666666
        }
    },
    "rewards": {
        "CS771": {
            "numpy.array": 1.0
        }
    },
    "times": {
        "CS771": {
            "numpy.array": 1.0
        }
    },
    "steps": {
        "CS771": {
            "numpy.array": 1.0
        },
        "NUMPY_VISUALIZATION": {
            "numpy.diff": 1.0
        }
    },
    "environment": {
        "CS771": {
            "numpy.zeros": 0.5,
            "numpy.ones": 0.5
        }
    },
    "mb_heat_env": {
        "CS771": {
            "numpy.zeros": 1.0
        }
    },
    "mf_heat_env": {
        "CS771": {
            "numpy.zeros": 1.0
        }
    },
    "map_heat": {
        "CS771": {
            "numpy.zeros": 1.0
        }
    },
    "mb_internal_environment": {
        "CS771": {
            "numpy.zeros": 1.0
        }
    },
    "stay_percentage": {
        "CS771": {
            "numpy.zeros": 1.0
        }
    },
    "cumm_sum": {
        "CS771": {
            "numpy.cumsum": 1.0
        }
    },
    "average_value": {
        "CS771": {
            "numpy.mean": 1.0
        }
    },
    "stay_percentage[i][k]": {
        "CS771": {
            "numpy.mean": 1.0
        }
    },
    "reward_mean_dual": {
        "CS771": {
            "numpy.mean": 1.0
        }
    },
    "reward_mean_mb": {
        "CS771": {
            "numpy.mean": 1.0
        }
    },
    "reward_mean_mf": {
        "CS771": {
            "numpy.mean": 1.0
        }
    },
    "times_mean_dual": {
        "CS771": {
            "numpy.mean": 1.0
        }
    },
    "times_mean_mb": {
        "CS771": {
            "numpy.mean": 1.0
        }
    },
    "times_mean_mf": {
        "CS771": {
            "numpy.mean": 1.0
        }
    },
    "steps_mean_dual": {
        "CS771": {
            "numpy.mean": 1.0
        }
    },
    "steps_mean_mb": {
        "CS771": {
            "numpy.mean": 1.0
        }
    },
    "steps_mean_mf": {
        "CS771": {
            "numpy.mean": 1.0
        }
    },
    "new_pos": {
        "CS771": {
            "numpy.add": 1.0
        }
    },
    "next_pos": {
        "CS771": {
            "numpy.add": 1.0
        }
    },
    "scoreMatExp": {
        "CS771": {
            "numpy.exp": 1.0
        }
    },
    "stay_percentage_mean": {
        "CS771": {
            "numpy.nanmean": 1.0
        }
    },
    "random_number": {
        "CS771": {
            "numpy.random.random_sample": 1.0
        }
    },
    "ratio": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.where": 1.0
        }
    },
    "hist,bin_edges": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.histogram": 1.0
        }
    },
    "boston_data": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.datasets.load_boston": 1.0
        }
    },
    "tree": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.tree.DecisionTreeRegressor": 0.42857142857142855,
            "sklearn.tree.DecisionTreeClassifier": 0.5714285714285714
        }
    },
    "forest": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.ensemble.RandomForestRegressor": 0.5,
            "sklearn.ensemble.RandomForestClassifier": 0.5
        },
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "sklearn.ensemble.RandomForestClassifier": 1.0
        }
    },
    "ada": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.ensemble.AdaBoostRegressor": 1.0
        }
    },
    "line": {
        "NUMPY_VISUALIZATION": {
            "numpy.linspace": 1.0
        },
        "STRUCTURED_DATA": {
            "numpy.polyfit": 1.0
        }
    },
    "cancer": {
        "NUMPY_VISUALIZATION": {
            "sklearn.datasets.load_breast_cancer": 1.0
        }
    },
    "boston": {
        "NUMPY_VISUALIZATION": {
            "sklearn.datasets.load_boston": 1.0
        },
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.datasets.load_boston": 1.0
        }
    },
    "reg": {
        "NUMPY_VISUALIZATION": {
            "sklearn.neighbors.KNeighborsRegressor": 0.5,
            "sklearn.linear_model.LinearRegression": 0.25,
            "sklearn.ensemble.RandomForestRegressor": 0.25
        },
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.linear_model.LogisticRegression": 1.0
        }
    },
    "X_train,X_validation,y_train,y_validation": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "sklearn.model_selection.train_test_split": 1.0
        }
    },
    "vals": {
        "SCIKIT_LEARN": {
            "numpy.append": 1.0
        }
    },
    "first_draw": {
        "SCIKIT_LEARN": {
            "numpy.random.permutation": 1.0
        }
    },
    "second_draw": {
        "SCIKIT_LEARN": {
            "numpy.random.permutation": 1.0
        }
    },
    "val": {
        "SCIKIT_LEARN": {
            "numpy.random.permutation": 1.0
        },
        "TENSOR_FLOW": {
            "numpy.squeeze": 1.0
        }
    },
    "islansX": {
        "STRUCTURED_DATA": {
            "numpy.array": 1.0
        }
    },
    "myIslands": {
        "STRUCTURED_DATA": {
            "numpy.array": 1.0
        }
    },
    "previsao": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.zeros": 1.0
        }
    },
    "real": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.zeros": 1.0
        }
    },
    "closest_i": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.argmin": 0.5,
            "numpy.argsort": 0.5
        }
    },
    "closest_rev": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.argmin": 0.5,
            "numpy.argsort": 0.5
        }
    },
    "tmp": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.argmin": 1.0
        },
        "SCIKIT_LEARN": {
            "numpy.where": 1.0
        },
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.asanyarray": 1.0
        }
    },
    "iftmp": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.argsort": 1.0
        }
    },
    "ans": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.heaviside": 1.0
        },
        "TENSOR_FLOW": {
            "numpy.zeros": 1.0
        }
    },
    "folds": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.model_selection.StratifiedKFold": 1.0
        }
    },
    "logit": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "sklearn.linear_model.LogisticRegressionCV": 1.0
        },
        "NUMPY_VISUALIZATION": {
            "sklearn.linear_model.LogisticRegression": 1.0
        }
    },
    "mask2": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.zeros_like": 1.0
        }
    },
    "lr_score_train": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.model_selection.cross_val_score": 1.0
        }
    },
    "lr_score_test": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.model_selection.cross_val_score": 1.0
        }
    },
    "ridge_score_train": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.model_selection.cross_val_score": 1.0
        }
    },
    "ridge_score_test": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.model_selection.cross_val_score": 1.0
        }
    },
    "lasso_score_train": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.model_selection.cross_val_score": 1.0
        }
    },
    "lasso_score_test": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.model_selection.cross_val_score": 1.0
        }
    },
    "kf_lr": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.model_selection.KFold": 1.0
        }
    },
    "kf_ridge": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.model_selection.KFold": 1.0
        }
    },
    "kf_lasso": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.model_selection.KFold": 1.0
        }
    },
    "ss": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.preprocessing.StandardScaler": 1.0
        }
    },
    "ridge": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.linear_model.RidgeCV": 1.0
        }
    },
    "optimised_ridge": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.linear_model.Ridge": 1.0
        }
    },
    "lasso": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.linear_model.LassoCV": 0.75,
            "sklearn.pipeline.make_pipeline": 0.25
        }
    },
    "optimised_lasso": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.linear_model.Lasso": 1.0
        }
    },
    "lr_rmse_train": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.metrics.mean_squared_error": 1.0
        }
    },
    "lr_rmse_test": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.metrics.mean_squared_error": 1.0
        }
    },
    "ridge_rmse_train": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.metrics.mean_squared_error": 1.0
        }
    },
    "ridge_rmse_test": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.metrics.mean_squared_error": 1.0
        }
    },
    "lasso_rmse_train": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.metrics.mean_squared_error": 1.0
        }
    },
    "lasso_rmse_test": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.metrics.mean_squared_error": 1.0
        }
    },
    "random_zips": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.random.choice": 1.0
        }
    },
    "covar_matrix": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.matmul": 1.0
        }
    },
    "new_coordinates": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.matmul": 0.5,
            "numpy.vstack": 0.5
        }
    },
    "cum_var_explained": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.cumsum": 1.0
        }
    },
    "pca_data": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.vstack": 1.0
        }
    },
    "tsne_data": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.vstack": 1.0
        }
    },
    "standardized_data": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.preprocessing.StandardScaler": 1.0
        }
    },
    "values,vectors": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "scipy.linalg.eigh": 1.0
        }
    },
    "z": {
        "STRUCTURED_DATA": {
            "numpy.random.normal": 0.3333333333333333,
            "numpy.arange": 0.3333333333333333,
            "numpy.ravel": 0.3333333333333333
        },
        "CS771": {
            "numpy.cos": 0.3333333333333333,
            "numpy.array": 0.6666666666666666
        },
        "DEEP_NEURAL_NETWORKS": {
            "numpy.random.uniform": 1.0
        },
        "SCIKIT_LEARN": {
            "numpy.linspace": 1.0
        },
        "SCIENTIFIC_COMPUTING": {
            "numpy.random.normal": 1.0
        },
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.sqrt": 1.0
        }
    },
    "loc": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.mean": 1.0
        },
        "NUMPY_VISUALIZATION": {
            "numpy.mean": 1.0
        }
    },
    "lin_rmse": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.sqrt": 1.0
        },
        "NUMPY_VISUALIZATION": {
            "numpy.sqrt": 1.0
        }
    },
    "tree_rmse": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.sqrt": 1.0
        },
        "NUMPY_VISUALIZATION": {
            "numpy.sqrt": 1.0
        }
    },
    "tree_rmse_scores": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.sqrt": 1.0
        },
        "NUMPY_VISUALIZATION": {
            "numpy.sqrt": 1.0
        }
    },
    "lin_rmse_scores": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.sqrt": 1.0
        },
        "NUMPY_VISUALIZATION": {
            "numpy.sqrt": 1.0
        }
    },
    "forest_rmse": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.sqrt": 1.0
        },
        "NUMPY_VISUALIZATION": {
            "numpy.sqrt": 1.0
        }
    },
    "forest_rmse_scores": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.sqrt": 1.0
        },
        "NUMPY_VISUALIZATION": {
            "numpy.sqrt": 1.0
        }
    },
    "svm_rmse": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.sqrt": 1.0
        }
    },
    "final_rmse": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.sqrt": 1.0
        },
        "NUMPY_VISUALIZATION": {
            "numpy.sqrt": 1.0
        }
    },
    "tick_values": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.linspace": 1.0
        }
    },
    "shuffled_indices": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.random.permutation": 1.0
        }
    },
    "train_set,test_set": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "sklearn.model_selection.train_test_split": 1.0
        },
        "NUMPY_VISUALIZATION": {
            "sklearn.model_selection.train_test_split": 1.0
        }
    },
    "split": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "sklearn.model_selection.StratifiedShuffleSplit": 1.0
        },
        "NUMPY_VISUALIZATION": {
            "sklearn.model_selection.StratifiedShuffleSplit": 1.0
        }
    },
    "imputer": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "sklearn.impute.SimpleImputer": 1.0
        },
        "NUMPY_VISUALIZATION": {
            "sklearn.impute.SimpleImputer": 1.0
        },
        "IPython": {
            "sklearn.impute.SimpleImputer": 1.0
        }
    },
    "fromfuture_encodersimportOrdinalEncoderordinal_encoder": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "sklearn.preprocessing.OrdinalEncoder": 1.0
        }
    },
    "cat_encoder": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "sklearn.preprocessing.OneHotEncoder": 1.0
        },
        "NUMPY_VISUALIZATION": {
            "sklearn.preprocessing.OneHotEncoder": 1.0
        }
    },
    "attr_adder": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "sklearn.preprocessing.FunctionTransformer": 1.0
        },
        "NUMPY_VISUALIZATION": {
            "sklearn.preprocessing.FunctionTransformer": 1.0
        }
    },
    "num_pipeline": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "sklearn.pipeline.Pipeline": 1.0
        },
        "NUMPY_VISUALIZATION": {
            "sklearn.pipeline.Pipeline": 1.0
        }
    },
    "old_num_pipeline": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "sklearn.pipeline.Pipeline": 1.0
        }
    },
    "old_cat_pipeline": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "sklearn.pipeline.Pipeline": 1.0
        }
    },
    "full_pipeline_with_predictor": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "sklearn.pipeline.Pipeline": 1.0
        }
    },
    "preparation_and_feature_selection_pipeline": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "sklearn.pipeline.Pipeline": 1.0
        }
    },
    "prepare_select_and_predict_pipeline": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "sklearn.pipeline.Pipeline": 1.0
        }
    },
    "full_pipeline": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "sklearn.compose.ColumnTransformer": 1.0
        },
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.pipeline.Pipeline": 1.0
        },
        "NUMPY_VISUALIZATION": {
            "sklearn.compose.ColumnTransformer": 1.0
        }
    },
    "old_full_pipeline": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "sklearn.pipeline.FeatureUnion": 1.0
        }
    },
    "lin_mse": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "sklearn.metrics.mean_squared_error": 1.0
        },
        "NUMPY_VISUALIZATION": {
            "sklearn.metrics.mean_squared_error": 1.0
        }
    },
    "tree_mse": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "sklearn.metrics.mean_squared_error": 1.0
        },
        "NUMPY_VISUALIZATION": {
            "sklearn.metrics.mean_squared_error": 1.0
        }
    },
    "forest_mse": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "sklearn.metrics.mean_squared_error": 1.0
        },
        "NUMPY_VISUALIZATION": {
            "sklearn.metrics.mean_squared_error": 1.0
        }
    },
    "svm_mse": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "sklearn.metrics.mean_squared_error": 1.0
        }
    },
    "final_mse": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "sklearn.metrics.mean_squared_error": 1.0
        },
        "NUMPY_VISUALIZATION": {
            "sklearn.metrics.mean_squared_error": 1.0
        }
    },
    "lin_mae": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "sklearn.metrics.mean_absolute_error": 1.0
        },
        "NUMPY_VISUALIZATION": {
            "sklearn.metrics.mean_absolute_error": 1.0
        }
    },
    "tree_reg": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "sklearn.tree.DecisionTreeRegressor": 1.0
        },
        "NUMPY_VISUALIZATION": {
            "sklearn.tree.DecisionTreeRegressor": 1.0
        }
    },
    "lin_scores": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "sklearn.model_selection.cross_val_score": 1.0
        },
        "NUMPY_VISUALIZATION": {
            "sklearn.model_selection.cross_val_score": 1.0
        }
    },
    "forest_scores": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "sklearn.model_selection.cross_val_score": 1.0
        },
        "NUMPY_VISUALIZATION": {
            "sklearn.model_selection.cross_val_score": 1.0
        }
    },
    "forest_reg": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "sklearn.ensemble.RandomForestRegressor": 1.0
        },
        "NUMPY_VISUALIZATION": {
            "sklearn.ensemble.RandomForestRegressor": 1.0
        }
    },
    "svm_reg": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "sklearn.svm.SVR": 1.0
        }
    },
    "grid_search": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "sklearn.model_selection.GridSearchCV": 1.0
        },
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.model_selection.GridSearchCV": 1.0
        },
        "NUMPY_VISUALIZATION": {
            "sklearn.model_selection.GridSearchCV": 1.0
        }
    },
    "grid_search_prep": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "sklearn.model_selection.GridSearchCV": 1.0
        }
    },
    "rnd_search": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "sklearn.model_selection.RandomizedSearchCV": 1.0
        },
        "NUMPY_VISUALIZATION": {
            "sklearn.model_selection.RandomizedSearchCV": 1.0
        }
    },
    "geom_distrib": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "scipy.stats.geom": 1.0
        }
    },
    "expon_distrib": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "scipy.stats.expon": 1.0
        }
    },
    "reciprocal_distrib": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "scipy.stats.reciprocal": 1.0
        }
    },
    "sampled_token_index": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.argmax": 1.0
        }
    },
    "splits": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "sklearn.model_selection.train_test_split": 1.0
        }
    },
    "sig": {
        "STRUCTURED_DATA": {
            "numpy.diff": 1.0
        }
    },
    "ts[3000:3100]": {
        "STRUCTURED_DATA": {
            "numpy.sin": 1.0
        }
    },
    "xs": {
        "STRUCTURED_DATA": {
            "numpy.random.randn": 1.0
        },
        "SCIKIT_LEARN": {
            "numpy.linspace": 1.0
        },
        "TENSOR_FLOW": {
            "numpy.random.random": 1.0
        }
    },
    "ts": {
        "STRUCTURED_DATA": {
            "numpy.random.randn": 1.0
        }
    },
    "boo": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.ndarray.tolist": 1.0
        }
    },
    "namelist": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.array": 1.0
        }
    },
    "exit": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.array": 1.0
        }
    },
    "simdata": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.array": 1.0
        }
    },
    "predicted_labels": {
        "NUMPY_VISUALIZATION": {
            "numpy.asarray": 1.0
        }
    },
    "distance_matrix": {
        "NUMPY_VISUALIZATION": {
            "numpy.matrix": 1.0
        }
    },
    "train_tube_assemblies,val_tube_assemblies": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.model_selection.train_test_split": 1.0
        }
    },
    "y_train_log": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.log1p": 1.0
        }
    },
    "y_val_log": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.log1p": 1.0
        }
    },
    "X_val_permuted[feature]": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.random.permutation": 1.0
        }
    },
    "rdf": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.ensemble.RandomForestClassifier": 1.0
        }
    },
    "species": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.array": 1.0
        }
    },
    "logprobs": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.array": 1.0
        },
        "NUMPY_VISUALIZATION": {
            "numpy.multiply": 1.0
        }
    },
    "Z": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.full": 1.0
        },
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.sin": 1.0
        },
        "STRUCTURED_DATA": {
            "numpy.zeros": 0.25,
            "numpy.sum": 0.25,
            "numpy.empty": 0.5
        },
        "SCIENTIFIC_COMPUTING": {
            "numpy.sum": 1.0
        },
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.sum": 1.0
        }
    },
    "self.classes_": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.sort": 1.0
        }
    },
    "Z[land_mask]": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.exp": 1.0
        }
    },
    "result": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.exp": 1.0
        },
        "SCIKIT_LEARN": {
            "numpy.linalg.lstsq": 0.25,
            "numpy.random.choice": 0.5,
            "scipy.optimize.fmin_tnc": 0.25
        },
        "NUMPY_VISUALIZATION": {
            "numpy.dot": 0.5,
            "numpy.array": 0.5
        },
        "STRUCTURED_DATA": {
            "numpy.maximum": 1.0
        },
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "numpy.zeros": 1.0
        }
    },
    "xy": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.radians": 0.3333333333333333,
            "numpy.vstack": 0.6666666666666666
        }
    },
    "x_d": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.linspace": 1.0
        }
    },
    "levels": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.linspace": 1.0
        },
        "NUMPY_VISUALIZATION": {
            "numpy.arange": 1.0
        }
    },
    "latlon": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.vstack": 1.0
        }
    },
    "X,Y": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.meshgrid": 1.0
        },
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.meshgrid": 1.0
        },
        "STRUCTURED_DATA": {
            "numpy.meshgrid": 1.0
        },
        "SCIKIT_LEARN": {
            "numpy.meshgrid": 1.0
        },
        "NUMPY_VISUALIZATION": {
            "numpy.meshgrid": 1.0
        },
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.meshgrid": 1.0
        }
    },
    "rand": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.random.RandomState": 1.0
        },
        "TENSOR_FLOW": {
            "numpy.random.randint": 0.5,
            "numpy.random.RandomState": 0.5
        }
    },
    "kde": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.neighbors.KernelDensity": 1.0
        }
    },
    "grid": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.model_selection.GridSearchCV": 1.0
        },
        "NUMPY_VISUALIZATION": {
            "sklearn.model_selection.GridSearchCV": 1.0
        },
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "sklearn.model_selection.GridSearchCV": 1.0
        }
    },
    "cv": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.model_selection.LeaveOneOut": 0.3333333333333333,
            "sklearn.model_selection.KFold": 0.3333333333333333,
            "sklearn.model_selection.ShuffleSplit": 0.3333333333333333
        },
        "NUMPY_VISUALIZATION": {
            "sklearn.model_selection.GridSearchCV": 0.42857142857142855,
            "sklearn.neural_network.MLPClassifier": 0.42857142857142855,
            "sklearn.model_selection.StratifiedShuffleSplit": 0.14285714285714285
        },
        "IPython": {
            "sklearn.model_selection.KFold": 1.0
        }
    },
    "digits": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.datasets.load_digits": 1.0
        },
        "DEEP_NEURAL_NETWORKS": {
            "sklearn.datasets.load_digits": 1.0
        }
    },
    "tick_marks": {
        "SCIKIT_LEARN": {
            "numpy.arange": 1.0
        },
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.arange": 1.0
        },
        "TENSOR_FLOW": {
            "numpy.arange": 1.0
        }
    },
    "actual_score": {
        "SCIKIT_LEARN": {
            "sklearn.metrics.auc": 1.0
        }
    },
    "conf_mat": {
        "SCIKIT_LEARN": {
            "sklearn.metrics.confusion_matrix": 1.0
        },
        "NUMPY_VISUALIZATION": {
            "sklearn.metrics.confusion_matrix": 1.0
        }
    },
    "conf_int": {
        "SCIKIT_LEARN": {
            "numpy.percentile": 1.0
        }
    },
    "new_sample": {
        "SCIKIT_LEARN": {
            "numpy.random.choice": 1.0
        }
    },
    "group1": {
        "SCIKIT_LEARN": {
            "numpy.random.choice": 1.0
        }
    },
    "group2": {
        "SCIKIT_LEARN": {
            "numpy.random.choice": 1.0
        }
    },
    "xticks": {
        "SCIKIT_LEARN": {
            "numpy.arange": 1.0
        }
    },
    "yticks": {
        "SCIKIT_LEARN": {
            "numpy.arange": 1.0
        }
    },
    "sparse_ratings": {
        "SCIKIT_LEARN": {
            "scipy.sparse.csr_matrix": 1.0
        }
    },
    "train,test": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.model_selection.train_test_split": 1.0
        }
    },
    "index": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.arange": 1.0
        },
        "STRUCTURED_DATA": {
            "numpy.arange": 1.0
        },
        "SCIKIT_LEARN": {
            "numpy.arange": 1.0
        },
        "NUMPY_VISUALIZATION": {
            "numpy.random.choice": 1.0
        },
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.arange": 1.0
        }
    },
    "pred_x": {
        "STRUCTURED_DATA": {
            "numpy.append": 1.0
        }
    },
    "xgb_pred": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.expm1": 1.0
        }
    },
    "lgb_pred": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.expm1": 1.0
        }
    },
    "lasso_pred": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.expm1": 1.0
        }
    },
    "pred4": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.expm1": 1.0
        }
    },
    "df_train[\"SalePrice\"]": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.log1p": 1.0
        }
    },
    "df_all[skewed_feats]": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.log1p": 1.0
        }
    },
    "X": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.model_selection.train_test_split": 0.2,
            "numpy.arange": 0.8
        },
        "STRUCTURED_DATA": {
            "numpy.arange": 0.2,
            "numpy.asarray": 0.2,
            "numpy.array": 0.4,
            "numpy.atleast_2d": 0.2
        },
        "NUMPY_VISUALIZATION": {
            "sklearn.preprocessing.scale": 0.125,
            "numpy.array": 0.1875,
            "sklearn.preprocessing.StandardScaler": 0.1875,
            "numpy.random.random_sample": 0.0625,
            "numpy.hstack": 0.0625,
            "numpy.append": 0.1875,
            "sklearn.preprocessing.normalize": 0.1875
        },
        "TENSOR_FLOW": {
            "numpy.random.randn": 0.5,
            "numpy.einsum": 0.5
        },
        "SCIENTIFIC_COMPUTING": {
            "sklearn.preprocessing.StandardScaler": 0.5,
            "numpy.zeros": 0.5
        },
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.array": 0.75,
            "numpy.random.uniform": 0.25
        },
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "numpy.array": 0.5,
            "numpy.concatenate": 0.5
        },
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.linspace": 1.0
        },
        "SCIKIT_LEARN": {
            "numpy.array": 0.5,
            "numpy.column_stack": 0.25,
            "numpy.vstack": 0.25
        },
        "DEEP_NEURAL_NETWORKS": {
            "numpy.zeros": 1.0
        },
        "CS771": {
            "numpy.zeros": 0.3333333333333333,
            "numpy.linspace": 0.16666666666666666,
            "numpy.random.randn": 0.3333333333333333,
            "numpy.concatenate": 0.16666666666666666
        }
    },
    "GBoost": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.ensemble.GradientBoostingRegressor": 1.0
        }
    },
    "KRR": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.kernel_ridge.KernelRidge": 1.0
        }
    },
    "ENet": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.pipeline.make_pipeline": 1.0
        }
    },
    "mention_type": {
        "DEEP_NEURAL_NETWORKS": {
            "numpy.array": 1.0
        }
    },
    "mention_position": {
        "DEEP_NEURAL_NETWORKS": {
            "numpy.array": 1.0
        }
    },
    "mention_dist": {
        "DEEP_NEURAL_NETWORKS": {
            "numpy.array": 1.0
        }
    },
    "s_dist": {
        "DEEP_NEURAL_NETWORKS": {
            "numpy.array": 1.0
        }
    },
    "overlap": {
        "DEEP_NEURAL_NETWORKS": {
            "numpy.array": 1.0
        }
    },
    "speaker": {
        "DEEP_NEURAL_NETWORKS": {
            "numpy.array": 1.0
        }
    },
    "head_match": {
        "DEEP_NEURAL_NETWORKS": {
            "numpy.array": 1.0
        }
    },
    "mention_exact_match": {
        "DEEP_NEURAL_NETWORKS": {
            "numpy.array": 1.0
        }
    },
    "mention_partial_match": {
        "DEEP_NEURAL_NETWORKS": {
            "numpy.array": 1.0
        }
    },
    "d": {
        "DEEP_NEURAL_NETWORKS": {
            "numpy.zeros": 1.0
        },
        "NUMPY_VISUALIZATION": {
            "numpy.zeros": 0.25,
            "numpy.zeros_like": 0.25,
            "numpy.ones": 0.25,
            "numpy.stack": 0.25
        },
        "SCIKIT_LEARN": {
            "numpy.random.randn": 0.6666666666666666,
            "numpy.array": 0.3333333333333333
        },
        "STRUCTURED_DATA": {
            "numpy.eye": 1.0
        }
    },
    "vec": {
        "DEEP_NEURAL_NETWORKS": {
            "numpy.zeros": 1.0
        },
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "numpy.ones": 1.0
        }
    },
    "sum": {
        "DEEP_NEURAL_NETWORKS": {
            "numpy.zeros": 1.0
        }
    },
    "mention_contain": {
        "DEEP_NEURAL_NETWORKS": {
            "numpy.zeros": 0.5,
            "numpy.ones": 0.5
        }
    },
    "mention_p_w1": {
        "DEEP_NEURAL_NETWORKS": {
            "numpy.zeros": 1.0
        }
    },
    "mention_p_w2": {
        "DEEP_NEURAL_NETWORKS": {
            "numpy.zeros": 1.0
        }
    },
    "mention_n_w1": {
        "DEEP_NEURAL_NETWORKS": {
            "numpy.zeros": 1.0
        }
    },
    "mention_n_w2": {
        "DEEP_NEURAL_NETWORKS": {
            "numpy.zeros": 1.0
        }
    },
    "mention_p_w_a": {
        "DEEP_NEURAL_NETWORKS": {
            "numpy.zeros": 1.0
        }
    },
    "mention_n_w_a": {
        "DEEP_NEURAL_NETWORKS": {
            "numpy.zeros": 1.0
        }
    },
    "pair_features": {
        "DEEP_NEURAL_NETWORKS": {
            "numpy.concatenate": 1.0
        }
    },
    "con": {
        "DEEP_NEURAL_NETWORKS": {
            "numpy.concatenate": 1.0
        }
    },
    "input_dev": {
        "DEEP_NEURAL_NETWORKS": {
            "numpy.load": 1.0
        }
    },
    "output_dev": {
        "DEEP_NEURAL_NETWORKS": {
            "numpy.load": 1.0
        }
    },
    "sentenceEnders": {
        "DEEP_NEURAL_NETWORKS": {
            "re.compile": 1.0
        }
    },
    "c_all,_": {
        "DEEP_NEURAL_NETWORKS": {
            "numpy.arange": 1.0
        }
    },
    "x_decod,score": {
        "DEEP_NEURAL_NETWORKS": {
            "numpy.arange": 1.0
        }
    },
    "_,score": {
        "DEEP_NEURAL_NETWORKS": {
            "numpy.arange": 1.0
        }
    },
    "model(i": {
        "DEEP_NEURAL_NETWORKS": {
            "numpy.arange": 1.0
        }
    },
    "log_probs": {
        "DEEP_NEURAL_NETWORKS": {
            "numpy.arange": 1.0
        }
    },
    "model.conditional(i": {
        "DEEP_NEURAL_NETWORKS": {
            "numpy.array": 1.0
        }
    },
    "scores_sampmodel": {
        "DEEP_NEURAL_NETWORKS": {
            "numpy.array": 1.0
        }
    },
    "cc": {
        "DEEP_NEURAL_NETWORKS": {
            "numpy.array": 1.0
        }
    },
    "rank": {
        "DEEP_NEURAL_NETWORKS": {
            "numpy.array": 1.0
        }
    },
    "testdata_numpy": {
        "DEEP_NEURAL_NETWORKS": {
            "numpy.fromfile": 1.0
        }
    },
    "idx_all": {
        "DEEP_NEURAL_NETWORKS": {
            "numpy.concatenate": 1.0
        }
    },
    "score_all": {
        "DEEP_NEURAL_NETWORKS": {
            "numpy.concatenate": 1.0
        }
    },
    "idx_sample,idx_testmatch": {
        "DEEP_NEURAL_NETWORKS": {
            "numpy.random.choice": 1.0
        }
    },
    "idx_testnonmatch": {
        "DEEP_NEURAL_NETWORKS": {
            "numpy.random.choice": 1.0
        }
    },
    "indthis": {
        "DEEP_NEURAL_NETWORKS": {
            "numpy.random.randint": 1.0
        }
    },
    "charall": {
        "DEEP_NEURAL_NETWORKS": {
            "numpy.random.randint": 1.0
        }
    },
    "msk": {
        "NUMPY_VISUALIZATION": {
            "numpy.random.rand": 1.0
        }
    },
    "t1": {
        "STRUCTURED_DATA": {
            "numpy.arange": 1.0
        }
    },
    "t2": {
        "STRUCTURED_DATA": {
            "numpy.arange": 1.0
        }
    },
    "s": {
        "STRUCTURED_DATA": {
            "numpy.cos": 0.5,
            "json.load": 0.5
        }
    },
    "xvals": {
        "STRUCTURED_DATA": {
            "numpy.linspace": 1.0
        }
    },
    "yvals": {
        "STRUCTURED_DATA": {
            "numpy.linspace": 1.0
        },
        "SCIKIT_LEARN": {
            "numpy.arange": 1.0
        }
    },
    "(n,bins)": {
        "STRUCTURED_DATA": {
            "numpy.histogram": 1.0
        }
    },
    "values": {
        "STRUCTURED_DATA": {
            "numpy.random.randint": 1.0
        },
        "SCIENTIFIC_COMPUTING": {
            "numpy.random.rand": 1.0
        }
    },
    "l": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.linspace": 1.0
        },
        "SCIKIT_LEARN": {
            "numpy.array": 1.0
        },
        "STRUCTURED_DATA_VISUALIZATION": {
            "sklearn.linear_model.LogisticRegression": 1.0
        }
    },
    "h": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.linspace": 1.0
        },
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.array": 1.0
        }
    },
    "ssid_df['SchoolHoliday']": {
        "NUMPY_VISUALIZATION": {
            "numpy.where": 1.0
        }
    },
    "selector": {
        "NUMPY_VISUALIZATION": {
            "sklearn.feature_selection.VarianceThreshold": 1.0
        }
    },
    "svr_lin": {
        "NUMPY_VISUALIZATION": {
            "sklearn.svm.SVR": 1.0
        }
    },
    "svrn_lin": {
        "NUMPY_VISUALIZATION": {
            "sklearn.svm.SVR": 1.0
        }
    },
    "svr_poly": {
        "NUMPY_VISUALIZATION": {
            "sklearn.svm.SVR": 1.0
        }
    },
    "svrn_poly": {
        "NUMPY_VISUALIZATION": {
            "sklearn.svm.SVR": 1.0
        }
    },
    "svr_rbf": {
        "NUMPY_VISUALIZATION": {
            "sklearn.svm.SVR": 1.0
        }
    },
    "svrn_rbf": {
        "NUMPY_VISUALIZATION": {
            "sklearn.svm.SVR": 1.0
        }
    },
    "Xn_train,Xn_test,yn_train,yn_test": {
        "NUMPY_VISUALIZATION": {
            "sklearn.model_selection.train_test_split": 1.0
        },
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.model_selection.train_test_split": 1.0
        }
    },
    "max_abs_scaler": {
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "sklearn.preprocessing.MaxAbsScaler": 1.0
        }
    },
    "nn_model": {
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "sklearn.neighbors.NearestNeighbors": 1.0
        }
    },
    "window": {
        "SCIKIT_LEARN": {
            "numpy.hamming": 1.0
        }
    },
    "rfc": {
        "NUMPY_VISUALIZATION": {
            "sklearn.ensemble.RandomForestClassifier": 1.0
        },
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.ensemble.RandomForestClassifier": 1.0
        },
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "sklearn.ensemble.RandomForestClassifier": 1.0
        }
    },
    "Filter.img": {
        "STRUCTURED_DATA": {
            "numpy.array": 1.0
        }
    },
    "U": {
        "STRUCTURED_DATA": {
            "numpy.zeros": 1.0
        }
    },
    "D": {
        "STRUCTURED_DATA": {
            "numpy.zeros": 0.5,
            "numpy.uint8": 0.5
        },
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.mat": 0.6666666666666666,
            "numpy.multiply": 0.3333333333333333
        }
    },
    "X_train,X_test,Y_train,Y_test": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.model_selection.train_test_split": 1.0
        },
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "sklearn.model_selection.train_test_split": 1.0
        },
        "NUMPY_VISUALIZATION": {
            "sklearn.model_selection.train_test_split": 1.0
        }
    },
    "A": {
        "CS771": {
            "numpy.array": 1.0
        },
        "STRUCTURED_DATA": {
            "numpy.zeros": 0.2,
            "numpy.array": 0.2,
            "numpy.matrix": 0.6
        },
        "SCIKIT_LEARN": {
            "numpy.array": 1.0
        },
        "NUMPY_VISUALIZATION": {
            "numpy.array": 1.0
        },
        "SCIENTIFIC_COMPUTING": {
            "numpy.array": 1.0
        }
    },
    "npdiff": {
        "CS771": {
            "numpy.array": 1.0
        }
    },
    "ave_inflammation": {
        "CS771": {
            "numpy.mean": 1.0
        }
    },
    "X_reduced": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.manifold.TSNE": 1.0
        }
    },
    "data['math_pass']": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.where": 1.0
        }
    },
    "data['reading_pass']": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.where": 1.0
        }
    },
    "data['writing_pass']": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.where": 1.0
        }
    },
    "numeric_data": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.delete": 0.8,
            "numpy.append": 0.2
        }
    },
    "model2": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.linear_model.LogisticRegression": 0.5,
            "sklearn.tree.DecisionTreeClassifier": 0.5
        }
    },
    "tuned": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.linear_model.LogisticRegression": 1.0
        }
    },
    "rF": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.ensemble.RandomForestClassifier": 1.0
        }
    },
    "rf_tuned": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.ensemble.RandomForestClassifier": 1.0
        }
    },
    "rf_random": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.model_selection.RandomizedSearchCV": 1.0
        }
    },
    "reviews": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "json.load": 1.0
        }
    },
    "c": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "collections.Counter": 1.0
        },
        "NUMPY_VISUALIZATION": {
            "numpy.array": 1.0
        },
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.zeros": 1.0
        },
        "CS771": {
            "numpy.dot": 1.0
        },
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.array": 1.0
        },
        "TENSOR_FLOW": {
            "numpy.random.choice": 1.0
        },
        "IPython": {
            "collections.Counter": 1.0
        },
        "STRUCTURED_DATA": {
            "numpy.full": 1.0
        }
    },
    "scoreList": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.array": 1.0
        }
    },
    "likelihood[word][clss]": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.log": 1.0
        }
    },
    "X_training,X_test,Y_training,Y_test": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.model_selection.train_test_split": 1.0
        }
    },
    "X_train,X_val,Y_train,Y_val": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.model_selection.train_test_split": 1.0
        }
    },
    "accuracy": {
        "NUMPY_VISUALIZATION": {
            "sklearn.metrics.accuracy_score": 0.8,
            "numpy.sum": 0.2
        },
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.logspace": 1.0
        },
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.mean": 0.875,
            "numpy.array": 0.125
        }
    },
    "dA_prev": {
        "STRUCTURED_DATA": {
            "numpy.zeros": 1.0
        }
    },
    "dW": {
        "STRUCTURED_DATA": {
            "numpy.zeros": 1.0
        }
    },
    "A[i,h,w,c]": {
        "STRUCTURED_DATA": {
            "numpy.mean": 1.0
        }
    },
    "dA_prev[i,vert_start:vert_end,horiz_start:horiz_end,c]+": {
        "STRUCTURED_DATA": {
            "numpy.multiply": 1.0
        }
    },
    "X_pad": {
        "STRUCTURED_DATA": {
            "numpy.pad": 1.0
        }
    },
    "a_slice_prev": {
        "STRUCTURED_DATA": {
            "numpy.random.randn": 1.0
        },
        "SCIENTIFIC_COMPUTING": {
            "numpy.random.randn": 1.0
        }
    },
    "W": {
        "STRUCTURED_DATA": {
            "numpy.random.randn": 1.0
        },
        "TENSOR_FLOW": {
            "numpy.random.randn": 1.0
        },
        "CS771": {
            "numpy.random.randn": 1.0
        },
        "SCIENTIFIC_COMPUTING": {
            "numpy.random.randn": 1.0
        },
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "numpy.zeros": 1.0
        }
    },
    "A_prev": {
        "STRUCTURED_DATA": {
            "numpy.random.randn": 1.0
        }
    },
    "dA": {
        "STRUCTURED_DATA": {
            "numpy.random.randn": 1.0
        }
    },
    "data_batch": {
        "TENSOR_FLOW": {
            "numpy.array": 1.0
        }
    },
    "losses": {
        "TENSOR_FLOW": {
            "numpy.array": 1.0
        },
        "DEEP_NEURAL_NETWORKS": {
            "numpy.array": 1.0
        }
    },
    "example_z": {
        "TENSOR_FLOW": {
            "numpy.random.uniform": 1.0
        }
    },
    "batch_z": {
        "TENSOR_FLOW": {
            "numpy.random.uniform": 1.0
        }
    },
    "sample_values": {
        "STRUCTURED_DATA": {
            "numpy.array": 1.0
        }
    },
    "X1,X2": {
        "NUMPY_VISUALIZATION": {
            "numpy.meshgrid": 1.0
        }
    },
    "lda": {
        "NUMPY_VISUALIZATION": {
            "sklearn.discriminant_analysis.LinearDiscriminantAnalysis": 1.0
        }
    },
    "classifier": {
        "NUMPY_VISUALIZATION": {
            "sklearn.linear_model.LogisticRegression": 0.3333333333333333,
            "sklearn.tree.DecisionTreeClassifier": 0.6666666666666666
        },
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.naive_bayes.MultinomialNB": 1.0
        }
    },
    "cm": {
        "NUMPY_VISUALIZATION": {
            "sklearn.metrics.confusion_matrix": 1.0
        },
        "CS771": {
            "sklearn.metrics.confusion_matrix": 1.0
        },
        "STRUCTURED_DATA_VISUALIZATION": {
            "sklearn.metrics.confusion_matrix": 1.0
        },
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.metrics.confusion_matrix": 0.8,
            "numpy.corrcoef": 0.2
        },
        "TENSOR_FLOW": {
            "sklearn.metrics.confusion_matrix": 1.0
        }
    },
    "V_forward_array": {
        "STRUCTURED_DATA": {
            "numpy.array": 1.0
        }
    },
    "V_reverse_array": {
        "STRUCTURED_DATA": {
            "numpy.array": 1.0
        }
    },
    "v_n": {
        "STRUCTURED_DATA": {
            "numpy.array": 1.0
        }
    },
    "tt": {
        "STRUCTURED_DATA": {
            "numpy.linspace": 1.0
        },
        "SCIKIT_LEARN": {
            "numpy.zeros": 1.0
        }
    },
    "q_forward": {
        "STRUCTURED_DATA": {
            "scipy.integrate.odeint": 1.0
        }
    },
    "q_reverse": {
        "STRUCTURED_DATA": {
            "scipy.integrate.odeint": 1.0
        }
    },
    "categorical_sample_points": {
        "TENSOR_FLOW": {
            "numpy.arange": 1.0
        }
    },
    "tiled_images": {
        "TENSOR_FLOW": {
            "numpy.concatenate": 1.0
        }
    },
    "continuous_sample_points": {
        "TENSOR_FLOW": {
            "numpy.linspace": 1.0
        }
    },
    "escalador": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.preprocessing.StandardScaler": 0.5,
            "sklearn.preprocessing.MinMaxScaler": 0.5
        }
    },
    "seleccionVariables": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.feature_selection.RFECV": 1.0
        }
    },
    "resultadosValidacion": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.model_selection.cross_val_score": 1.0
        }
    },
    "resultadosValidacionRn": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.model_selection.cross_val_score": 1.0
        }
    },
    "lm": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.linear_model.LinearRegression": 1.0
        }
    },
    "xi": {
        "NUMPY_VISUALIZATION": {
            "numpy.arange": 0.5,
            "numpy.array": 0.5
        }
    },
    "yi": {
        "NUMPY_VISUALIZATION": {
            "numpy.array": 1.0
        }
    },
    "sigma": {
        "NUMPY_VISUALIZATION": {
            "numpy.std": 1.0
        },
        "SCIKIT_LEARN": {
            "numpy.arange": 0.25,
            "scipy.ndimage.gaussian_filter1d": 0.25,
            "numpy.std": 0.25,
            "numpy.sqrt": 0.25
        },
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.asanyarray": 1.0
        }
    },
    "|python-c\"importjson;importsys;response": {
        "IPython": {
            "json.load": 1.0
        }
    },
    "batch_rewards": {
        "DEEP_NEURAL_NETWORKS": {
            "numpy.zeros": 1.0
        }
    },
    "indxes": {
        "DEEP_NEURAL_NETWORKS": {
            "numpy.squeeze": 1.0
        }
    },
    "total_rewards+": {
        "DEEP_NEURAL_NETWORKS": {
            "numpy.sum": 1.0
        }
    },
    "self.train_stats": {
        "DEEP_NEURAL_NETWORKS": {
            "collections.defaultdict": 1.0
        }
    },
    "self.n": {
        "NUMPY_VISUALIZATION": {
            "numpy.array": 1.0
        }
    },
    "In": {
        "NUMPY_VISUALIZATION": {
            "numpy.ones": 1.0
        }
    },
    "xx1,xx2": {
        "NUMPY_VISUALIZATION": {
            "numpy.meshgrid": 1.0
        },
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.meshgrid": 1.0
        }
    },
    "newX": {
        "STRUCTURED_DATA": {
            "numpy.zeros": 1.0
        }
    },
    "theta": {
        "STRUCTURED_DATA": {
            "numpy.dot": 0.3333333333333333,
            "numpy.linspace": 0.6666666666666666
        },
        "SCIKIT_LEARN": {
            "numpy.zeros": 1.0
        }
    },
    "Y_est": {
        "STRUCTURED_DATA": {
            "numpy.dot": 1.0
        }
    },
    "newTheta": {
        "STRUCTURED_DATA": {
            "numpy.dot": 1.0
        }
    },
    "newY_est": {
        "STRUCTURED_DATA": {
            "numpy.dot": 1.0
        }
    },
    "m0,c0": {
        "STRUCTURED_DATA": {
            "numpy.linalg.lstsq": 1.0
        }
    },
    "m1,c1": {
        "STRUCTURED_DATA": {
            "numpy.linalg.lstsq": 1.0
        }
    },
    "m2,c2": {
        "STRUCTURED_DATA": {
            "numpy.linalg.lstsq": 1.0
        }
    },
    "TP": {
        "NUMPY_VISUALIZATION": {
            "numpy.sum": 1.0
        }
    },
    "recall": {
        "NUMPY_VISUALIZATION": {
            "numpy.sum": 1.0
        },
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.zeros": 1.0
        }
    },
    "precision": {
        "NUMPY_VISUALIZATION": {
            "numpy.sum": 1.0
        }
    },
    "results['f_train']": {
        "NUMPY_VISUALIZATION": {
            "sklearn.metrics.fbeta_score": 1.0
        }
    },
    "results['f_test']": {
        "NUMPY_VISUALIZATION": {
            "sklearn.metrics.fbeta_score": 1.0
        }
    },
    "results['acc_train']": {
        "NUMPY_VISUALIZATION": {
            "sklearn.metrics.accuracy_score": 1.0
        }
    },
    "results['acc_test']": {
        "NUMPY_VISUALIZATION": {
            "sklearn.metrics.accuracy_score": 1.0
        }
    },
    "clf_C": {
        "NUMPY_VISUALIZATION": {
            "sklearn.ensemble.AdaBoostClassifier": 0.5,
            "sklearn.linear_model.LogisticRegression": 0.5
        }
    },
    "clf_A": {
        "NUMPY_VISUALIZATION": {
            "sklearn.naive_bayes.GaussianNB": 0.5,
            "sklearn.ensemble.RandomForestClassifier": 0.5
        }
    },
    "clf_B": {
        "NUMPY_VISUALIZATION": {
            "sklearn.tree.DecisionTreeClassifier": 0.5,
            "sklearn.naive_bayes.GaussianNB": 0.5
        }
    },
    "scorer": {
        "NUMPY_VISUALIZATION": {
            "sklearn.metrics.make_scorer": 1.0
        },
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.metrics.make_scorer": 1.0
        }
    },
    "grid_obj": {
        "NUMPY_VISUALIZATION": {
            "sklearn.model_selection.GridSearchCV": 1.0
        }
    },
    "epoch": {
        "STRUCTURED_DATA": {
            "numpy.arange": 1.0
        }
    },
    "N_filters": {
        "STRUCTURED_DATA": {
            "numpy.array": 1.0
        }
    },
    "mean": {
        "STRUCTURED_DATA": {
            "numpy.zeros": 1.0
        },
        "NUMPY_VISUALIZATION": {
            "numpy.mean": 0.5,
            "numpy.nanmean": 0.5
        },
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.mean": 1.0
        },
        "DEEP_NEURAL_NETWORKS": {
            "numpy.array": 1.0
        }
    },
    "median": {
        "STRUCTURED_DATA": {
            "numpy.zeros": 1.0
        }
    },
    "std_2": {
        "STRUCTURED_DATA": {
            "numpy.zeros": 1.0
        }
    },
    "mean_2": {
        "STRUCTURED_DATA": {
            "numpy.zeros": 1.0
        }
    },
    "median_2": {
        "STRUCTURED_DATA": {
            "numpy.zeros": 1.0
        }
    },
    "std_3": {
        "STRUCTURED_DATA": {
            "numpy.zeros": 1.0
        }
    },
    "mean_3": {
        "STRUCTURED_DATA": {
            "numpy.zeros": 1.0
        }
    },
    "median_3": {
        "STRUCTURED_DATA": {
            "numpy.zeros": 1.0
        }
    },
    "bin_true": {
        "STRUCTURED_DATA": {
            "numpy.zeros": 1.0
        }
    },
    "eps_mean": {
        "STRUCTURED_DATA": {
            "numpy.zeros": 1.0
        }
    },
    "eps_std": {
        "STRUCTURED_DATA": {
            "numpy.zeros": 1.0
        }
    },
    "u_mean": {
        "STRUCTURED_DATA": {
            "numpy.zeros": 1.0
        }
    },
    "u_std": {
        "STRUCTURED_DATA": {
            "numpy.zeros": 1.0
        }
    },
    "id_": {
        "STRUCTURED_DATA": {
            "numpy.where": 1.0
        }
    },
    "x_s3": {
        "STRUCTURED_DATA": {
            "numpy.where": 0.3333333333333333,
            "numpy.append": 0.6666666666666666
        }
    },
    "x_s2": {
        "STRUCTURED_DATA": {
            "numpy.where": 0.3333333333333333,
            "numpy.append": 0.6666666666666666
        }
    },
    "x_s1": {
        "STRUCTURED_DATA": {
            "numpy.where": 0.3333333333333333,
            "numpy.append": 0.6666666666666666
        }
    },
    "convolutions": {
        "STRUCTURED_DATA": {
            "numpy.squeeze": 1.0
        }
    },
    "residual_std": {
        "STRUCTURED_DATA": {
            "numpy.std": 1.0
        }
    },
    "loss": {
        "STRUCTURED_DATA": {
            "numpy.log10": 1.0
        }
    },
    "val_loss": {
        "STRUCTURED_DATA": {
            "numpy.log10": 1.0
        }
    },
    "std[i]": {
        "STRUCTURED_DATA": {
            "numpy.sqrt": 1.0
        }
    },
    "std_2[i]": {
        "STRUCTURED_DATA": {
            "numpy.sqrt": 1.0
        }
    },
    "std_3[i]": {
        "STRUCTURED_DATA": {
            "numpy.sqrt": 1.0
        }
    },
    "bin_VALUE_TRUE": {
        "STRUCTURED_DATA": {
            "numpy.linspace": 1.0
        }
    },
    "residual_bins": {
        "STRUCTURED_DATA": {
            "numpy.linspace": 1.0
        }
    },
    "residual_avg": {
        "STRUCTURED_DATA": {
            "numpy.average": 1.0
        }
    },
    "h_id": {
        "STRUCTURED_DATA": {
            "numpy.digitize": 1.0
        }
    },
    "median[i]": {
        "STRUCTURED_DATA": {
            "numpy.median": 1.0
        }
    },
    "median_2[i]": {
        "STRUCTURED_DATA": {
            "numpy.median": 1.0
        }
    },
    "median_3[i]": {
        "STRUCTURED_DATA": {
            "numpy.median": 1.0
        }
    },
    "residual_med": {
        "STRUCTURED_DATA": {
            "numpy.median": 1.0
        }
    },
    "h2,yh2,xh2": {
        "STRUCTURED_DATA": {
            "numpy.histogram2d": 1.0
        }
    },
    "history": {
        "STRUCTURED_DATA": {
            "numpy.load": 1.0
        }
    },
    "h1,xh1": {
        "STRUCTURED_DATA": {
            "numpy.histogram": 1.0
        }
    },
    "h_weight,xh_weight": {
        "STRUCTURED_DATA": {
            "numpy.histogram": 1.0
        }
    },
    "h3,xh3": {
        "STRUCTURED_DATA": {
            "numpy.histogram": 1.0
        }
    },
    "h4,xh4": {
        "STRUCTURED_DATA": {
            "numpy.histogram": 1.0
        }
    },
    "h_residual,x_h": {
        "STRUCTURED_DATA": {
            "numpy.histogram": 1.0
        }
    },
    "RAND_TRUE": {
        "STRUCTURED_DATA": {
            "numpy.random.rand": 1.0
        }
    },
    "movement": {
        "IPython": {
            "numpy.loadtxt": 1.0
        }
    },
    "ys": {
        "STRUCTURED_DATA": {
            "numpy.linalg.solve": 1.0
        },
        "TENSOR_FLOW": {
            "numpy.sin": 1.0
        }
    },
    "popular_books_matrix": {
        "NUMPY_VISUALIZATION": {
            "scipy.sparse.csr_matrix": 1.0
        }
    },
    "model_knn": {
        "NUMPY_VISUALIZATION": {
            "sklearn.neighbors.NearestNeighbors": 1.0
        }
    },
    "random_movie_index": {
        "NUMPY_VISUALIZATION": {
            "numpy.random.randint": 1.0
        }
    },
    "Xdata": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.concatenate": 1.0
        }
    },
    "argmax_fs": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.argmax": 1.0
        }
    },
    "epsilon": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.linspace": 1.0
        }
    },
    "cov": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.cov": 1.0
        },
        "IPython": {
            "numpy.mean": 0.5,
            "numpy.corrcoef": 0.5
        }
    },
    "pos": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.dstack": 0.6666666666666666,
            "re.search": 0.3333333333333333
        },
        "CS771": {
            "random.choice": 0.6,
            "numpy.array": 0.4
        },
        "TENSOR_FLOW": {
            "numpy.concatenate": 1.0
        }
    },
    "mat": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "scipy.io.loadmat": 0.6666666666666666,
            "sklearn.metrics.confusion_matrix": 0.3333333333333333
        }
    },
    "sim[i]": {
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "numpy.inner": 1.0
        }
    },
    "sim": {
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "numpy.ones": 1.0
        }
    },
    "s1w": {
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "re.findall": 1.0
        }
    },
    "s2w": {
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "re.findall": 1.0
        }
    },
    "res": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.zeros": 1.0
        },
        "NUMPY_VISUALIZATION": {
            "sklearn.model_selection.GridSearchCV": 0.2727272727272727,
            "sklearn.model_selection.RandomizedSearchCV": 0.7272727272727273
        },
        "SCIKIT_LEARN": {
            "scipy.optimize.minimize": 0.6666666666666666,
            "numpy.sqrt": 0.3333333333333333
        },
        "TENSOR_FLOW": {
            "scipy.optimize.minimize": 1.0
        }
    },
    "scale1": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.preprocessing.StandardScaler": 1.0
        }
    },
    "arr1": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.asarray": 1.0
        }
    },
    "arr2": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.asarray": 1.0
        }
    },
    "cfsmt": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "sklearn.metrics.confusion_matrix": 1.0
        }
    },
    "dt.fit(X,y)cfsmt": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "sklearn.metrics.confusion_matrix": 1.0
        }
    },
    "mnb": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "sklearn.naive_bayes.MultinomialNB": 1.0
        }
    },
    "mnb2": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "sklearn.naive_bayes.MultinomialNB": 1.0
        }
    },
    "path_y": {
        "STRUCTURED_DATA": {
            "numpy.arange": 1.0
        }
    },
    "path_x": {
        "STRUCTURED_DATA": {
            "numpy.zeros": 1.0
        }
    },
    "path_x,path_y": {
        "STRUCTURED_DATA": {
            "numpy.meshgrid": 1.0
        }
    },
    "indptr": {
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "numpy.zeros": 1.0
        }
    },
    "similairity": {
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "numpy.zeros": 1.0
        }
    },
    "left_side": {
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "numpy.empty": 1.0
        }
    },
    "right_side": {
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "numpy.empty": 1.0
        }
    },
    "w,b,X,Y": {
        "STRUCTURED_DATA": {
            "numpy.array": 1.0
        }
    },
    "Y_prediction": {
        "STRUCTURED_DATA": {
            "numpy.zeros": 1.0
        }
    },
    "cost": {
        "STRUCTURED_DATA": {
            "numpy.squeeze": 1.0
        },
        "NUMPY_VISUALIZATION": {
            "numpy.squeeze": 1.0
        }
    },
    "costs": {
        "STRUCTURED_DATA": {
            "numpy.squeeze": 1.0
        }
    },
    "u": {
        "CS771": {
            "numpy.linspace": 1.0
        },
        "STRUCTURED_DATA": {
            "numpy.random.uniform": 1.0
        },
        "SCIENTIFIC_COMPUTING": {
            "numpy.sort": 1.0
        }
    },
    "log_price": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.log": 1.0
        }
    },
    "ifnp.argmax(result)": {
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "numpy.argmax": 1.0
        }
    },
    "letters_only": {
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "re.sub": 1.0
        }
    },
    "ns_fpr,ns_tpr,_": {
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "sklearn.metrics.roc_curve": 1.0
        }
    },
    "lr_fpr,lr_tpr,_": {
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "sklearn.metrics.roc_curve": 1.0
        }
    },
    "ns_auc": {
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "sklearn.metrics.roc_auc_score": 1.0
        }
    },
    "lr_auc": {
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "sklearn.metrics.roc_auc_score": 1.0
        }
    },
    "log_reg": {
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "sklearn.linear_model.LogisticRegression": 1.0
        },
        "STRUCTURED_DATA_VISUALIZATION": {
            "sklearn.linear_model.LogisticRegression": 1.0
        }
    },
    "j": {
        "IPython": {
            "json.load": 1.0
        },
        "NUMPY_VISUALIZATION": {
            "numpy.argsort": 1.0
        }
    },
    "p_diffs": {
        "SCIKIT_LEARN": {
            "numpy.array": 1.0
        }
    },
    "new_page_converted": {
        "SCIKIT_LEARN": {
            "numpy.random.choice": 1.0
        }
    },
    "old_page_converted": {
        "SCIKIT_LEARN": {
            "numpy.random.choice": 1.0
        }
    },
    "p_new": {
        "SCIKIT_LEARN": {
            "numpy.random.choice": 1.0
        }
    },
    "p_old": {
        "SCIKIT_LEARN": {
            "numpy.random.choice": 1.0
        }
    },
    "tokens": {
        "TENSOR_FLOW": {
            "numpy.asarray": 1.0
        }
    },
    "casing": {
        "TENSOR_FLOW": {
            "numpy.asarray": 1.0
        }
    },
    "cat": {
        "SCIENTIFIC_COMPUTING": {
            "numpy.zeros": 1.0
        }
    },
    "dtype": {
        "SCIENTIFIC_COMPUTING": {
            "numpy.dtype": 1.0
        }
    },
    "ngood": {
        "SCIENTIFIC_COMPUTING": {
            "numpy.sum": 1.0
        }
    },
    "pndist": {
        "SCIENTIFIC_COMPUTING": {
            "numpy.sqrt": 1.0
        }
    },
    "medpmra": {
        "SCIENTIFIC_COMPUTING": {
            "numpy.median": 1.0
        }
    },
    "medpmdec": {
        "SCIENTIFIC_COMPUTING": {
            "numpy.median": 1.0
        }
    },
    "medplx": {
        "SCIENTIFIC_COMPUTING": {
            "numpy.median": 1.0
        }
    },
    "test": {
        "NUMPY_VISUALIZATION": {
            "numpy.arange": 1.0
        },
        "IPython": {
            "sklearn.datasets.load_files": 1.0
        }
    },
    "zmap": {
        "SCIKIT_LEARN": {
            "numpy.array": 1.0
        }
    },
    "pts": {
        "SCIKIT_LEARN": {
            "numpy.empty": 0.3333333333333333,
            "numpy.array": 0.6666666666666666
        },
        "STRUCTURED_DATA": {
            "numpy.array": 1.0
        },
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.column_stack": 1.0
        }
    },
    "dd": {
        "SCIKIT_LEARN": {
            "numpy.where": 1.0
        },
        "TENSOR_FLOW": {
            "numpy.sqrt": 1.0
        }
    },
    "(nmaps,ysize,xsize)": {
        "SCIKIT_LEARN": {
            "numpy.shape": 1.0
        }
    },
    "dmap": {
        "SCIKIT_LEARN": {
            "numpy.diff": 1.0
        }
    },
    "dx": {
        "SCIKIT_LEARN": {
            "numpy.median": 1.0
        }
    },
    "md": {
        "SCIKIT_LEARN": {
            "numpy.nanmin": 1.0
        }
    },
    "mean_MHHW": {
        "SCIKIT_LEARN": {
            "numpy.nanmean": 1.0
        }
    },
    "mean_3m": {
        "SCIKIT_LEARN": {
            "numpy.nanmean": 1.0
        }
    },
    "std_MHHW": {
        "SCIKIT_LEARN": {
            "numpy.nanstd": 1.0
        }
    },
    "std_3m": {
        "SCIKIT_LEARN": {
            "numpy.nanstd": 1.0
        }
    },
    "toss": {
        "IPython": {
            "random.randint": 1.0
        }
    },
    "whitespace": {
        "IPython": {
            "re.compile": 1.0
        }
    },
    "cnt": {
        "IPython": {
            "collections.Counter": 1.0
        }
    },
    "Linear": {
        "NUMPY_VISUALIZATION": {
            "sklearn.linear_model.LinearRegression": 1.0
        }
    },
    "GDBT": {
        "NUMPY_VISUALIZATION": {
            "sklearn.ensemble.GradientBoostingRegressor": 1.0
        }
    },
    "pop_data": {
        "IPython": {
            "json.load": 1.0
        }
    },
    "labelencoder_y": {
        "NUMPY_VISUALIZATION": {
            "sklearn.preprocessing.LabelEncoder": 1.0
        },
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "sklearn.preprocessing.LabelEncoder": 1.0
        }
    },
    "ct": {
        "NUMPY_VISUALIZATION": {
            "sklearn.compose.ColumnTransformer": 1.0
        },
        "STRUCTURED_DATA": {
            "numpy.array": 1.0
        }
    },
    "sc_y": {
        "NUMPY_VISUALIZATION": {
            "sklearn.preprocessing.StandardScaler": 1.0
        },
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.preprocessing.StandardScaler": 1.0
        }
    },
    "arr": {
        "SCIENTIFIC_COMPUTING": {
            "numpy.arange": 1.0
        },
        "STRUCTURED_DATA": {
            "numpy.asarray": 0.125,
            "numpy.array": 0.125,
            "numpy.random.randn": 0.25,
            "numpy.load": 0.5
        }
    },
    "matarr": {
        "SCIENTIFIC_COMPUTING": {
            "numpy.arange": 1.0
        }
    },
    "ar": {
        "SCIENTIFIC_COMPUTING": {
            "numpy.random.randint": 0.5,
            "numpy.array": 0.5
        },
        "NUMPY_VISUALIZATION": {
            "numpy.array": 1.0
        }
    },
    "runarr": {
        "SCIENTIFIC_COMPUTING": {
            "numpy.random.randint": 1.0
        }
    },
    "table": {
        "TENSOR_FLOW": {
            "numpy.array": 1.0
        }
    },
    "X_ext": {
        "TENSOR_FLOW": {
            "numpy.empty": 0.3333333333333333,
            "numpy.append": 0.6666666666666666
        }
    },
    "y_ext": {
        "TENSOR_FLOW": {
            "numpy.empty": 0.3333333333333333,
            "numpy.append": 0.6666666666666666
        }
    },
    "X_extended": {
        "TENSOR_FLOW": {
            "numpy.empty": 1.0
        }
    },
    "y_extended": {
        "TENSOR_FLOW": {
            "numpy.empty": 1.0
        }
    },
    "gray_img": {
        "TENSOR_FLOW": {
            "numpy.empty": 1.0
        }
    },
    "same_samples": {
        "TENSOR_FLOW": {
            "numpy.where": 1.0
        }
    },
    "samples_in_class": {
        "TENSOR_FLOW": {
            "numpy.bincount": 1.0
        }
    },
    "classes_names,classes_counts": {
        "TENSOR_FLOW": {
            "numpy.unique": 1.0
        }
    },
    "signnames": {
        "TENSOR_FLOW": {
            "numpy.genfromtxt": 1.0
        }
    },
    "gamma": {
        "TENSOR_FLOW": {
            "numpy.random.uniform": 1.0
        }
    },
    "triangle": {
        "SCIKIT_LEARN": {
            "numpy.array": 1.0
        }
    },
    "line_img": {
        "SCIKIT_LEARN": {
            "numpy.zeros_like": 1.0
        }
    },
    "kernel": {
        "SCIKIT_LEARN": {
            "numpy.ones": 1.0
        },
        "STRUCTURED_DATA": {
            "numpy.ones": 0.5,
            "numpy.float32": 0.5
        }
    },
    "left_line_avg": {
        "SCIKIT_LEARN": {
            "numpy.mean": 1.0
        }
    },
    "right_line_avg": {
        "SCIKIT_LEARN": {
            "numpy.mean": 1.0
        }
    },
    "self.graph": {
        "IPython": {
            "collections.defaultdict": 1.0
        }
    },
    "tf.set_random_seed(777)xy": {
        "TENSOR_FLOW": {
            "numpy.loadtxt": 1.0
        }
    },
    "data1": {
        "STRUCTURED_DATA": {
            "numpy.random.randn": 1.0
        }
    },
    "train3": {
        "TENSOR_FLOW": {
            "numpy.array": 1.0
        }
    },
    "test2": {
        "TENSOR_FLOW": {
            "numpy.array": 1.0
        }
    },
    "score_array": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.vstack": 1.0
        }
    },
    "gs_rf": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.model_selection.GridSearchCV": 1.0
        }
    },
    "gs_gbr": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.model_selection.GridSearchCV": 1.0
        }
    },
    "X_train_sm,X_valid,y_train_sm,y_valid": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.model_selection.train_test_split": 1.0
        }
    },
    "fullpca": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.decomposition.PCA": 1.0
        }
    },
    "simple_est": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.linear_model.LinearRegression": 1.0
        }
    },
    "pca_lin_est": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.linear_model.LinearRegression": 1.0
        }
    },
    "linreg_est": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.linear_model.LinearRegression": 1.0
        }
    },
    "ridge_pca_est": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.linear_model.Ridge": 0.5,
            "sklearn.linear_model.RidgeCV": 0.5
        }
    },
    "ridge_feat_est": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.linear_model.RidgeCV": 1.0
        }
    },
    "elnet_est": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.linear_model.ElasticNetCV": 0.5,
            "sklearn.linear_model.ElasticNet": 0.5
        }
    },
    "r2train": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.metrics.r2_score": 1.0
        }
    },
    "r2test": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.metrics.r2_score": 1.0
        }
    },
    "gbr": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.ensemble.GradientBoostingRegressor": 1.0
        },
        "STRUCTURED_DATA_VISUALIZATION": {
            "sklearn.ensemble.GradientBoostingRegressor": 1.0
        }
    },
    "gbr_est": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.ensemble.GradientBoostingRegressor": 1.0
        }
    },
    "rf_est": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.ensemble.RandomForestRegressor": 1.0
        }
    },
    "pcc,_": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "scipy.stats.pearsonr": 1.0
        }
    },
    "I_TY_array": {
        "STRUCTURED_DATA": {
            "numpy.array": 1.0
        }
    },
    "train_imgs": {
        "TENSOR_FLOW": {
            "numpy.array": 1.0
        }
    },
    "train_labels": {
        "TENSOR_FLOW": {
            "numpy.array": 1.0
        },
        "NUMPY_VISUALIZATION": {
            "numpy.array": 1.0
        }
    },
    "test_imgs": {
        "TENSOR_FLOW": {
            "numpy.array": 1.0
        }
    },
    "test_labels": {
        "TENSOR_FLOW": {
            "numpy.array": 1.0
        },
        "NUMPY_VISUALIZATION": {
            "numpy.array": 1.0
        },
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.ones": 1.0
        }
    },
    "train_acc": {
        "TENSOR_FLOW": {
            "numpy.argmax": 0.5,
            "numpy.mean": 0.5
        },
        "CS771": {
            "numpy.mean": 1.0
        }
    },
    "palabras": {
        "IPython": {
            "re.compile": 1.0
        }
    },
    "url": {
        "IPython": {
            "re.compile": 1.0
        }
    },
    "patron": {
        "IPython": {
            "re.compile": 1.0
        }
    },
    "fecha": {
        "IPython": {
            "re.compile": 1.0
        }
    },
    "a_list": {
        "CS771": {
            "numpy.array": 1.0
        }
    },
    "num": {
        "CS771": {
            "random.randint": 1.0
        }
    },
    "yerr": {
        "REQUESTS": {
            "numpy.sqrt": 1.0
        }
    },
    "ylabel": {
        "CS771": {
            "numpy.unique": 1.0
        }
    },
    "yticklabels": {
        "CS771": {
            "numpy.unique": 1.0
        }
    },
    "cl": {
        "CS771": {
            "sklearn.metrics.classification_report": 1.0
        }
    },
    "train.age": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.arange": 0.5,
            "numpy.digitize": 0.5
        }
    },
    "test.age": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.arange": 0.5,
            "numpy.digitize": 0.5
        }
    },
    "train.avg_glucose_level": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.arange": 0.5,
            "numpy.digitize": 0.5
        }
    },
    "test.avg_glucose_level": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.arange": 0.5,
            "numpy.digitize": 0.5
        }
    },
    "train.bmi": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.arange": 0.5,
            "numpy.digitize": 0.5
        }
    },
    "test.bmi": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.arange": 0.5,
            "numpy.digitize": 0.5
        }
    },
    "state": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.array": 1.0
        }
    },
    "logreg": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.linear_model.LogisticRegression": 1.0
        }
    },
    "bbc": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.linear_model.LogisticRegression": 1.0
        }
    },
    "logreg_score": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.model_selection.cross_val_score": 1.0
        }
    },
    "bagc_score": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.model_selection.cross_val_score": 1.0
        }
    },
    "bbc_score": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.model_selection.cross_val_score": 1.0
        }
    },
    "abc_score": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.model_selection.cross_val_score": 1.0
        }
    },
    "xgb_score": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.model_selection.cross_val_score": 1.0
        }
    },
    "bagc": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.ensemble.BaggingClassifier": 1.0
        }
    },
    "abc": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.ensemble.AdaBoostClassifier": 1.0
        }
    },
    "mm_scaler": {
        "SCIENTIFIC_COMPUTING": {
            "sklearn.preprocessing.MinMaxScaler": 1.0
        }
    },
    "principals": {
        "SCIENTIFIC_COMPUTING": {
            "sklearn.decomposition.PCA": 1.0
        }
    },
    "km": {
        "SCIENTIFIC_COMPUTING": {
            "sklearn.cluster.KMeans": 1.0
        },
        "STRUCTURED_DATA_VISUALIZATION": {
            "sklearn.cluster.MiniBatchKMeans": 1.0
        },
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.cluster.KMeans": 1.0
        },
        "CS771": {
            "sklearn.cluster.KMeans": 1.0
        },
        "NUMPY_VISUALIZATION": {
            "sklearn.cluster.KMeans": 1.0
        }
    },
    "enc": {
        "TENSOR_FLOW": {
            "sklearn.preprocessing.OneHotEncoder": 1.0
        },
        "IPython": {
            "sklearn.preprocessing.OneHotEncoder": 1.0
        },
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "numpy.array": 1.0
        }
    },
    "df[f'{column}_cos']": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.cos": 1.0
        }
    },
    "X.loc[:,f'{self.column}_cos']": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.cos": 1.0
        }
    },
    "df[f'{column}_sin']": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.sin": 1.0
        }
    },
    "X.loc[:,f'{self.column}_sin']": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.sin": 1.0
        }
    },
    "X_train,X_test_val,y_train,y_test_val": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.model_selection.train_test_split": 1.0
        }
    },
    "X_test,X_val,y_test,y_val": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.model_selection.train_test_split": 1.0
        }
    },
    "cnf_mx": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.metrics.confusion_matrix": 1.0
        }
    },
    "ax": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.metrics.roc_curve": 1.0
        }
    },
    "auc": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.metrics.roc_auc_score": 1.0
        },
        "NUMPY_VISUALIZATION": {
            "sklearn.metrics.roc_auc_score": 1.0
        }
    },
    "forest_clf": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.ensemble.RandomForestClassifier": 1.0
        },
        "STRUCTURED_DATA_VISUALIZATION": {
            "sklearn.ensemble.RandomForestClassifier": 1.0
        }
    },
    "pipeline_preprocess": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.pipeline.Pipeline": 1.0
        }
    },
    "color": {
        "SCIKIT_LEARN": {
            "numpy.random.normal": 1.0
        },
        "STRUCTURED_DATA": {
            "numpy.random.randint": 1.0
        }
    },
    "tamaño": {
        "SCIKIT_LEARN": {
            "numpy.random.uniform": 1.0
        }
    },
    "img": {
        "SCIKIT_LEARN": {
            "scipy.misc.face": 1.0
        },
        "DEEP_NEURAL_NETWORKS": {
            "numpy.squeeze": 0.3333333333333333,
            "numpy.moveaxis": 0.6666666666666666
        },
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.array": 1.0
        },
        "TENSOR_FLOW": {
            "numpy.clip": 1.0
        }
    },
    "ids": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.array": 1.0
        },
        "TENSOR_FLOW": {
            "numpy.random.randint": 1.0
        }
    },
    "incorrect": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.where": 1.0
        },
        "NUMPY_VISUALIZATION": {
            "numpy.nonzero": 1.0
        }
    },
    "correct_cats": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.where": 1.0
        }
    },
    "correct_dogs": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.where": 1.0
        }
    },
    "incorrect_cats": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.where": 1.0
        }
    },
    "incorrect_dogs": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.where": 1.0
        }
    },
    "most_correct_cats": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.argsort": 1.0
        }
    },
    "most_correct_dogs": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.argsort": 1.0
        }
    },
    "most_incorrect_cats": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.argsort": 1.0
        }
    },
    "most_incorrect_dogs": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.argsort": 1.0
        }
    },
    "most_uncertain": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.argsort": 1.0
        }
    },
    "subm": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.stack": 1.0
        }
    },
    "shuf": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.random.permutation": 1.0
        }
    },
    "test_agent.Q": {
        "CS771": {
            "numpy.array": 1.0
        }
    },
    "words_count": {
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "collections.defaultdict": 1.0
        }
    },
    "diabetes_X": {
        "NUMPY_VISUALIZATION": {
            "numpy.array": 1.0
        }
    },
    "diabetes_y_train": {
        "NUMPY_VISUALIZATION": {
            "numpy.array": 1.0
        }
    },
    "diabetes_y_test": {
        "NUMPY_VISUALIZATION": {
            "numpy.array": 1.0
        }
    },
    "S_train": {
        "NUMPY_VISUALIZATION": {
            "numpy.zeros": 1.0
        }
    },
    "S_predict": {
        "NUMPY_VISUALIZATION": {
            "numpy.zeros": 1.0
        }
    },
    "S_predict_i": {
        "NUMPY_VISUALIZATION": {
            "numpy.zeros": 1.0
        }
    },
    "clean_X": {
        "NUMPY_VISUALIZATION": {
            "numpy.concatenate": 1.0
        }
    },
    "clean_y": {
        "NUMPY_VISUALIZATION": {
            "numpy.concatenate": 1.0
        }
    },
    "all_X_train": {
        "NUMPY_VISUALIZATION": {
            "numpy.concatenate": 1.0
        }
    },
    "all_y_train": {
        "NUMPY_VISUALIZATION": {
            "numpy.concatenate": 1.0
        }
    },
    "avg_mse": {
        "NUMPY_VISUALIZATION": {
            "numpy.average": 1.0
        }
    },
    "avg_score": {
        "NUMPY_VISUALIZATION": {
            "numpy.average": 1.0
        }
    },
    "forest1": {
        "NUMPY_VISUALIZATION": {
            "sklearn.ensemble.RandomForestRegressor": 1.0
        }
    },
    "forest2": {
        "NUMPY_VISUALIZATION": {
            "sklearn.ensemble.RandomForestRegressor": 1.0
        }
    },
    "forest3": {
        "NUMPY_VISUALIZATION": {
            "sklearn.ensemble.RandomForestRegressor": 1.0
        }
    },
    "gbdt1": {
        "NUMPY_VISUALIZATION": {
            "sklearn.ensemble.GradientBoostingRegressor": 1.0
        }
    },
    "gbdt2": {
        "NUMPY_VISUALIZATION": {
            "sklearn.ensemble.GradientBoostingRegressor": 1.0
        }
    },
    "gbdt3": {
        "NUMPY_VISUALIZATION": {
            "sklearn.ensemble.GradientBoostingRegressor": 1.0
        }
    },
    "sm": {
        "NUMPY_VISUALIZATION": {
            "sklearn.feature_selection.SelectFromModel": 1.0
        }
    },
    "stacking_model": {
        "NUMPY_VISUALIZATION": {
            "sklearn.svm.SVR": 1.0
        }
    },
    "stacking_model2": {
        "NUMPY_VISUALIZATION": {
            "sklearn.svm.SVR": 1.0
        }
    },
    "polynm": {
        "NUMPY_VISUALIZATION": {
            "sklearn.preprocessing.PolynomialFeatures": 1.0
        }
    },
    "chose_data2['rating']": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.where": 1.0
        }
    },
    "svr": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.svm.SVR": 1.0
        },
        "NUMPY_VISUALIZATION": {
            "sklearn.svm.SVR": 1.0
        }
    },
    "svm": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.svm.SVC": 1.0
        }
    },
    "svm2": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.svm.SVC": 1.0
        }
    },
    "linear_model": {
        "NUMPY_VISUALIZATION": {
            "sklearn.linear_model.LinearRegression": 1.0
        }
    },
    "multiple_model": {
        "NUMPY_VISUALIZATION": {
            "sklearn.linear_model.LinearRegression": 1.0
        }
    },
    "poly_lin": {
        "NUMPY_VISUALIZATION": {
            "sklearn.linear_model.LinearRegression": 1.0
        }
    },
    "X_train,X_test,_train,y_test": {
        "NUMPY_VISUALIZATION": {
            "sklearn.model_selection.train_test_split": 1.0
        }
    },
    "logistic_model": {
        "NUMPY_VISUALIZATION": {
            "sklearn.linear_model.LogisticRegression": 1.0
        }
    },
    "neigh": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.neighbors.KNeighborsClassifier": 1.0
        }
    },
    "ks_model": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.linear_model.LogisticRegression": 1.0
        }
    },
    "tr": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.tree.DecisionTreeClassifier": 1.0
        }
    },
    "scaled": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.preprocessing.MinMaxScaler": 1.0
        }
    },
    "dist": {
        "TENSOR_FLOW": {
            "numpy.linalg.norm": 1.0
        }
    },
    "print(c.shape)d": {
        "NUMPY_VISUALIZATION": {
            "numpy.array": 1.0
        }
    },
    "idx": {
        "NUMPY_VISUALIZATION": {
            "numpy.array": 1.0
        },
        "TENSOR_FLOW": {
            "numpy.arange": 1.0
        }
    },
    "x.sum(axis": {
        "NUMPY_VISUALIZATION": {
            "numpy.zeros": 1.0
        }
    },
    "b2": {
        "NUMPY_VISUALIZATION": {
            "numpy.zeros": 1.0
        }
    },
    "c2": {
        "NUMPY_VISUALIZATION": {
            "numpy.zeros": 1.0
        }
    },
    "innerproduct": {
        "NUMPY_VISUALIZATION": {
            "numpy.dot": 1.0
        }
    },
    "b1": {
        "NUMPY_VISUALIZATION": {
            "numpy.ones": 0.5,
            "numpy.zeros": 0.5
        }
    },
    "c1": {
        "NUMPY_VISUALIZATION": {
            "numpy.ones": 1.0
        }
    },
    "matrix2": {
        "NUMPY_VISUALIZATION": {
            "numpy.identity": 1.0
        }
    },
    "e": {
        "NUMPY_VISUALIZATION": {
            "numpy.stack": 1.0
        },
        "STRUCTURED_DATA": {
            "numpy.array": 0.5,
            "numpy.random.random": 0.5
        }
    },
    "np.arange(10)np.arange(3,21,2)np.linspace(0,100,5)np.logspace(0,100,5)np.random.rand(3,2)np.random.randn(2,4)matrix1": {
        "NUMPY_VISUALIZATION": {
            "numpy.diag": 1.0
        }
    },
    "matrix3": {
        "NUMPY_VISUALIZATION": {
            "numpy.eye": 1.0
        }
    },
    "index,count": {
        "NUMPY_VISUALIZATION": {
            "numpy.unique": 1.0
        }
    },
    "countnp.bincount([1,1,2,2,2,3],minlength": {
        "NUMPY_VISUALIZATION": {
            "numpy.random.randn": 1.0
        }
    },
    "sorted_index": {
        "NUMPY_VISUALIZATION": {
            "numpy.argsort": 1.0
        }
    },
    "x0,x1": {
        "NUMPY_VISUALIZATION": {
            "numpy.meshgrid": 1.0
        }
    },
    "dt_clf": {
        "NUMPY_VISUALIZATION": {
            "sklearn.tree.DecisionTreeClassifier": 1.0
        }
    },
    "preprocessor": {
        "NUMPY_VISUALIZATION": {
            "sklearn.compose.ColumnTransformer": 1.0
        }
    },
    "numerical_transformer": {
        "NUMPY_VISUALIZATION": {
            "sklearn.pipeline.make_pipeline": 1.0
        }
    },
    "categorical_transformer": {
        "NUMPY_VISUALIZATION": {
            "sklearn.pipeline.make_pipeline": 1.0
        }
    },
    "feature": {
        "NUMPY_VISUALIZATION": {
            "numpy.array": 1.0
        }
    },
    "normalizer": {
        "NUMPY_VISUALIZATION": {
            "sklearn.preprocessing.Normalizer": 1.0
        }
    },
    "features_l1_norm": {
        "NUMPY_VISUALIZATION": {
            "sklearn.preprocessing.Normalizer": 1.0
        }
    },
    "features,_": {
        "NUMPY_VISUALIZATION": {
            "sklearn.datasets.make_blobs": 1.0
        }
    },
    "clusterer": {
        "NUMPY_VISUALIZATION": {
            "sklearn.cluster.KMeans": 1.0
        },
        "CS771": {
            "sklearn.cluster.KMeans": 1.0
        }
    },
    "train_features,test_features,train_labels,test_labels": {
        "NUMPY_VISUALIZATION": {
            "sklearn.model_selection.train_test_split": 1.0
        }
    },
    "fixed_z": {
        "DEEP_NEURAL_NETWORKS": {
            "numpy.random.uniform": 1.0
        }
    },
    "rand_z": {
        "DEEP_NEURAL_NETWORKS": {
            "numpy.random.uniform": 1.0
        }
    },
    "positive_windows": {
        "STRUCTURED_DATA": {
            "numpy.array": 1.0
        }
    },
    "negative_windows": {
        "STRUCTURED_DATA": {
            "numpy.array": 1.0
        }
    },
    "is_negative": {
        "STRUCTURED_DATA": {
            "numpy.ones": 1.0
        }
    },
    "regions_label": {
        "STRUCTURED_DATA": {
            "json.load": 1.0
        }
    },
    "rfc_cv_score": {
        "NUMPY_VISUALIZATION": {
            "sklearn.model_selection.cross_val_score": 1.0
        }
    },
    "rfc_random": {
        "NUMPY_VISUALIZATION": {
            "sklearn.model_selection.RandomizedSearchCV": 1.0
        }
    },
    "test_img": {
        "IPython": {
            "numpy.array": 1.0
        }
    },
    "fromskimage.ioimportimreadimportmatplotlib.pyplotaspltfromskimage.measureimportlabelfromskimage.measureimportregionpropsimportnumpyasnpfromskimage.colorimportlabel2rgbimportmatplotlib.patchesasmpatchestest_img": {
        "IPython": {
            "numpy.eye": 1.0
        }
    },
    "em_idx": {
        "IPython": {
            "numpy.random.permutation": 1.0
        }
    },
    "dataset": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.ndarray": 1.0
        },
        "CS771": {
            "sklearn.datasets.fetch_20newsgroups": 1.0
        }
    },
    "test_images": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.reshape": 1.0
        }
    },
    "permutation": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.random.permutation": 1.0
        }
    },
    "acc_train": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.metrics.accuracy_score": 1.0
        }
    },
    "sigmay": {
        "STRUCTURED_DATA": {
            "numpy.array": 0.5,
            "numpy.poly": 0.5
        }
    },
    "ma_coefs": {
        "STRUCTURED_DATA": {
            "numpy.array": 1.0
        }
    },
    "t[0:90]": {
        "STRUCTURED_DATA": {
            "numpy.cumsum": 1.0
        }
    },
    "sigsqr": {
        "STRUCTURED_DATA": {
            "numpy.logspace": 1.0
        }
    },
    "lag": {
        "STRUCTURED_DATA": {
            "numpy.linspace": 1.0
        }
    },
    "n_jobs": {
        "NUMPY_VISUALIZATION": {
            "numpy.linspace": 1.0
        },
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.linspace": 1.0
        }
    },
    "amenities_all": {
        "NUMPY_VISUALIZATION": {
            "numpy.unique": 1.0
        }
    },
    "gs_knn": {
        "NUMPY_VISUALIZATION": {
            "sklearn.model_selection.GridSearchCV": 0.5,
            "sklearn.neighbors.KNeighborsRegressor": 0.5
        }
    },
    "y_pred_new1": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.exp": 1.0
        }
    },
    "train_test['sales_log']": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.log": 1.0
        }
    },
    "X_train,X_valid,y_train,y_valid": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.model_selection.train_test_split": 1.0
        },
        "CS771": {
            "sklearn.model_selection.train_test_split": 1.0
        },
        "DEEP_NEURAL_NETWORKS": {
            "sklearn.model_selection.train_test_split": 1.0
        }
    },
    "rd": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "random.randrange": 1.0
        }
    },
    "error_idx": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.where": 1.0
        }
    },
    "rand_idx": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.random.choice": 1.0
        }
    },
    "X_train,X_test,y_train_pca,y_test_pca": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.model_selection.train_test_split": 1.0
        }
    },
    "svm_cv": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.model_selection.RandomizedSearchCV": 1.0
        }
    },
    "kfold": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.model_selection.StratifiedKFold": 1.0
        },
        "NUMPY_VISUALIZATION": {
            "sklearn.model_selection.StratifiedKFold": 0.2,
            "sklearn.model_selection.KFold": 0.8
        }
    },
    "idxs": {
        "CS771": {
            "numpy.flatnonzero": 0.4,
            "numpy.random.choice": 0.5,
            "numpy.where": 0.1
        }
    },
    "val_acc": {
        "CS771": {
            "numpy.mean": 1.0
        }
    },
    "test_accuracy": {
        "CS771": {
            "numpy.mean": 1.0
        },
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "sklearn.metrics.accuracy_score": 1.0
        },
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.metrics.accuracy_score": 1.0
        }
    },
    "X_dev": {
        "CS771": {
            "numpy.reshape": 0.5,
            "numpy.hstack": 0.5
        }
    },
    "difference": {
        "CS771": {
            "numpy.linalg.norm": 1.0
        },
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.square": 1.0
        }
    },
    "boston[\"CRIM\"]": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.where": 1.0
        }
    },
    "avengers[\"age\"]": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.where": 1.0
        }
    },
    "df[\"Fare\"]": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.where": 1.0
        }
    },
    "df['Fare']": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.where": 1.0
        }
    },
    "pct_missing": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.mean": 1.0
        }
    },
    "q1,q3": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.percentile": 1.0
        }
    },
    "boston_dataset": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.datasets.load_boston": 1.0
        }
    },
    "R": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.zeros": 1.0
        },
        "SCIENTIFIC_COMPUTING": {
            "numpy.corrcoef": 1.0
        },
        "STRUCTURED_DATA": {
            "numpy.array": 1.0
        },
        "TENSOR_FLOW": {
            "numpy.random.randint": 1.0
        }
    },
    "signals[\"p>2\"]": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.where": 1.0
        }
    },
    "signals[\"p>1\"]": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.where": 1.0
        }
    },
    "signals[\"p>-1\"]": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.where": 1.0
        }
    },
    "signals[\"p>-2\"]": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.where": 1.0
        }
    },
    "signals['short']": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.where": 1.0
        }
    },
    "signals['short2']": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.where": 1.0
        }
    },
    "signals[\"short\"]": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.where": 1.0
        }
    },
    "signals[\"positions\"]": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.where": 1.0
        }
    },
    "prices['returns']": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.log": 1.0
        }
    },
    "new_state": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.random.choice": 1.0
        }
    },
    "state_idx": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "random.randint": 1.0
        }
    },
    "action_idx": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "random.randint": 1.0
        }
    },
    "random_num": {
        "TENSOR_FLOW": {
            "numpy.random.randint": 1.0
        }
    },
    "K": {
        "SCIENTIFIC_COMPUTING": {
            "numpy.arange": 1.0
        }
    },
    "K2": {
        "SCIENTIFIC_COMPUTING": {
            "numpy.arange": 1.0
        }
    },
    "Rk": {
        "SCIENTIFIC_COMPUTING": {
            "numpy.zeros": 1.0
        }
    },
    "qrows": {
        "SCIENTIFIC_COMPUTING": {
            "numpy.concatenate": 1.0
        }
    },
    "autocovs2": {
        "SCIENTIFIC_COMPUTING": {
            "numpy.correlate": 1.0
        }
    },
    "rnd_choice": {
        "DEEP_NEURAL_NETWORKS": {
            "random.choice": 1.0
        }
    },
    "X_ter": {
        "NUMPY_VISUALIZATION": {
            "sklearn.decomposition.KernelPCA": 1.0
        }
    },
    "X_bis": {
        "NUMPY_VISUALIZATION": {
            "sklearn.decomposition.PCA": 1.0
        }
    },
    "iris": {
        "NUMPY_VISUALIZATION": {
            "sklearn.datasets.load_iris": 1.0
        }
    },
    "displacement_field": {
        "STRUCTURED_DATA": {
            "numpy.zeros": 1.0
        }
    },
    "intercept": {
        "STRUCTURED_DATA": {
            "numpy.ones": 1.0
        }
    },
    "ll": {
        "STRUCTURED_DATA": {
            "numpy.sum": 1.0
        }
    },
    "simulated_labels": {
        "STRUCTURED_DATA": {
            "numpy.hstack": 1.0
        }
    },
    "simulated_separableish_features": {
        "STRUCTURED_DATA": {
            "numpy.vstack": 1.0
        }
    },
    "x2": {
        "STRUCTURED_DATA": {
            "numpy.random.multivariate_normal": 0.5,
            "numpy.random.rand": 0.5
        },
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.arange": 1.0
        },
        "IPython": {
            "numpy.arange": 1.0
        }
    },
    "forfeatureinexplore_features:hist_series": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.array": 0.5,
            "collections.Counter": 0.5
        }
    },
    "calib": {
        "STRUCTURED_DATA": {
            "numpy.array": 1.0
        }
    },
    "CALIB": {
        "STRUCTURED_DATA": {
            "numpy.array": 1.0
        }
    },
    "depth": {
        "STRUCTURED_DATA": {
            "numpy.array": 1.0
        }
    },
    "pt_2d": {
        "STRUCTURED_DATA": {
            "numpy.array": 1.0
        }
    },
    "r": {
        "STRUCTURED_DATA": {
            "numpy.array": 0.5,
            "numpy.linspace": 0.5
        },
        "IPython": {
            "random.randint": 1.0
        },
        "CS771": {
            "random.random": 1.0
        }
    },
    "corners": {
        "STRUCTURED_DATA": {
            "numpy.array": 1.0
        }
    },
    "orientation_3d": {
        "STRUCTURED_DATA": {
            "numpy.array": 0.5,
            "numpy.dot": 0.5
        }
    },
    "vc": {
        "STRUCTURED_DATA": {
            "numpy.zeros": 1.0
        }
    },
    "pts_3d_homo": {
        "STRUCTURED_DATA": {
            "numpy.concatenate": 1.0
        }
    },
    "corners_3d": {
        "STRUCTURED_DATA": {
            "numpy.dot": 1.0
        }
    },
    "pts_2d": {
        "STRUCTURED_DATA": {
            "numpy.dot": 1.0
        }
    },
    "c,s": {
        "STRUCTURED_DATA": {
            "numpy.cos": 1.0
        }
    },
    "Counts_np": {
        "NUMPY_VISUALIZATION": {
            "numpy.array": 1.0
        }
    },
    "plt.scatter(np.array(X),np.array(Y),c": {
        "NUMPY_VISUALIZATION": {
            "numpy.array": 1.0
        }
    },
    "Counts": {
        "NUMPY_VISUALIZATION": {
            "numpy.zeros": 1.0
        }
    },
    "clustering": {
        "NUMPY_VISUALIZATION": {
            "sklearn.cluster.MeanShift": 1.0
        }
    },
    "X_train_augmented": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.array": 1.0
        }
    },
    "y_train_augmented": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.array": 1.0
        }
    },
    "X_train_expanded": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.concatenate": 1.0
        }
    },
    "y_train_expanded": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.concatenate": 1.0
        }
    },
    "shifted_images": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.apply_along_axis": 1.0
        }
    },
    "shuffle_idx": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.random.permutation": 1.0
        }
    },
    "noise": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.random.randint": 1.0
        },
        "NUMPY_VISUALIZATION": {
            "numpy.random.randn": 1.0
        },
        "TENSOR_FLOW": {
            "numpy.random.normal": 1.0
        }
    },
    "mnist": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "sklearn.datasets.fetch_openml": 1.0
        }
    },
    "sgd_clf": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "sklearn.linear_model.SGDClassifier": 1.0
        }
    },
    "svm_scores": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "sklearn.model_selection.cross_val_score": 1.0
        }
    },
    "skfolds": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "sklearn.model_selection.StratifiedKFold": 1.0
        }
    },
    "y_train_pred": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "sklearn.model_selection.cross_val_predict": 1.0
        }
    },
    "y_scores": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "sklearn.model_selection.cross_val_predict": 1.0
        }
    },
    "y_probas_forest": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "sklearn.model_selection.cross_val_predict": 1.0
        }
    },
    "y_train_pred_forest": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "sklearn.model_selection.cross_val_predict": 1.0
        }
    },
    "y_train_knn_pred": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "sklearn.model_selection.cross_val_predict": 1.0
        }
    },
    "y_probas_dmy": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "sklearn.model_selection.cross_val_predict": 1.0
        }
    },
    "conf_mx": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "sklearn.metrics.confusion_matrix": 1.0
        }
    },
    "precisions,recalls,thresholds": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "sklearn.metrics.precision_recall_curve": 1.0
        }
    },
    "y_scores_forest": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "sklearn.metrics.roc_curve": 1.0
        }
    },
    "fprr,tprr,thresholdsr": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "sklearn.metrics.roc_curve": 1.0
        }
    },
    "svm_clf": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "sklearn.svm.SVC": 1.0
        }
    },
    "ovr_clf": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "sklearn.multiclass.OneVsRestClassifier": 1.0
        }
    },
    "knn_clf": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "sklearn.neighbors.KNeighborsClassifier": 1.0
        }
    },
    "dmy_clf": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "sklearn.dummy.DummyClassifier": 1.0
        }
    },
    "cat_pipeline": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "sklearn.pipeline.Pipeline": 1.0
        }
    },
    "preprocess_pipeline": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "sklearn.pipeline.Pipeline": 0.5,
            "sklearn.pipeline.FeatureUnion": 0.5
        }
    },
    "structures": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "collections.Counter": 1.0
        }
    },
    "word_counts": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "collections.Counter": 1.0
        }
    },
    "stemmed_word_counts": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "collections.Counter": 1.0
        }
    },
    "total_count": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "collections.Counter": 1.0
        }
    },
    "log_clf": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "sklearn.linear_model.LogisticRegression": 1.0
        }
    },
    "grades_array": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.array": 1.0
        }
    },
    "grades-grades.values.mean()bonus_array": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.array": 1.0
        }
    },
    "much_data": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.fromfunction": 1.0
        }
    },
    "masked_array": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.ma.asarray": 1.0
        }
    },
    "result_vector": {
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "numpy.zeros": 1.0
        }
    },
    "non_zero_elements_count": {
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "numpy.count_nonzero": 1.0
        }
    },
    "REPLACE_BY_SPACE_RE": {
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "re.compile": 1.0
        }
    },
    "BAD_SYMBOLS_RE": {
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "re.compile": 1.0
        }
    },
    "tags_counts": {
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "collections.Counter": 1.0
        }
    },
    "ovr": {
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "sklearn.multiclass.OneVsRestClassifier": 1.0
        }
    },
    "maximum_price": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.amax": 1.0
        }
    },
    "minimum_price": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.amin": 1.0
        }
    },
    "mean_price": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.mean": 1.0
        }
    },
    "std_price": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.std": 1.0
        }
    },
    "median_price": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.median": 1.0
        }
    },
    "lr_conf_matrix": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.metrics.confusion_matrix": 1.0
        }
    },
    "lr_acc_score": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.metrics.accuracy_score": 1.0
        }
    },
    "boundaries": {
        "STRUCTURED_DATA": {
            "numpy.array": 1.0
        }
    },
    "placement_rsrc_range": {
        "STRUCTURED_DATA": {
            "numpy.array": 1.0
        }
    },
    "weak_range": {
        "STRUCTURED_DATA": {
            "numpy.array": 1.0
        }
    },
    "strong_range": {
        "STRUCTURED_DATA": {
            "numpy.array": 1.0
        }
    },
    "rsrc_cost": {
        "STRUCTURED_DATA": {
            "numpy.array": 1.0
        }
    },
    "servers_l3.append(Server(boundaries,level": {
        "STRUCTURED_DATA": {
            "numpy.array": 1.0
        }
    },
    "lv_minmax": {
        "STRUCTURED_DATA": {
            "numpy.array": 1.0
        }
    },
    "link_costs": {
        "STRUCTURED_DATA": {
            "numpy.array": 1.0
        }
    },
    "locs": {
        "STRUCTURED_DATA": {
            "numpy.zeros": 1.0
        },
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.arange": 1.0
        },
        "SCIENTIFIC_COMPUTING": {
            "numpy.where": 1.0
        }
    },
    "draw_job_id": {
        "STRUCTURED_DATA": {
            "numpy.random.choice": 1.0
        }
    },
    "groups": {
        "IPython": {
            "collections.defaultdict": 1.0
        }
    },
    "ds": {
        "IPython": {
            "collections.defaultdict": 1.0
        },
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.loadtxt": 1.0
        },
        "NUMPY_VISUALIZATION": {
            "sklearn.datasets.load_diabetes": 0.5,
            "sklearn.datasets.load_iris": 0.5
        }
    },
    "dp": {
        "IPython": {
            "collections.defaultdict": 1.0
        }
    },
    "self._q": {
        "IPython": {
            "collections.deque": 1.0
        }
    },
    "y_randterm": {
        "STRUCTURED_DATA": {
            "numpy.random.normal": 1.0
        }
    },
    "corrmat": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.corrcoef": 1.0
        }
    },
    "p,r,thresholds": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.metrics.precision_recall_curve": 1.0
        }
    },
    "zero_matrix": {
        "SCIENTIFIC_COMPUTING": {
            "numpy.zeros": 1.0
        }
    },
    "data[np.abs(data)>3]": {
        "SCIENTIFIC_COMPUTING": {
            "numpy.sign": 1.0
        }
    },
    "sampler": {
        "SCIENTIFIC_COMPUTING": {
            "numpy.random.permutation": 1.0
        }
    },
    "regex": {
        "SCIENTIFIC_COMPUTING": {
            "re.compile": 1.0
        },
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "re.compile": 1.0
        }
    },
    "X_": {
        "TENSOR_FLOW": {
            "numpy.zeros": 1.0
        }
    },
    "mnist_train": {
        "TENSOR_FLOW": {
            "numpy.concatenate": 1.0
        }
    },
    "mnist_test": {
        "TENSOR_FLOW": {
            "numpy.concatenate": 1.0
        }
    },
    "Q3_cum": {
        "TENSOR_FLOW": {
            "numpy.concatenate": 0.5,
            "numpy.expand_dims": 0.5
        }
    },
    "Q4_cum": {
        "TENSOR_FLOW": {
            "numpy.concatenate": 0.5,
            "numpy.expand_dims": 0.5
        }
    },
    "eta3_cum": {
        "TENSOR_FLOW": {
            "numpy.concatenate": 0.5,
            "numpy.expand_dims": 0.5
        }
    },
    "eta4_cum": {
        "TENSOR_FLOW": {
            "numpy.concatenate": 0.5,
            "numpy.expand_dims": 0.5
        }
    },
    "coeffs": {
        "TENSOR_FLOW": {
            "numpy.ones": 1.0
        },
        "CS771": {
            "numpy.array": 1.0
        }
    },
    "eta3_np": {
        "TENSOR_FLOW": {
            "numpy.mean": 1.0
        }
    },
    "eta4_np": {
        "TENSOR_FLOW": {
            "numpy.mean": 1.0
        }
    },
    "Q3_mean": {
        "TENSOR_FLOW": {
            "numpy.mean": 1.0
        }
    },
    "Q4_mean": {
        "TENSOR_FLOW": {
            "numpy.mean": 1.0
        }
    },
    "eta3_mean": {
        "TENSOR_FLOW": {
            "numpy.mean": 1.0
        }
    },
    "eta4_mean": {
        "TENSOR_FLOW": {
            "numpy.mean": 1.0
        }
    },
    "plt.xticks([]),plt.yticks([])xmean,xvar": {
        "TENSOR_FLOW": {
            "numpy.mean": 1.0
        }
    },
    "total_train": {
        "TENSOR_FLOW": {
            "numpy.vstack": 1.0
        }
    },
    "total_test": {
        "TENSOR_FLOW": {
            "numpy.vstack": 1.0
        }
    },
    "total_train_domain": {
        "TENSOR_FLOW": {
            "numpy.vstack": 1.0
        }
    },
    "total_test_domain": {
        "TENSOR_FLOW": {
            "numpy.vstack": 1.0
        }
    },
    "pixel_mean": {
        "TENSOR_FLOW": {
            "numpy.vstack": 1.0
        }
    },
    "comb_imgs": {
        "TENSOR_FLOW": {
            "numpy.vstack": 1.0
        }
    },
    "comb_labels": {
        "TENSOR_FLOW": {
            "numpy.vstack": 1.0
        }
    },
    "comb_domain": {
        "TENSOR_FLOW": {
            "numpy.vstack": 1.0
        }
    },
    "randpermlist_s": {
        "TENSOR_FLOW": {
            "numpy.random.permutation": 1.0
        }
    },
    "randpermlist_t": {
        "TENSOR_FLOW": {
            "numpy.random.permutation": 1.0
        }
    },
    "infix_re": {
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "re.compile": 1.0
        }
    },
    "sample_silhouette_values": {
        "NUMPY_VISUALIZATION": {
            "sklearn.metrics.silhouette_samples": 1.0
        }
    },
    "silhouette_avg": {
        "NUMPY_VISUALIZATION": {
            "sklearn.metrics.silhouette_score": 0.5,
            "numpy.mean": 0.5
        },
        "CS771": {
            "sklearn.metrics.silhouette_score": 1.0
        }
    },
    "Ks": {
        "NUMPY_VISUALIZATION": {
            "numpy.linspace": 1.0
        }
    },
    "cluster_model": {
        "NUMPY_VISUALIZATION": {
            "sklearn.cluster.AgglomerativeClustering": 1.0
        }
    },
    "hclust": {
        "NUMPY_VISUALIZATION": {
            "sklearn.cluster.AgglomerativeClustering": 1.0
        }
    },
    "mydata": {
        "NUMPY_VISUALIZATION": {
            "sklearn.datasets.make_moons": 1.0
        }
    },
    "X_train,X_validation,Y_train,Y_validation": {
        "NUMPY_VISUALIZATION": {
            "sklearn.model_selection.train_test_split": 1.0
        }
    },
    "cv_results": {
        "NUMPY_VISUALIZATION": {
            "sklearn.model_selection.cross_val_score": 1.0
        }
    },
    "sigma_arr": {
        "SCIKIT_LEARN": {
            "numpy.arange": 1.0
        }
    },
    "powers": {
        "SCIKIT_LEARN": {
            "numpy.arange": 1.0
        }
    },
    "eqF_arr": {
        "SCIKIT_LEARN": {
            "numpy.zeros": 1.0
        }
    },
    "sfs": {
        "SCIKIT_LEARN": {
            "numpy.zeros": 1.0
        }
    },
    "sfs_arr": {
        "SCIKIT_LEARN": {
            "numpy.zeros": 1.0
        }
    },
    "avg_sfs": {
        "SCIKIT_LEARN": {
            "numpy.mean": 1.0
        }
    },
    "avg_F1": {
        "SCIKIT_LEARN": {
            "numpy.mean": 1.0
        }
    },
    "avg_F2": {
        "SCIKIT_LEARN": {
            "numpy.mean": 1.0
        }
    },
    "avg_F": {
        "SCIKIT_LEARN": {
            "numpy.mean": 1.0
        }
    },
    "f[0]": {
        "SCIKIT_LEARN": {
            "numpy.repeat": 1.0
        }
    },
    "eq_F": {
        "SCIKIT_LEARN": {
            "scipy.ndimage.gaussian_filter1d": 1.0
        }
    },
    "eqF_arr[s]": {
        "SCIKIT_LEARN": {
            "scipy.ndimage.gaussian_filter1d": 1.0
        }
    },
    "F": {
        "SCIKIT_LEARN": {
            "scipy.ndimage.gaussian_filter1d": 1.0
        }
    },
    "F1": {
        "SCIKIT_LEARN": {
            "scipy.ndimage.gaussian_filter1d": 1.0
        }
    },
    "F2": {
        "SCIKIT_LEARN": {
            "scipy.ndimage.gaussian_filter1d": 1.0
        }
    },
    "sfs[i]": {
        "SCIKIT_LEARN": {
            "scipy.special.binom": 1.0
        }
    },
    "encoder": {
        "TENSOR_FLOW": {
            "sklearn.preprocessing.LabelBinarizer": 1.0
        }
    },
    "order": {
        "TENSOR_FLOW": {
            "numpy.argsort": 1.0
        },
        "IPython": {
            "numpy.argsort": 1.0
        }
    },
    "df.review_count.hist(bins": {
        "SCIENTIFIC_COMPUTING": {
            "numpy.arange": 1.0
        }
    },
    "inputs": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.array": 1.0
        }
    },
    "targets": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.array": 1.0
        },
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.zeros": 1.0
        }
    },
    "test_w_i_h": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.array": 1.0
        }
    },
    "test_w_h_o": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.array": 1.0
        }
    },
    "batch": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.random.choice": 1.0
        },
        "TENSOR_FLOW": {
            "numpy.ndarray": 1.0
        }
    },
    "lags": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.arange": 1.0
        }
    },
    "numerator": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.sum": 1.0
        }
    },
    "denom": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.sum": 1.0
        }
    },
    "no_outliers": {
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "numpy.array": 1.0
        }
    },
    "class_predictions": {
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "numpy.load": 1.0
        }
    },
    "cols.remove('cols": {
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "random.sample": 1.0
        }
    },
    "curr_silhouette": {
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "sklearn.metrics.silhouette_score": 1.0
        }
    },
    "X_blob,_": {
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "sklearn.datasets.make_blobs": 1.0
        }
    },
    "data_dict": {
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "collections.defaultdict": 1.0
        }
    },
    "popup": {
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "re.sub": 1.0
        }
    },
    "yline": {
        "STRUCTURED_DATA": {
            "numpy.cos": 1.0
        }
    },
    "ydata": {
        "STRUCTURED_DATA": {
            "numpy.cos": 1.0
        }
    },
    "xline": {
        "STRUCTURED_DATA": {
            "numpy.sin": 1.0
        }
    },
    "xdata": {
        "STRUCTURED_DATA": {
            "numpy.sin": 1.0
        }
    },
    "zline": {
        "STRUCTURED_DATA": {
            "numpy.linspace": 1.0
        }
    },
    "r,theta": {
        "STRUCTURED_DATA": {
            "numpy.meshgrid": 1.0
        }
    },
    "w,theta": {
        "STRUCTURED_DATA": {
            "numpy.meshgrid": 1.0
        }
    },
    "spreaddb['Spread'][i]": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "re.sub": 1.0
        }
    },
    "db['Odds']": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.zeros": 1.0
        }
    },
    "db['Line']": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.zeros": 1.0
        }
    },
    "db['Cover']": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.zeros": 1.0
        }
    },
    "seq": {
        "NUMPY_VISUALIZATION": {
            "numpy.array": 1.0
        }
    },
    "X2frames": {
        "NUMPY_VISUALIZATION": {
            "numpy.reshape": 1.0
        }
    },
    "S2": {
        "NUMPY_VISUALIZATION": {
            "numpy.cos": 1.0
        }
    },
    "init_seq": {
        "NUMPY_VISUALIZATION": {
            "numpy.cos": 0.75,
            "numpy.linspace": 0.25
        }
    },
    "signal_range": {
        "NUMPY_VISUALIZATION": {
            "numpy.linspace": 1.0
        }
    },
    "df_split": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.array_split": 1.0
        }
    },
    "singleCellDF['BC_01']": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.log2": 1.0
        }
    },
    "singleCellDF['BC_02']": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.log2": 1.0
        }
    },
    "singleCellDF['BC_03']": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.log2": 1.0
        }
    },
    "singleCellDF['BC_03LN']": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.log2": 1.0
        }
    },
    "singleCellDF['BC_04']": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.log2": 1.0
        }
    },
    "singleCellDF['BC_05']": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.log2": 1.0
        }
    },
    "singleCellDF['BC_06']": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.log2": 1.0
        }
    },
    "singleCellDF['BC_07']": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.log2": 1.0
        }
    },
    "singleCellDF['BC_07LN']": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.log2": 1.0
        }
    },
    "singleCellDF['BC_08']": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.log2": 1.0
        }
    },
    "singleCellDF['BC_09']": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.log2": 1.0
        }
    },
    "singleCellDF['BC_10']": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.log2": 1.0
        }
    },
    "singleCellDF['BC_11']": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.log2": 1.0
        }
    },
    "t,p": {
        "IPython": {
            "scipy.stats.ttest_ind": 1.0
        }
    },
    "dataMat": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.matrix": 1.0
        }
    },
    "retArray": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.ones": 1.0
        }
    },
    "m,n": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.shape": 1.0
        }
    },
    "dataMatrix": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.mat": 1.0
        }
    },
    "labelMat": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.mat": 1.0
        }
    },
    "numSteps": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.mat": 1.0
        }
    },
    "errArr": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.mat": 1.0
        }
    },
    "aggClassEst": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.mat": 1.0
        }
    },
    "aggError": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.mat": 0.5,
            "numpy.multiply": 0.5
        }
    },
    "condaF": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.mat": 0.5,
            "numpy.sign": 0.5
        }
    },
    "expon": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.multiply": 1.0
        }
    },
    "count_dict": {
        "REQUESTS": {
            "collections.defaultdict": 1.0
        }
    },
    "candidates": {
        "NUMPY_VISUALIZATION": {
            "numpy.flatnonzero": 1.0
        },
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.flatnonzero": 1.0
        }
    },
    "diabetes": {
        "NUMPY_VISUALIZATION": {
            "sklearn.datasets.load_diabetes": 1.0
        }
    },
    "search": {
        "NUMPY_VISUALIZATION": {
            "sklearn.model_selection.RandomizedSearchCV": 1.0
        }
    },
    "valid_examples": {
        "TENSOR_FLOW": {
            "numpy.array": 0.5,
            "numpy.append": 0.5
        }
    },
    "frequencies": {
        "TENSOR_FLOW": {
            "collections.Counter": 1.0
        }
    },
    "bc": {
        "STRUCTURED_DATA": {
            "numpy.array": 1.0
        }
    },
    "nD": {
        "STRUCTURED_DATA": {
            "numpy.prod": 1.0
        }
    },
    "a,b,c": {
        "STRUCTURED_DATA": {
            "numpy.sort": 1.0
        }
    },
    "pos_bad": {
        "STRUCTURED_DATA": {
            "numpy.logical_or": 1.0
        }
    },
    "pos_inf": {
        "STRUCTURED_DATA": {
            "numpy.logical_or.reduce": 1.0
        }
    },
    "aX0": {
        "STRUCTURED_DATA": {
            "numpy.linspace": 1.0
        }
    },
    "mus": {
        "STRUCTURED_DATA": {
            "numpy.linspace": 0.5,
            "numpy.expand_dims": 0.5
        }
    },
    "thetas": {
        "STRUCTURED_DATA": {
            "numpy.linspace": 0.5,
            "numpy.expand_dims": 0.5
        }
    },
    "aX": {
        "STRUCTURED_DATA": {
            "numpy.linspace": 1.0
        }
    },
    "SB": {
        "STRUCTURED_DATA": {
            "numpy.take_along_axis": 1.0
        }
    },
    "query_date": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "datetime.date": 1.0
        }
    },
    "start_date": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "datetime.date": 1.0
        }
    },
    "replace_by_space_re": {
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "re.compile": 1.0
        }
    },
    "bad_symbols_re": {
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "re.compile": 1.0
        }
    },
    "embeddings[l[0]]": {
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "numpy.array": 1.0
        }
    },
    "tag_vectors": {
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "numpy.zeros": 1.0
        }
    },
    "intent_recognizer": {
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "sklearn.linear_model.LogisticRegression": 1.0
        }
    },
    "tag_classifier": {
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "sklearn.multiclass.OneVsRestClassifier": 1.0
        }
    },
    "eps_vals": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.logspace": 1.0
        }
    },
    "vectorizer": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "sklearn.pipeline.make_pipeline": 1.0
        }
    },
    "selectedTradeoffIndex": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.intersect1d": 1.0
        }
    },
    "potholeLabels": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.decomposition.PCA": 1.0
        }
    },
    "precision,recall,thresholds": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.metrics.precision_recall_curve": 1.0
        }
    },
    "hc": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "sklearn.cluster.AgglomerativeClustering": 1.0
        }
    },
    "temptarr": {
        "SCIKIT_LEARN": {
            "numpy.arange": 0.5,
            "numpy.power": 0.5
        }
    },
    "temprarr": {
        "SCIKIT_LEARN": {
            "numpy.arange": 0.5,
            "numpy.power": 0.5
        }
    },
    "tempsarr": {
        "SCIKIT_LEARN": {
            "numpy.arange": 0.5,
            "numpy.power": 0.5
        }
    },
    "id0": {
        "SCIKIT_LEARN": {
            "numpy.arange": 1.0
        }
    },
    "cbar": {
        "SCIKIT_LEARN": {
            "numpy.arange": 1.0
        }
    },
    "tvapfo": {
        "SCIKIT_LEARN": {
            "numpy.arange": 0.5,
            "numpy.exp": 0.5
        }
    },
    "Rho_0": {
        "SCIKIT_LEARN": {
            "numpy.array": 1.0
        }
    },
    "foliqrho0": {
        "SCIKIT_LEARN": {
            "numpy.asarray": 1.0
        }
    },
    "asi_gamma_sig_low": {
        "SCIKIT_LEARN": {
            "numpy.asarray": 1.0
        }
    },
    "asi_gamma_sig_high": {
        "SCIKIT_LEARN": {
            "numpy.asarray": 1.0
        }
    },
    "NewEOS": {
        "SCIKIT_LEARN": {
            "numpy.zeros": 1.0
        }
    },
    "NewEOS.onebar.T": {
        "SCIKIT_LEARN": {
            "numpy.zeros": 1.0
        }
    },
    "NewEOS.onebar.S": {
        "SCIKIT_LEARN": {
            "numpy.zeros": 1.0
        }
    },
    "NewEOS.onebar.rho": {
        "SCIKIT_LEARN": {
            "numpy.zeros": 1.0
        }
    },
    "GadEOS.P": {
        "SCIKIT_LEARN": {
            "numpy.zeros": 1.0
        }
    },
    "GadEOS.T": {
        "SCIKIT_LEARN": {
            "numpy.zeros": 1.0
        }
    },
    "GadEOS.U": {
        "SCIKIT_LEARN": {
            "numpy.zeros": 1.0
        }
    },
    "GadEOS.A": {
        "SCIKIT_LEARN": {
            "numpy.zeros": 1.0
        }
    },
    "GadEOS.cs": {
        "SCIKIT_LEARN": {
            "numpy.zeros": 1.0
        }
    },
    "GadEOS.cv": {
        "SCIKIT_LEARN": {
            "numpy.zeros": 1.0
        }
    },
    "GadEOS.KPA": {
        "SCIKIT_LEARN": {
            "numpy.zeros": 1.0
        }
    },
    "GadEOS.MDQ": {
        "SCIKIT_LEARN": {
            "numpy.zeros": 1.0
        }
    },
    "\"\"\"ClasstoholdPREMdataandother1-DEarthvariables.\"\"\"def__init__(self):\"\"\"Afunctiontoinitializetheclassobject.\"\"\"self.NR": {
        "SCIKIT_LEARN": {
            "numpy.zeros": 1.0
        }
    },
    "self.density": {
        "SCIKIT_LEARN": {
            "numpy.zeros": 1.0
        }
    },
    "self.pwavevel": {
        "SCIKIT_LEARN": {
            "numpy.zeros": 1.0
        }
    },
    "self.swavevel": {
        "SCIKIT_LEARN": {
            "numpy.zeros": 1.0
        }
    },
    "self.pressure": {
        "SCIKIT_LEARN": {
            "numpy.zeros": 1.0
        }
    },
    "self.temperature": {
        "SCIKIT_LEARN": {
            "numpy.zeros": 1.0
        }
    },
    "PREM.pressure": {
        "SCIKIT_LEARN": {
            "numpy.zeros": 1.0
        }
    },
    "ixindarr": {
        "SCIKIT_LEARN": {
            "numpy.zeros": 1.0
        }
    },
    "indexT0REF": {
        "SCIKIT_LEARN": {
            "numpy.where": 1.0
        }
    },
    "indexR0REF": {
        "SCIKIT_LEARN": {
            "numpy.where": 1.0
        }
    },
    "it0": {
        "SCIKIT_LEARN": {
            "numpy.where": 1.0
        }
    },
    "tmpind": {
        "SCIKIT_LEARN": {
            "numpy.where": 1.0
        }
    },
    "iT0REF": {
        "SCIKIT_LEARN": {
            "numpy.where": 1.0
        }
    },
    "igood": {
        "SCIKIT_LEARN": {
            "numpy.where": 1.0
        }
    },
    "indlow": {
        "SCIKIT_LEARN": {
            "numpy.where": 1.0
        }
    },
    "indhigh": {
        "SCIKIT_LEARN": {
            "numpy.where": 1.0
        }
    },
    "gridtarr": {
        "SCIKIT_LEARN": {
            "numpy.concatenate": 0.6666666666666666,
            "numpy.delete": 0.3333333333333333
        }
    },
    "gridrarr": {
        "SCIKIT_LEARN": {
            "numpy.concatenate": 0.6666666666666666,
            "numpy.delete": 0.3333333333333333
        }
    },
    "gridsarr": {
        "SCIKIT_LEARN": {
            "numpy.concatenate": 1.0
        }
    },
    "PREM_dr": {
        "SCIKIT_LEARN": {
            "numpy.roll": 1.0
        }
    },
    "NewEOS.P[itt,badind]": {
        "SCIKIT_LEARN": {
            "numpy.full": 1.0
        }
    },
    "NewEOS.U[itt,badind]": {
        "SCIKIT_LEARN": {
            "numpy.full": 1.0
        }
    },
    "NewEOS.S[itt,badind]": {
        "SCIKIT_LEARN": {
            "numpy.full": 1.0
        }
    },
    "NewEOS.A[itt,badind]": {
        "SCIKIT_LEARN": {
            "numpy.full": 1.0
        }
    },
    "NewEOS.cs[itt,badind]": {
        "SCIKIT_LEARN": {
            "numpy.full": 1.0
        }
    },
    "NewEOS.cv[itt,badind]": {
        "SCIKIT_LEARN": {
            "numpy.full": 1.0
        }
    },
    "NewEOS.KPA[itt,badind]": {
        "SCIKIT_LEARN": {
            "numpy.full": 1.0
        }
    },
    "NewEOS.MDQ[itt,badind]": {
        "SCIKIT_LEARN": {
            "numpy.full": 1.0
        }
    },
    "print('AllSVALUESNEGATIVEATTHISINDEX,TEMP(K):',itt,NewEOS.T[itt])NewEOS.S[itt,badind]": {
        "SCIKIT_LEARN": {
            "numpy.full": 1.0
        }
    },
    "tillearr": {
        "SCIKIT_LEARN": {
            "numpy.power": 0.5,
            "numpy.append": 0.5
        }
    },
    "Zfit_r0": {
        "SCIKIT_LEARN": {
            "numpy.sqrt": 1.0
        }
    },
    "LowHugDat_r0": {
        "SCIKIT_LEARN": {
            "numpy.sqrt": 1.0
        }
    },
    "interpfunction": {
        "SCIKIT_LEARN": {
            "numpy.append": 1.0
        }
    },
    "asi_rho": {
        "SCIKIT_LEARN": {
            "numpy.append": 1.0
        }
    },
    "asi_gamma": {
        "SCIKIT_LEARN": {
            "numpy.append": 1.0
        }
    },
    "NewEOS.onebar.S[iit]": {
        "SCIKIT_LEARN": {
            "numpy.interp": 1.0
        }
    },
    "NewEOS.onebar.rho[iit]": {
        "SCIKIT_LEARN": {
            "numpy.interp": 1.0
        }
    },
    "uniqkarr": {
        "SCIKIT_LEARN": {
            "numpy.unique": 1.0
        }
    },
    "SR_rho": {
        "SCIKIT_LEARN": {
            "numpy.loadtxt": 1.0
        }
    },
    "SR_gamma_e": {
        "SCIKIT_LEARN": {
            "numpy.loadtxt": 1.0
        }
    },
    "QMDH_r1": {
        "SCIKIT_LEARN": {
            "numpy.loadtxt": 1.0
        }
    },
    "zhugoniotfile": {
        "SCIKIT_LEARN": {
            "numpy.loadtxt": 1.0
        }
    },
    "OM_DU1": {
        "SCIKIT_LEARN": {
            "numpy.loadtxt": 1.0
        }
    },
    "OM_DUe1": {
        "SCIKIT_LEARN": {
            "numpy.loadtxt": 1.0
        }
    },
    "OM_DR1": {
        "SCIKIT_LEARN": {
            "numpy.loadtxt": 1.0
        }
    },
    "OM_DRe1": {
        "SCIKIT_LEARN": {
            "numpy.loadtxt": 1.0
        }
    },
    "OM_DT1": {
        "SCIKIT_LEARN": {
            "numpy.loadtxt": 1.0
        }
    },
    "OM_DTe1": {
        "SCIKIT_LEARN": {
            "numpy.loadtxt": 1.0
        }
    },
    "OM_D1P": {
        "SCIKIT_LEARN": {
            "numpy.loadtxt": 1.0
        }
    },
    "OM_D1Pe": {
        "SCIKIT_LEARN": {
            "numpy.loadtxt": 1.0
        }
    },
    "OM_DU2": {
        "SCIKIT_LEARN": {
            "numpy.loadtxt": 1.0
        }
    },
    "OM_DUe2": {
        "SCIKIT_LEARN": {
            "numpy.loadtxt": 1.0
        }
    },
    "OM_DR2": {
        "SCIKIT_LEARN": {
            "numpy.loadtxt": 1.0
        }
    },
    "OM_DRe2": {
        "SCIKIT_LEARN": {
            "numpy.loadtxt": 1.0
        }
    },
    "OM_DT2": {
        "SCIKIT_LEARN": {
            "numpy.loadtxt": 1.0
        }
    },
    "OM_DTe2": {
        "SCIKIT_LEARN": {
            "numpy.loadtxt": 1.0
        }
    },
    "OM_D2P": {
        "SCIKIT_LEARN": {
            "numpy.loadtxt": 1.0
        }
    },
    "OM_D2Pe": {
        "SCIKIT_LEARN": {
            "numpy.loadtxt": 1.0
        }
    },
    "OM_DU3": {
        "SCIKIT_LEARN": {
            "numpy.loadtxt": 1.0
        }
    },
    "OM_DUe3": {
        "SCIKIT_LEARN": {
            "numpy.loadtxt": 1.0
        }
    },
    "OM_DR3": {
        "SCIKIT_LEARN": {
            "numpy.loadtxt": 1.0
        }
    },
    "OM_DRe3": {
        "SCIKIT_LEARN": {
            "numpy.loadtxt": 1.0
        }
    },
    "OM_DT3": {
        "SCIKIT_LEARN": {
            "numpy.loadtxt": 1.0
        }
    },
    "OM_DTe3": {
        "SCIKIT_LEARN": {
            "numpy.loadtxt": 1.0
        }
    },
    "OM_D3P": {
        "SCIKIT_LEARN": {
            "numpy.loadtxt": 1.0
        }
    },
    "OM_D3Pe": {
        "SCIKIT_LEARN": {
            "numpy.loadtxt": 1.0
        }
    },
    "OM_DU4": {
        "SCIKIT_LEARN": {
            "numpy.loadtxt": 1.0
        }
    },
    "OM_DUe4": {
        "SCIKIT_LEARN": {
            "numpy.loadtxt": 1.0
        }
    },
    "OM_DR4": {
        "SCIKIT_LEARN": {
            "numpy.loadtxt": 1.0
        }
    },
    "OM_DRe4": {
        "SCIKIT_LEARN": {
            "numpy.loadtxt": 1.0
        }
    },
    "OM_DT4": {
        "SCIKIT_LEARN": {
            "numpy.loadtxt": 1.0
        }
    },
    "OM_DTe4": {
        "SCIKIT_LEARN": {
            "numpy.loadtxt": 1.0
        }
    },
    "OM_D4P": {
        "SCIKIT_LEARN": {
            "numpy.loadtxt": 1.0
        }
    },
    "OM_D4Pe": {
        "SCIKIT_LEARN": {
            "numpy.loadtxt": 1.0
        }
    },
    "PREM.radius": {
        "SCIKIT_LEARN": {
            "numpy.loadtxt": 1.0
        }
    },
    "corners_square": {
        "CS771": {
            "numpy.array": 1.0
        }
    },
    "perturbed_corners_square": {
        "CS771": {
            "numpy.array": 1.0
        }
    },
    "input": {
        "CS771": {
            "numpy.zeros": 1.0
        }
    },
    "H_ba": {
        "CS771": {
            "numpy.linalg.inv": 1.0
        }
    },
    "top_left_x": {
        "CS771": {
            "random.randint": 1.0
        }
    },
    "top_left_y": {
        "CS771": {
            "random.randint": 1.0
        }
    },
    "ibl": {
        "STRUCTURED_DATA": {
            "numpy.clip": 1.0
        }
    },
    "random_search": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.model_selection.RandomizedSearchCV": 1.0
        }
    },
    "ada_search": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.model_selection.RandomizedSearchCV": 1.0
        }
    },
    "svc_search": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.model_selection.RandomizedSearchCV": 1.0
        }
    },
    "clf_rf": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.ensemble.RandomForestClassifier": 1.0
        }
    },
    "clf_ada": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.ensemble.AdaBoostClassifier": 1.0
        }
    },
    "clf_svc": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.svm.SVC": 1.0
        }
    },
    "afd": {
        "IPython": {
            "datetime.date": 1.0
        }
    },
    "dones": {
        "DEEP_NEURAL_NETWORKS": {
            "numpy.array": 1.0
        }
    },
    "agent_scores": {
        "DEEP_NEURAL_NETWORKS": {
            "numpy.zeros": 1.0
        }
    },
    "scores_deque": {
        "DEEP_NEURAL_NETWORKS": {
            "collections.deque": 1.0
        }
    },
    "weise_values": {
        "STRUCTURED_DATA": {
            "numpy.array": 1.0
        }
    },
    "dataFrame[\"fisher_Transform\"]": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.arctanh": 1.0
        }
    },
    "X_cd": {
        "CS771": {
            "numpy.concatenate": 1.0
        }
    },
    "y_cd": {
        "CS771": {
            "numpy.concatenate": 1.0
        }
    },
    "c_data": {
        "CS771": {
            "numpy.load": 1.0
        }
    },
    "d_data": {
        "CS771": {
            "numpy.load": 1.0
        }
    },
    "t_data": {
        "CS771": {
            "numpy.load": 1.0
        }
    },
    "Xcd_train,Xcd_test,ycd_train,ycd_test": {
        "CS771": {
            "sklearn.model_selection.train_test_split": 1.0
        }
    },
    "lm_model": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.linear_model.LinearRegression": 1.0
        }
    },
    "sc_x": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.preprocessing.StandardScaler": 1.0
        }
    },
    "self.w_": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.zeros": 1.0
        }
    },
    "regressor": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.linear_model.LinearRegression": 0.5,
            "sklearn.ensemble.RandomForestRegressor": 0.5
        },
        "NUMPY_VISUALIZATION": {
            "sklearn.linear_model.LinearRegression": 1.0
        }
    },
    "x1_plot": {
        "NUMPY_VISUALIZATION": {
            "numpy.linspace": 1.0
        }
    },
    "temp_range": {
        "SCIKIT_LEARN": {
            "numpy.arange": 1.0
        }
    },
    "new_prices": {
        "SCIKIT_LEARN": {
            "numpy.cumsum": 1.0
        }
    },
    "avg": {
        "SCIKIT_LEARN": {
            "numpy.divide": 1.0
        },
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.cluster.AgglomerativeClustering": 1.0
        }
    },
    "new_prices[:temp_window_size]": {
        "SCIKIT_LEARN": {
            "numpy.divide": 1.0
        }
    },
    "prefix_divisor": {
        "SCIKIT_LEARN": {
            "numpy.hstack": 1.0
        }
    },
    "point_data_raw": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "json.load": 1.0
        }
    },
    "batch_size": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.int64": 1.0
        }
    },
    "train_names": {
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "numpy.array": 1.0
        }
    },
    "train_authors": {
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "numpy.array": 1.0
        }
    },
    "testX": {
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "numpy.hstack": 1.0
        }
    },
    "thisX": {
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "numpy.hstack": 1.0
        }
    },
    "all_X": {
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "numpy.vstack": 1.0
        }
    },
    "all_Y": {
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "numpy.vstack": 1.0
        }
    },
    "token_counts": {
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "collections.Counter": 1.0
        }
    },
    "tfl_response_json": {
        "SCIENTIFIC_COMPUTING": {
            "json.loads": 1.0
        }
    },
    "sali": {
        "STRUCTURED_DATA": {
            "numpy.array": 1.0
        }
    },
    "start_of_month": {
        "NUMPY_VISUALIZATION": {
            "numpy.arange": 1.0
        }
    },
    "end_of_month": {
        "NUMPY_VISUALIZATION": {
            "numpy.arange": 1.0
        }
    },
    "person_seen_so_far": {
        "NUMPY_VISUALIZATION": {
            "numpy.array": 0.25,
            "numpy.sort": 0.25,
            "numpy.append": 0.25,
            "numpy.unique": 0.25
        }
    },
    "month_col": {
        "NUMPY_VISUALIZATION": {
            "numpy.array": 0.5,
            "numpy.append": 0.5
        }
    },
    "per_id_col": {
        "NUMPY_VISUALIZATION": {
            "numpy.array": 0.5,
            "numpy.append": 0.5
        }
    },
    "offer_id_col": {
        "NUMPY_VISUALIZATION": {
            "numpy.array": 0.5,
            "numpy.append": 0.5
        }
    },
    "has_profit": {
        "NUMPY_VISUALIZATION": {
            "numpy.zeros": 1.0
        }
    },
    "person_seen": {
        "NUMPY_VISUALIZATION": {
            "numpy.sort": 1.0
        }
    },
    "person_encoder": {
        "NUMPY_VISUALIZATION": {
            "sklearn.preprocessing.LabelEncoder": 1.0
        }
    },
    "offer_encoder": {
        "NUMPY_VISUALIZATION": {
            "sklearn.preprocessing.LabelEncoder": 1.0
        }
    },
    "arr_r1": {
        "STRUCTURED_DATA": {
            "numpy.asarray": 1.0
        }
    },
    "arr_r2": {
        "STRUCTURED_DATA": {
            "numpy.asarray": 1.0
        }
    },
    "arr_i1": {
        "STRUCTURED_DATA": {
            "numpy.asarray": 1.0
        }
    },
    "arr_r3": {
        "STRUCTURED_DATA": {
            "numpy.asarray": 1.0
        }
    },
    "new_arr": {
        "STRUCTURED_DATA": {
            "numpy.ones": 0.6666666666666666,
            "numpy.zeros": 0.3333333333333333
        }
    },
    "new_image": {
        "STRUCTURED_DATA": {
            "numpy.zeros": 1.0
        }
    },
    "share": {
        "STRUCTURED_DATA": {
            "numpy.zeros": 1.0
        }
    },
    "X_batch": {
        "TENSOR_FLOW": {
            "numpy.concatenate": 1.0
        }
    },
    "grad": {
        "TENSOR_FLOW": {
            "numpy.cos": 1.0
        }
    },
    "y_batch": {
        "TENSOR_FLOW": {
            "numpy.sin": 1.0
        }
    },
    "actual": {
        "TENSOR_FLOW": {
            "numpy.sin": 1.0
        },
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.array": 1.0
        }
    },
    "starting": {
        "TENSOR_FLOW": {
            "numpy.random.rand": 1.0
        }
    },
    "split_index": {
        "SCIENTIFIC_COMPUTING": {
            "numpy.arange": 1.0
        }
    },
    "test_id": {
        "SCIENTIFIC_COMPUTING": {
            "numpy.array": 1.0
        }
    },
    "final_result.loc[:,'prob']": {
        "SCIENTIFIC_COMPUTING": {
            "numpy.array": 1.0
        }
    },
    "log_sp500": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.log": 1.0
        }
    },
    "kmeans_model": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.cluster.KMeans": 1.0
        }
    },
    "Pknonlin": {
        "SCIKIT_LEARN": {
            "numpy.zeros": 1.0
        }
    },
    "P_2h_gg_avgz": {
        "SCIKIT_LEARN": {
            "numpy.zeros": 1.0
        }
    },
    "logxi_2d": {
        "SCIKIT_LEARN": {
            "numpy.zeros": 1.0
        }
    },
    "twoh_Pgg_klong": {
        "SCIKIT_LEARN": {
            "numpy.exp": 1.0
        }
    },
    "r_2d": {
        "SCIKIT_LEARN": {
            "numpy.sqrt": 1.0
        }
    },
    "kvec_FT": {
        "SCIKIT_LEARN": {
            "numpy.logspace": 1.0
        }
    },
    "k": {
        "SCIKIT_LEARN": {
            "numpy.logspace": 1.0
        }
    },
    "rp": {
        "SCIKIT_LEARN": {
            "numpy.logspace": 1.0
        }
    },
    "Pi": {
        "SCIKIT_LEARN": {
            "numpy.logspace": 1.0
        }
    },
    "savePgg": {
        "SCIKIT_LEARN": {
            "numpy.column_stack": 1.0
        }
    },
    "(r,xi_tot)": {
        "SCIKIT_LEARN": {
            "numpy.loadtxt": 1.0
        }
    },
    "var1": {
        "NUMPY_VISUALIZATION": {
            "numpy.cumsum": 1.0
        }
    },
    "news": {
        "IPython": {
            "sklearn.datasets.fetch_20newsgroups": 1.0
        }
    },
    "bolsayX_train,X_test,y_train,y_test": {
        "IPython": {
            "sklearn.model_selection.train_test_split": 1.0
        }
    },
    "a0": {
        "STRUCTURED_DATA": {
            "numpy.zeros": 1.0
        }
    },
    "c0": {
        "STRUCTURED_DATA": {
            "numpy.zeros": 1.0
        }
    },
    "x_initializer": {
        "STRUCTURED_DATA": {
            "numpy.zeros": 1.0
        }
    },
    "a_initializer": {
        "STRUCTURED_DATA": {
            "numpy.zeros": 1.0
        }
    },
    "c_initializer": {
        "STRUCTURED_DATA": {
            "numpy.zeros": 1.0
        }
    },
    "review_data": {
        "IPython": {
            "json.loads": 1.0
        }
    },
    "mean_feat": {
        "CS771": {
            "numpy.mean": 1.0
        }
    },
    "std_feat": {
        "CS771": {
            "numpy.std": 1.0
        }
    },
    "X_train_feats": {
        "CS771": {
            "numpy.hstack": 1.0
        }
    },
    "X_val_feats": {
        "CS771": {
            "numpy.hstack": 1.0
        }
    },
    "X_test_feats": {
        "CS771": {
            "numpy.hstack": 1.0
        }
    },
    "diet_info": {
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "numpy.zeros": 1.0
        }
    },
    "ingredient": {
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "re.sub": 1.0
        }
    },
    "numberonly": {
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "re.sub": 1.0
        }
    },
    "ns": {
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "re.split": 1.0
        }
    },
    "x_range": {
        "STRUCTURED_DATA": {
            "numpy.arange": 1.0
        },
        "CS771": {
            "numpy.linspace": 1.0
        }
    },
    "y_range": {
        "STRUCTURED_DATA": {
            "numpy.arange": 1.0
        }
    },
    "pi": {
        "STRUCTURED_DATA": {
            "numpy.zeros": 1.0
        },
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.zeros": 1.0
        }
    },
    "bj.sa_value[last_value_a]": {
        "STRUCTURED_DATA": {
            "numpy.mean": 1.0
        }
    },
    "player_sum": {
        "STRUCTURED_DATA": {
            "numpy.sum": 1.0
        }
    },
    "dealer_sum": {
        "STRUCTURED_DATA": {
            "numpy.sum": 1.0
        }
    },
    "self.state_value[self.states[i]]": {
        "STRUCTURED_DATA": {
            "numpy.random.random": 1.0
        }
    },
    "self.sa_value[self.states[i],action_space[j]]": {
        "STRUCTURED_DATA": {
            "numpy.random.random": 1.0
        }
    },
    "undecompsed_revdisp.index": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.arange": 1.0
        }
    },
    "below_collection_thrshld": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.zeros": 1.0
        }
    },
    "monetary_gain_ir": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.zeros": 1.0
        }
    },
    "u_monetary_gain_ir": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.zeros": 1.0
        }
    },
    "u_monetary_gain": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.zeros": 1.0
        }
    },
    "u_money_gain": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.zeros": 1.0
        }
    },
    "mean_gain": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.zeros": 1.0
        }
    },
    "monetary_gain_ir_rsa": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.zeros": 1.0
        }
    },
    "is_retired": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.zeros": 1.0
        }
    },
    "is_active": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.zeros": 1.0
        }
    },
    "is_inactive": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.zeros": 1.0
        }
    },
    "is_retire_active": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.zeros": 1.0
        }
    },
    "target_array": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.empty": 1.0
        }
    },
    "has_decote_difference": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.ones": 1.0
        }
    },
    "u_monetary_gain_ir+": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.mean": 1.0
        }
    },
    "u_monetary_gain+": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.mean": 1.0
        }
    },
    "eq_money_u_annuelle": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.exp": 1.0
        }
    },
    "eq_money_u_mensuelle": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.exp": 1.0
        }
    },
    "asset_vols": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.sqrt": 1.0
        }
    },
    "vl_vals": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.linspace": 1.0
        }
    },
    "Sigma": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.cov": 1.0
        }
    },
    "logModel": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.linear_model.LogisticRegression": 1.0
        }
    },
    "keep_idx": {
        "DEEP_NEURAL_NETWORKS": {
            "numpy.array": 1.0
        }
    },
    "pred_cost_train": {
        "DEEP_NEURAL_NETWORKS": {
            "numpy.zeros": 1.0
        }
    },
    "err_train": {
        "DEEP_NEURAL_NETWORKS": {
            "numpy.zeros": 1.0
        }
    },
    "cost_dev": {
        "DEEP_NEURAL_NETWORKS": {
            "numpy.zeros": 1.0
        }
    },
    "err_dev": {
        "DEEP_NEURAL_NETWORKS": {
            "numpy.zeros": 1.0
        }
    },
    "test_predictions": {
        "DEEP_NEURAL_NETWORKS": {
            "numpy.zeros": 1.0
        }
    },
    "all_preds": {
        "DEEP_NEURAL_NETWORKS": {
            "numpy.zeros": 1.0
        }
    },
    "all_sample_preds": {
        "DEEP_NEURAL_NETWORKS": {
            "numpy.zeros": 1.0
        }
    },
    "correct_preds": {
        "DEEP_NEURAL_NETWORKS": {
            "numpy.zeros": 1.0
        }
    },
    "lim_idxs": {
        "DEEP_NEURAL_NETWORKS": {
            "numpy.where": 1.0
        }
    },
    "x_dev": {
        "DEEP_NEURAL_NETWORKS": {
            "numpy.concatenate": 1.0
        }
    },
    "y_dev": {
        "DEEP_NEURAL_NETWORKS": {
            "numpy.concatenate": 1.0
        }
    },
    "ims": {
        "DEEP_NEURAL_NETWORKS": {
            "numpy.concatenate": 0.5,
            "numpy.expand_dims": 0.5
        }
    },
    "e_x": {
        "DEEP_NEURAL_NETWORKS": {
            "numpy.exp": 1.0
        }
    },
    "x_rot": {
        "DEEP_NEURAL_NETWORKS": {
            "numpy.expand_dims": 1.0
        }
    },
    "rng_state": {
        "DEEP_NEURAL_NETWORKS": {
            "numpy.random.get_state": 1.0
        }
    },
    "self.images": {
        "DEEP_NEURAL_NETWORKS": {
            "numpy.load": 1.0
        }
    },
    "series1": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.array": 1.0
        }
    },
    "dist_array": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.zeros": 1.0
        }
    },
    "linkage_matrix": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.column_stack": 1.0
        }
    },
    "normed_dist_matrix": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "sklearn.preprocessing.normalize": 1.0
        }
    },
    "model_2": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "sklearn.cluster.AgglomerativeClustering": 1.0
        }
    },
    "model_3": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "sklearn.cluster.AgglomerativeClustering": 1.0
        }
    },
    "onehot_encoder": {
        "NUMPY_VISUALIZATION": {
            "sklearn.feature_extraction.DictVectorizer": 1.0
        },
        "STRUCTURED_DATA_VISUALIZATION": {
            "sklearn.preprocessing.OneHotEncoder": 1.0
        }
    },
    "distances": {
        "NUMPY_VISUALIZATION": {
            "numpy.array": 0.5,
            "numpy.sqrt": 0.5
        },
        "CS771": {
            "numpy.zeros": 1.0
        }
    },
    "nearest_neighbor_indices": {
        "NUMPY_VISUALIZATION": {
            "numpy.take": 1.0
        }
    },
    "lb": {
        "NUMPY_VISUALIZATION": {
            "sklearn.preprocessing.LabelBinarizer": 1.0
        }
    },
    "dstep": {
        "SCIKIT_LEARN": {
            "numpy.arange": 1.0
        }
    },
    "ygrid": {
        "SCIKIT_LEARN": {
            "numpy.arange": 1.0
        }
    },
    "keys": {
        "SCIKIT_LEARN": {
            "numpy.array": 1.0
        }
    },
    "v2_ref": {
        "SCIKIT_LEARN": {
            "numpy.array": 1.0
        }
    },
    "v3_ref": {
        "SCIKIT_LEARN": {
            "numpy.array": 1.0
        }
    },
    "v2_lims": {
        "SCIKIT_LEARN": {
            "numpy.array": 1.0
        }
    },
    "v3_lims": {
        "SCIKIT_LEARN": {
            "numpy.array": 1.0
        }
    },
    "extent": {
        "SCIKIT_LEARN": {
            "numpy.array": 1.0
        }
    },
    "zube": {
        "SCIKIT_LEARN": {
            "numpy.array": 1.0
        }
    },
    "ind_nrc": {
        "SCIKIT_LEARN": {
            "numpy.where": 1.0
        }
    },
    "xind_good": {
        "SCIKIT_LEARN": {
            "numpy.where": 1.0
        }
    },
    "yind_good": {
        "SCIKIT_LEARN": {
            "numpy.where": 1.0
        }
    },
    "ind_nan": {
        "SCIKIT_LEARN": {
            "numpy.isnan": 1.0
        }
    },
    "nan_mask": {
        "SCIKIT_LEARN": {
            "numpy.isnan": 1.0
        }
    },
    "zmin,zmax": {
        "SCIKIT_LEARN": {
            "numpy.nanmin": 1.0
        }
    },
    "zgrid": {
        "SCIKIT_LEARN": {
            "scipy.interpolate.griddata": 0.3333333333333333,
            "scipy.ndimage.rotate": 0.6666666666666666
        }
    },
    "func": {
        "SCIKIT_LEARN": {
            "scipy.interpolate.RegularGridInterpolator": 1.0
        }
    },
    "all_results": {
        "SCIKIT_LEARN": {
            "numpy.array": 0.5,
            "numpy.append": 0.5
        }
    },
    "car": {
        "SCIKIT_LEARN": {
            "numpy.random.randint": 1.0
        }
    },
    "split_train,split_test,bogus1,bogus2": {
        "NUMPY_VISUALIZATION": {
            "sklearn.model_selection.train_test_split": 1.0
        }
    },
    "X_train,bogus1,y_train,bogus2": {
        "NUMPY_VISUALIZATION": {
            "sklearn.model_selection.train_test_split": 1.0
        }
    },
    "y_mean": {
        "NUMPY_VISUALIZATION": {
            "numpy.mean": 1.0
        }
    },
    "lbl": {
        "NUMPY_VISUALIZATION": {
            "sklearn.preprocessing.LabelEncoder": 1.0
        },
        "STRUCTURED_DATA_VISUALIZATION": {
            "sklearn.preprocessing.LabelEncoder": 1.0
        }
    },
    "ica": {
        "NUMPY_VISUALIZATION": {
            "sklearn.decomposition.FastICA": 1.0
        },
        "STRUCTURED_DATA_VISUALIZATION": {
            "sklearn.decomposition.FastICA": 1.0
        }
    },
    "observations": {
        "CS771": {
            "numpy.array": 1.0
        }
    },
    "observations_a": {
        "CS771": {
            "numpy.random.normal": 1.0
        }
    },
    "observations_b": {
        "CS771": {
            "numpy.random.normal": 1.0
        }
    },
    "forcoininrange(n):result": {
        "CS771": {
            "random.choice": 1.0
        }
    },
    "housing[\"income_cat\"]": {
        "NUMPY_VISUALIZATION": {
            "numpy.ceil": 1.0
        }
    },
    "ordinal_encoder": {
        "NUMPY_VISUALIZATION": {
            "sklearn.preprocessing.LabelEncoder": 1.0
        }
    },
    "lab_encoder": {
        "NUMPY_VISUALIZATION": {
            "sklearn.preprocessing.LabelBinarizer": 1.0
        }
    },
    "predicted_label": {
        "TENSOR_FLOW": {
            "numpy.argmax": 1.0
        },
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.argmax": 1.0
        }
    },
    "injTable": {
        "DEEP_NEURAL_NETWORKS": {
            "numpy.array": 1.0
        }
    },
    "pixel_pos": {
        "DEEP_NEURAL_NETWORKS": {
            "numpy.array": 1.0
        }
    },
    "pix2": {
        "DEEP_NEURAL_NETWORKS": {
            "numpy.array": 0.5,
            "numpy.append": 0.5
        }
    },
    "en": {
        "DEEP_NEURAL_NETWORKS": {
            "numpy.array": 0.5,
            "numpy.append": 0.5
        }
    },
    "alt": {
        "DEEP_NEURAL_NETWORKS": {
            "numpy.array": 0.5,
            "numpy.append": 0.5
        }
    },
    "az": {
        "DEEP_NEURAL_NETWORKS": {
            "numpy.array": 0.5,
            "numpy.append": 0.5
        }
    },
    "pix": {
        "DEEP_NEURAL_NETWORKS": {
            "numpy.array": 0.5,
            "numpy.append": 0.5
        }
    },
    "housing['income_cat']": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.ceil": 1.0
        }
    },
    "mu": {
        "SCIKIT_LEARN": {
            "numpy.mean": 1.0
        }
    },
    "density,edges": {
        "SCIKIT_LEARN": {
            "numpy.histogramdd": 1.0
        }
    },
    "n,m": {
        "IPython": {
            "numpy.exp": 0.5,
            "numpy.meshgrid": 0.5
        }
    },
    "outR": {
        "IPython": {
            "numpy.exp": 0.5,
            "numpy.fmin": 0.5
        }
    },
    "outG": {
        "IPython": {
            "numpy.exp": 0.5,
            "numpy.fmin": 0.5
        }
    },
    "outB": {
        "IPython": {
            "numpy.exp": 0.5,
            "numpy.fmin": 0.5
        }
    },
    "roc": {
        "NUMPY_VISUALIZATION": {
            "sklearn.metrics.roc_auc_score": 1.0
        }
    },
    "image_test": {
        "STRUCTURED_DATA": {
            "numpy.reshape": 1.0
        }
    },
    "[N,features]": {
        "STRUCTURED_DATA": {
            "numpy.shape": 1.0
        }
    },
    "mx.symbol.random_normal(loc": {
        "STRUCTURED_DATA": {
            "numpy.shape": 1.0
        }
    },
    "xr": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.arange": 1.0
        }
    },
    "yr": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.arange": 1.0
        }
    },
    "Z2": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.arange": 1.0
        },
        "NUMPY_VISUALIZATION": {
            "numpy.dot": 1.0
        }
    },
    "condition": {
        "STRUCTURED_DATA": {
            "numpy.array": 1.0
        }
    },
    "bool_arr": {
        "STRUCTURED_DATA": {
            "numpy.array": 1.0
        }
    },
    "countries": {
        "STRUCTURED_DATA": {
            "numpy.array": 1.0
        }
    },
    "answer2": {
        "STRUCTURED_DATA": {
            "numpy.where": 1.0
        }
    },
    "dx,dy": {
        "STRUCTURED_DATA": {
            "numpy.meshgrid": 1.0
        }
    },
    "R0": {
        "STRUCTURED_DATA": {
            "numpy.array": 1.0
        }
    },
    "X1,Y1": {
        "STRUCTURED_DATA": {
            "numpy.array": 1.0
        }
    },
    "R1": {
        "STRUCTURED_DATA": {
            "numpy.array": 1.0
        }
    },
    "a_11": {
        "STRUCTURED_DATA": {
            "numpy.cos": 0.6666666666666666,
            "numpy.cosh": 0.3333333333333333
        }
    },
    "a_12": {
        "STRUCTURED_DATA": {
            "numpy.sin": 0.6666666666666666,
            "numpy.sinh": 0.3333333333333333
        }
    },
    "A_hat_mean": {
        "STRUCTURED_DATA": {
            "numpy.matrix": 1.0
        }
    },
    "A_hat": {
        "STRUCTURED_DATA": {
            "numpy.matrix": 1.0
        }
    },
    "abscisa": {
        "STRUCTURED_DATA": {
            "numpy.arange": 1.0
        }
    },
    "x_1": {
        "STRUCTURED_DATA": {
            "numpy.zeros": 1.0
        }
    },
    "x_2": {
        "STRUCTURED_DATA": {
            "numpy.zeros": 1.0
        }
    },
    "y_1": {
        "STRUCTURED_DATA": {
            "numpy.zeros": 1.0
        }
    },
    "y_2": {
        "STRUCTURED_DATA": {
            "numpy.zeros": 1.0
        },
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.array": 1.0
        }
    },
    "f_1": {
        "STRUCTURED_DATA": {
            "numpy.zeros": 1.0
        }
    },
    "f_2": {
        "STRUCTURED_DATA": {
            "numpy.zeros": 1.0
        }
    },
    "error_1": {
        "STRUCTURED_DATA": {
            "numpy.log": 1.0
        }
    },
    "error_2": {
        "STRUCTURED_DATA": {
            "numpy.log": 1.0
        }
    },
    "grad_difference": {
        "CS771": {
            "numpy.linalg.norm": 1.0
        }
    },
    "x_tilde": {
        "SCIENTIFIC_COMPUTING": {
            "numpy.zeros": 1.0
        }
    },
    "rho": {
        "SCIENTIFIC_COMPUTING": {
            "numpy.where": 1.0
        }
    },
    "exp_return": {
        "SCIENTIFIC_COMPUTING": {
            "numpy.dot": 1.0
        }
    },
    "algo.b_t": {
        "SCIENTIFIC_COMPUTING": {
            "numpy.ones": 1.0
        }
    },
    "sv": {
        "SCIENTIFIC_COMPUTING": {
            "numpy.cumsum": 1.0
        }
    },
    "re_repeat": {
        "TENSOR_FLOW": {
            "re.compile": 1.0
        }
    },
    "re_block8": {
        "TENSOR_FLOW": {
            "re.compile": 1.0
        }
    },
    "weight_arr": {
        "TENSOR_FLOW": {
            "numpy.load": 1.0
        }
    },
    "rand_1": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.random.randint": 1.0
        }
    },
    "fpr,tpr,_": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.metrics.roc_curve": 1.0
        }
    },
    "auc_dict[col]": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.metrics.auc": 1.0
        }
    },
    "roc_auc": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.metrics.auc": 1.0
        }
    },
    "precision,recall,_": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.metrics.precision_recall_curve": 1.0
        }
    },
    "f1": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.metrics.f1_score": 1.0
        },
        "STRUCTURED_DATA_VISUALIZATION": {
            "sklearn.metrics.f1_score": 1.0
        }
    },
    "CV.loc[val_i,'test_cv_score']": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.linear_model.LogisticRegression": 1.0
        }
    },
    "CV.loc[val_i,'log_cv_score']": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.linear_model.LogisticRegression": 1.0
        }
    },
    "gbs": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.model_selection.RandomizedSearchCV": 1.0
        }
    },
    "q_values": {
        "SCIENTIFIC_COMPUTING": {
            "numpy.zeros": 1.0
        }
    },
    "model.startprob_": {
        "STRUCTURED_DATA": {
            "numpy.array": 1.0
        }
    },
    "model.transmat_": {
        "STRUCTURED_DATA": {
            "numpy.array": 1.0
        }
    },
    "model.emissionprob_": {
        "STRUCTURED_DATA": {
            "numpy.array": 1.0
        }
    },
    "contents": {
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "numpy.asarray": 0.5,
            "numpy.append": 0.5
        }
    },
    "random_forest_model": {
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "sklearn.ensemble.RandomForestClassifier": 1.0
        }
    },
    "X_train,x_test,Y_train,y_test": {
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "sklearn.model_selection.train_test_split": 1.0
        }
    },
    "k_means": {
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "sklearn.cluster.KMeans": 1.0
        },
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.cluster.KMeans": 1.0
        }
    },
    "gnb": {
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "sklearn.naive_bayes.GaussianNB": 1.0
        }
    },
    "logistic_reg_clf": {
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "sklearn.linear_model.LogisticRegression": 1.0
        }
    },
    "test_number": {
        "SCIENTIFIC_COMPUTING": {
            "numpy.arange": 1.0
        }
    },
    "number": {
        "SCIENTIFIC_COMPUTING": {
            "numpy.arange": 1.0
        }
    },
    "can_enter": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.logical_and": 1.0
        }
    },
    "rmse_val": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.sqrt": 1.0
        }
    },
    "im_list": {
        "STRUCTURED_DATA": {
            "numpy.asarray": 1.0
        }
    },
    "X_rep": {
        "SCIENTIFIC_COMPUTING": {
            "numpy.zeros": 1.0
        }
    },
    "X_dem": {
        "SCIENTIFIC_COMPUTING": {
            "numpy.zeros": 1.0
        }
    },
    "Y_train": {
        "SCIENTIFIC_COMPUTING": {
            "numpy.zeros": 1.0
        },
        "TENSOR_FLOW": {
            "numpy.array": 1.0
        }
    },
    "Y_test": {
        "SCIENTIFIC_COMPUTING": {
            "numpy.zeros": 1.0
        },
        "TENSOR_FLOW": {
            "numpy.array": 1.0
        }
    },
    "Labels": {
        "SCIENTIFIC_COMPUTING": {
            "numpy.argmax": 1.0
        }
    },
    "train_label": {
        "STRUCTURED_DATA": {
            "numpy.asarray": 1.0
        }
    },
    "train.SalePrice": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.log1p": 1.0
        }
    },
    "train_num[skewed_features]": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.log1p": 1.0
        }
    },
    "train[\"OverallQual-Sq\"]": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.sqrt": 1.0
        }
    },
    "train[\"AllSF-Sq\"]": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.sqrt": 1.0
        }
    },
    "train[\"AllFlrsSF-Sq\"]": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.sqrt": 1.0
        }
    },
    "train[\"GrLivArea-Sq\"]": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.sqrt": 1.0
        }
    },
    "train[\"SimplOverallQual-Sq\"]": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.sqrt": 1.0
        }
    },
    "train[\"ExterQual-Sq\"]": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.sqrt": 1.0
        }
    },
    "train[\"GarageCars-Sq\"]": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.sqrt": 1.0
        }
    },
    "train[\"TotalBath-Sq\"]": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.sqrt": 1.0
        }
    },
    "train[\"KitchenQual-Sq\"]": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.sqrt": 1.0
        }
    },
    "train[\"GarageScore-Sq\"]": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.sqrt": 1.0
        }
    },
    "stdSc": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.preprocessing.StandardScaler": 1.0
        }
    },
    "elasticNet": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.linear_model.ElasticNetCV": 1.0
        }
    },
    "e_mate": {
        "STRUCTURED_DATA": {
            "numpy.array": 1.0
        }
    },
    "e_crom": {
        "STRUCTURED_DATA": {
            "numpy.array": 1.0
        }
    },
    "referencia_data": {
        "STRUCTURED_DATA": {
            "numpy.loadtxt": 1.0
        }
    },
    "onehot_labels": {
        "TENSOR_FLOW": {
            "numpy.array": 1.0
        }
    },
    "img_train,img_test,label_train,label_test": {
        "TENSOR_FLOW": {
            "sklearn.model_selection.train_test_split": 1.0
        }
    },
    "img_pil_np": {
        "STRUCTURED_DATA": {
            "numpy.array": 1.0
        }
    },
    "mape": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.mean": 1.0
        }
    },
    "min_max_scaler": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "sklearn.preprocessing.MinMaxScaler": 1.0
        }
    },
    "feature_sel_model": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.feature_selection.SelectFromModel": 1.0
        }
    },
    "train_score_mean": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.mean": 1.0
        }
    },
    "val_score_mean": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.mean": 1.0
        }
    },
    "train_score_std": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.std": 1.0
        }
    },
    "val_score_std": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.std": 1.0
        }
    },
    "train_scores_std": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.std": 1.0
        }
    },
    "test_scores_std": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.std": 1.0
        }
    },
    "training_score,val_score": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.model_selection.validation_curve": 1.0
        }
    },
    "mlp_final": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.neural_network.MLPClassifier": 1.0
        }
    },
    "last": {
        "CS771": {
            "numpy.concatenate": 0.3333333333333333,
            "numpy.multiply": 0.6666666666666666
        }
    },
    "current": {
        "CS771": {
            "numpy.multiply": 1.0
        }
    },
    "chromosome_state_x": {
        "CS771": {
            "random.choice": 1.0
        }
    },
    "chromosome_state": {
        "CS771": {
            "random.choice": 1.0
        }
    },
    "freq,power": {
        "SCIKIT_LEARN": {
            "scipy.signal.periodogram": 1.0
        }
    },
    "freq2,power2": {
        "SCIKIT_LEARN": {
            "scipy.signal.periodogram": 1.0
        }
    },
    "engagement_by_account": {
        "IPython": {
            "collections.defaultdict": 1.0
        }
    },
    "grouped_data": {
        "IPython": {
            "collections.defaultdict": 1.0
        }
    },
    "X1_train,X1_test,y1_train,y1_test": {
        "NUMPY_VISUALIZATION": {
            "sklearn.model_selection.train_test_split": 1.0
        }
    },
    "X2_train,X2_test,y2_train,y2_test": {
        "NUMPY_VISUALIZATION": {
            "sklearn.model_selection.train_test_split": 1.0
        }
    },
    "confusion_matrix_y1": {
        "NUMPY_VISUALIZATION": {
            "sklearn.metrics.confusion_matrix": 1.0
        }
    },
    "confusion_matrix_y2": {
        "NUMPY_VISUALIZATION": {
            "sklearn.metrics.confusion_matrix": 1.0
        }
    },
    "clf_roc_auc": {
        "NUMPY_VISUALIZATION": {
            "sklearn.metrics.roc_auc_score": 1.0
        }
    },
    "clf1_roc_auc": {
        "NUMPY_VISUALIZATION": {
            "sklearn.metrics.roc_auc_score": 1.0
        }
    },
    "clf1": {
        "NUMPY_VISUALIZATION": {
            "sklearn.linear_model.LogisticRegression": 1.0
        }
    },
    "x_ax": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.array": 1.0
        }
    },
    "freqs": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.array": 1.0
        }
    },
    "words": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.array": 1.0
        }
    },
    "bad_rotten": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.argsort": 1.0
        }
    },
    "bad_fresh": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.argsort": 1.0
        }
    },
    "sorted_doc_freqs": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.sort": 1.0
        }
    },
    "X_train,y_train,X_test,y_test": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.model_selection.train_test_split": 1.0
        }
    },
    "_,itest": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.model_selection.train_test_split": 1.0
        }
    },
    "self.total_rewards": {
        "STRUCTURED_DATA": {
            "numpy.zeros": 1.0
        }
    },
    "self.total_counts": {
        "STRUCTURED_DATA": {
            "numpy.zeros": 1.0
        }
    },
    "current_averages[self.total_counts<": {
        "STRUCTURED_DATA": {
            "numpy.argmax": 1.0
        }
    },
    "current_action": {
        "STRUCTURED_DATA": {
            "numpy.argmax": 1.0
        }
    },
    "current_averages": {
        "STRUCTURED_DATA": {
            "numpy.divide": 1.0
        }
    },
    "choice": {
        "STRUCTURED_DATA": {
            "numpy.random.binomial": 1.0
        }
    },
    "Z_embedding_tree": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "scipy.spatial.cKDTree": 1.0
        }
    },
    "greyc_U": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.array": 1.0
        }
    },
    "YnxG_allNME": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.asarray": 1.0
        }
    },
    "y_dec": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.asarray": 1.0
        }
    },
    "pbestacci": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.zeros": 1.0
        }
    },
    "combX_allNME": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.concatenate": 1.0
        }
    },
    "dataZspace_wmu": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.concatenate": 1.0
        }
    },
    "Zspace_mu": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.concatenate": 1.0
        }
    },
    "XX": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.array": 1.0
        },
        "NUMPY_VISUALIZATION": {
            "numpy.vstack": 1.0
        }
    },
    "mu_true": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.asanyarray": 1.0
        }
    },
    "sigma_true": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.asanyarray": 1.0
        }
    },
    "likelihood": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.zeros": 1.0
        }
    },
    "tmp_mu": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.zeros": 1.0
        }
    },
    "tmp_sigma": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.zeros": 1.0
        }
    },
    "tmp_sigma[k]": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.zeros": 1.0
        }
    },
    "prev_sum_log_likelihood": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.sum": 1.0
        }
    },
    "sum_log_likelihood": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.sum": 1.0
        }
    },
    "imgs_fnames": {
        "STRUCTURED_DATA": {
            "numpy.random.permutation": 1.0
        }
    },
    "scores[i]": {
        "IPython": {
            "sklearn.metrics.r2_score": 1.0
        }
    },
    "Z1": {
        "NUMPY_VISUALIZATION": {
            "numpy.dot": 1.0
        }
    },
    "dZ1": {
        "NUMPY_VISUALIZATION": {
            "numpy.dot": 1.0
        }
    },
    "shape_X": {
        "NUMPY_VISUALIZATION": {
            "numpy.shape": 1.0
        }
    },
    "shape_Y": {
        "NUMPY_VISUALIZATION": {
            "numpy.shape": 1.0
        }
    },
    "n_x": {
        "NUMPY_VISUALIZATION": {
            "numpy.shape": 1.0
        }
    },
    "n_y": {
        "NUMPY_VISUALIZATION": {
            "numpy.shape": 1.0
        }
    },
    "A1": {
        "NUMPY_VISUALIZATION": {
            "numpy.tanh": 1.0
        }
    },
    "W1": {
        "NUMPY_VISUALIZATION": {
            "numpy.random.randn": 1.0
        }
    },
    "W2": {
        "NUMPY_VISUALIZATION": {
            "numpy.random.randn": 1.0
        }
    },
    "correct_out": {
        "CS771": {
            "numpy.array": 1.0
        }
    },
    "expected_m": {
        "CS771": {
            "numpy.asarray": 1.0
        }
    },
    "model.params['W1']": {
        "CS771": {
            "numpy.linspace": 1.0
        }
    },
    "model.params['b1']": {
        "CS771": {
            "numpy.linspace": 1.0
        }
    },
    "model.params['W2']": {
        "CS771": {
            "numpy.linspace": 1.0
        }
    },
    "model.params['b2']": {
        "CS771": {
            "numpy.linspace": 1.0
        }
    },
    "cache": {
        "CS771": {
            "numpy.linspace": 1.0
        }
    },
    "dout": {
        "CS771": {
            "numpy.random.randn": 1.0
        }
    },
    "random_beta": {
        "CS771": {
            "random.betavariate": 1.0
        }
    },
    "f.read(16)raw_data": {
        "STRUCTURED_DATA": {
            "numpy.fromstring": 1.0
        }
    },
    "f.read(8)labels": {
        "STRUCTURED_DATA": {
            "numpy.fromstring": 1.0
        }
    },
    "vlog": {
        "IPython": {
            "numpy.vectorize": 1.0
        }
    },
    "A_np": {
        "SCIENTIFIC_COMPUTING": {
            "numpy.array": 1.0
        }
    },
    "true_k": {
        "CS771": {
            "numpy.unique": 1.0
        }
    },
    "pscdata": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "json.load": 1.0
        }
    },
    "cluster_labels": {
        "NUMPY_VISUALIZATION": {
            "numpy.unique": 1.0
        }
    },
    "silhouette_vals": {
        "NUMPY_VISUALIZATION": {
            "sklearn.metrics.silhouette_samples": 1.0
        }
    },
    "ac": {
        "NUMPY_VISUALIZATION": {
            "sklearn.cluster.AgglomerativeClustering": 1.0
        }
    },
    "nfl_frame['Stadium']": {
        "SCIENTIFIC_COMPUTING": {
            "numpy.arange": 1.0
        }
    },
    "newSchedules": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.array": 0.3333333333333333,
            "numpy.append": 0.6666666666666666
        }
    },
    "newWeeks": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.array": 0.5,
            "numpy.append": 0.5
        }
    },
    "newRatings": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.array": 0.2,
            "numpy.append": 0.8
        }
    },
    "npsScores": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.append": 1.0
        }
    },
    "pacing_ave": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.append": 1.0
        }
    },
    "y_t": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.zeros": 1.0
        }
    },
    "y_t[:,i]": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.sum": 1.0
        }
    },
    "percentiles": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.percentile": 1.0
        }
    },
    "y_t[:,0:order]": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.tile": 1.0
        }
    },
    "x_data": {
        "NUMPY_VISUALIZATION": {
            "numpy.linspace": 1.0
        }
    },
    "rand_ind": {
        "NUMPY_VISUALIZATION": {
            "numpy.random.randint": 1.0
        }
    },
    "x_train,x_eval,y_train,y_eval": {
        "NUMPY_VISUALIZATION": {
            "sklearn.model_selection.train_test_split": 1.0
        }
    },
    "lr_model": {
        "NUMPY_VISUALIZATION": {
            "sklearn.linear_model.LinearRegression": 1.0
        }
    },
    "self.z": {
        "SCIENTIFIC_COMPUTING": {
            "numpy.dot": 1.0
        }
    },
    "self.W1": {
        "SCIENTIFIC_COMPUTING": {
            "numpy.random.randn": 1.0
        }
    },
    "mars_weather": {
        "REQUESTS": {
            "re.compile": 1.0
        }
    },
    "kernel1": {
        "STRUCTURED_DATA": {
            "numpy.ones": 1.0
        }
    },
    "kernel2": {
        "STRUCTURED_DATA": {
            "numpy.ones": 1.0
        }
    },
    "stuff": {
        "REQUESTS": {
            "json.load": 1.0
        }
    },
    "code,name": {
        "REQUESTS": {
            "re.split": 1.0
        }
    },
    "iqr": {
        "REQUESTS": {
            "numpy.subtract": 1.0
        }
    },
    "matrix1": {
        "STRUCTURED_DATA": {
            "numpy.array": 1.0
        }
    },
    "a_prev": {
        "STRUCTURED_DATA": {
            "numpy.zeros": 0.5,
            "numpy.random.randn": 0.5
        }
    },
    "dWax": {
        "STRUCTURED_DATA": {
            "numpy.random.randn": 1.0
        }
    },
    "dWaa": {
        "STRUCTURED_DATA": {
            "numpy.random.randn": 1.0
        }
    },
    "dWya": {
        "STRUCTURED_DATA": {
            "numpy.random.randn": 1.0
        }
    },
    "dby": {
        "STRUCTURED_DATA": {
            "numpy.random.randn": 1.0
        }
    },
    "Wax,Waa,Wya": {
        "STRUCTURED_DATA": {
            "numpy.random.randn": 1.0
        }
    },
    "b,by": {
        "STRUCTURED_DATA": {
            "numpy.random.randn": 1.0
        }
    },
    "V": {
        "SCIENTIFIC_COMPUTING": {
            "numpy.zeros": 1.0
        },
        "TENSOR_FLOW": {
            "numpy.zeros": 1.0
        }
    },
    "q": {
        "SCIENTIFIC_COMPUTING": {
            "numpy.zeros": 1.0
        },
        "TENSOR_FLOW": {
            "numpy.random.normal": 1.0
        }
    },
    "Q": {
        "SCIENTIFIC_COMPUTING": {
            "numpy.zeros": 1.0
        },
        "TENSOR_FLOW": {
            "numpy.zeros": 1.0
        }
    },
    "policy": {
        "SCIENTIFIC_COMPUTING": {
            "numpy.zeros": 0.6666666666666666,
            "numpy.ones": 0.3333333333333333
        }
    },
    "best_a": {
        "SCIENTIFIC_COMPUTING": {
            "numpy.argwhere": 1.0
        }
    },
    "random_policy": {
        "SCIENTIFIC_COMPUTING": {
            "numpy.ones": 1.0
        }
    },
    "policy[s]": {
        "SCIENTIFIC_COMPUTING": {
            "numpy.sum": 1.0
        }
    },
    "obj": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.array": 1.0
        },
        "STRUCTURED_DATA_VISUALIZATION": {
            "json.loads": 1.0
        }
    },
    "self.tag_encoder": {
        "NUMPY_VISUALIZATION": {
            "sklearn.preprocessing.LabelEncoder": 1.0
        }
    },
    "self.pos_encoder": {
        "NUMPY_VISUALIZATION": {
            "sklearn.preprocessing.LabelEncoder": 1.0
        }
    },
    "label": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.zeros": 1.0
        }
    },
    "rowid": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.random.randint": 1.0
        }
    },
    "rand_num": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.random.randint": 1.0
        }
    },
    "num_gen": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.random.randint": 1.0
        }
    },
    "scaler2": {
        "NUMPY_VISUALIZATION": {
            "sklearn.preprocessing.MinMaxScaler": 1.0
        }
    },
    "accepted_x": {
        "TENSOR_FLOW": {
            "numpy.array": 1.0
        }
    },
    "q_U": {
        "TENSOR_FLOW": {
            "numpy.array": 1.0
        }
    },
    "neg": {
        "TENSOR_FLOW": {
            "numpy.concatenate": 1.0
        }
    },
    "current_K": {
        "TENSOR_FLOW": {
            "numpy.sum": 1.0
        }
    },
    "proposed_K": {
        "TENSOR_FLOW": {
            "numpy.sum": 1.0
        }
    },
    "qx": {
        "TENSOR_FLOW": {
            "numpy.eye": 1.0
        }
    },
    "self.data": {
        "TENSOR_FLOW": {
            "numpy.load": 1.0
        }
    },
    "rate": {
        "TENSOR_FLOW": {
            "numpy.random.random_sample": 1.0
        }
    },
    "self.history": {
        "TENSOR_FLOW": {
            "collections.defaultdict": 1.0
        }
    },
    "popt,pcov": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "scipy.optimize.curve_fit": 1.0
        },
        "SCIKIT_LEARN": {
            "scipy.optimize.curve_fit": 1.0
        }
    },
    "binned_weighted_statistic": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "scipy.stats.binned_statistic_dd": 1.0
        }
    },
    "binned_weights": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "scipy.stats.binned_statistic_dd": 1.0
        }
    },
    "IvsFEE_average": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "scipy.stats.binned_statistic_dd": 1.0
        }
    },
    "I0vsFEE_average": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "scipy.stats.binned_statistic_dd": 1.0
        }
    },
    "my_hist": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "scipy.stats.binned_statistic_dd": 1.0
        }
    },
    "my_hist_linear": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "scipy.stats.binned_statistic_dd": 1.0
        }
    },
    "my_signal": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "scipy.stats.binned_statistic_dd": 1.0
        }
    },
    "pump_probe_trace": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "scipy.stats.binned_statistic_dd": 1.0
        }
    },
    "train_set_x_orig": {
        "STRUCTURED_DATA": {
            "numpy.array": 1.0
        }
    },
    "test_set_x_orig": {
        "STRUCTURED_DATA": {
            "numpy.array": 1.0
        }
    },
    "temp": {
        "STRUCTURED_DATA": {
            "numpy.array": 1.0
        },
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.append": 0.6,
            "numpy.zeros": 0.4
        }
    },
    "temp_image": {
        "STRUCTURED_DATA": {
            "numpy.array": 1.0
        }
    },
    "Train_label[i]": {
        "STRUCTURED_DATA": {
            "numpy.array": 1.0
        }
    },
    "Test_label[i+68-len(image_list)]": {
        "STRUCTURED_DATA": {
            "numpy.array": 1.0
        }
    },
    "T_X": {
        "STRUCTURED_DATA": {
            "numpy.array": 1.0
        }
    },
    "T_y": {
        "STRUCTURED_DATA": {
            "numpy.array": 1.0
        }
    },
    "train_set_y_orig": {
        "STRUCTURED_DATA": {
            "numpy.array": 1.0
        }
    },
    "image_list": {
        "STRUCTURED_DATA": {
            "numpy.hstack": 1.0
        }
    },
    "label_list": {
        "STRUCTURED_DATA": {
            "numpy.hstack": 1.0
        }
    },
    "Train_image": {
        "STRUCTURED_DATA": {
            "numpy.random.rand": 1.0
        }
    },
    "Train_label": {
        "STRUCTURED_DATA": {
            "numpy.random.rand": 1.0
        }
    },
    "Test_image": {
        "STRUCTURED_DATA": {
            "numpy.random.rand": 1.0
        }
    },
    "Test_label": {
        "STRUCTURED_DATA": {
            "numpy.random.rand": 1.0
        }
    },
    "sessions_": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.array": 1.0
        }
    },
    "segments_": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.array": 1.0
        }
    },
    "scores_bayes_evt": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.array": 1.0
        }
    },
    "scores_bayes_shuffled_evt": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.array": 1.0
        }
    },
    "scores_bayes_percentile_evt": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.array": 1.0
        }
    },
    "bdries": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.cumsum": 1.0
        }
    },
    "session": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.unique": 1.0
        }
    },
    "segment": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.unique": 1.0
        }
    },
    "seq_array_test_last": {
        "NUMPY_VISUALIZATION": {
            "numpy.asarray": 1.0
        }
    },
    "train_df['label1']": {
        "NUMPY_VISUALIZATION": {
            "numpy.where": 1.0
        }
    },
    "test_df['label1']": {
        "NUMPY_VISUALIZATION": {
            "numpy.where": 1.0
        }
    },
    "seq_array": {
        "NUMPY_VISUALIZATION": {
            "numpy.concatenate": 1.0
        }
    },
    "label_array": {
        "NUMPY_VISUALIZATION": {
            "numpy.concatenate": 1.0
        }
    },
    "nbayes": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.naive_bayes.GaussianNB": 1.0
        }
    },
    "base": {
        "TENSOR_FLOW": {
            "numpy.zeros": 1.0
        }
    },
    "a_random": {
        "TENSOR_FLOW": {
            "numpy.random.rand": 1.0
        }
    },
    "scores1": {
        "NUMPY_VISUALIZATION": {
            "numpy.array": 1.0
        }
    },
    "scores2": {
        "NUMPY_VISUALIZATION": {
            "numpy.array": 1.0
        },
        "IPython": {
            "sklearn.model_selection.cross_val_score": 1.0
        }
    },
    "means": {
        "NUMPY_VISUALIZATION": {
            "numpy.zeros": 1.0
        },
        "SCIKIT_LEARN": {
            "numpy.concatenate": 1.0
        }
    },
    "nan_id": {
        "NUMPY_VISUALIZATION": {
            "numpy.argwhere": 1.0
        }
    },
    "correction": {
        "NUMPY_VISUALIZATION": {
            "numpy.amax": 1.0
        }
    },
    "X_train_zeros": {
        "NUMPY_VISUALIZATION": {
            "numpy.hstack": 1.0
        }
    },
    "X_test_zeros": {
        "NUMPY_VISUALIZATION": {
            "numpy.hstack": 1.0
        }
    },
    "X_train_mean": {
        "NUMPY_VISUALIZATION": {
            "numpy.hstack": 1.0
        }
    },
    "X_test_mean": {
        "NUMPY_VISUALIZATION": {
            "numpy.hstack": 1.0
        }
    },
    "X_train_zeros_scaled": {
        "NUMPY_VISUALIZATION": {
            "numpy.hstack": 1.0
        }
    },
    "X_test_zeros_scaled": {
        "NUMPY_VISUALIZATION": {
            "numpy.hstack": 1.0
        }
    },
    "X_test_mean_scaled": {
        "NUMPY_VISUALIZATION": {
            "numpy.hstack": 1.0
        }
    },
    "fpr1,tpr1,_": {
        "NUMPY_VISUALIZATION": {
            "sklearn.metrics.roc_curve": 1.0
        }
    },
    "fpr2,tpr2,_": {
        "NUMPY_VISUALIZATION": {
            "sklearn.metrics.roc_curve": 1.0
        }
    },
    "fpr3,tpr3,_": {
        "NUMPY_VISUALIZATION": {
            "sklearn.metrics.roc_curve": 1.0
        }
    },
    "fpr4,tpr4,_": {
        "NUMPY_VISUALIZATION": {
            "sklearn.metrics.roc_curve": 1.0
        }
    },
    "x_axis": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.arange": 1.0
        },
        "NUMPY_VISUALIZATION": {
            "numpy.concatenate": 1.0
        }
    },
    "im1": {
        "STRUCTURED_DATA": {
            "numpy.zeros": 1.0
        }
    },
    "im2": {
        "STRUCTURED_DATA": {
            "numpy.zeros": 1.0
        }
    },
    "train_mu": {
        "STRUCTURED_DATA": {
            "numpy.mean": 1.0
        }
    },
    "train_std": {
        "STRUCTURED_DATA": {
            "numpy.std": 1.0
        }
    },
    "X_skl": {
        "NUMPY_VISUALIZATION": {
            "numpy.hstack": 1.0
        }
    },
    "predict": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.array": 1.0
        }
    },
    "rmsle_scorer": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.metrics.make_scorer": 1.0
        }
    },
    "train_data,test_data": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.model_selection.train_test_split": 1.0
        }
    },
    "trainset,testset": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.model_selection.train_test_split": 1.0
        }
    },
    "MSE": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.metrics.mean_squared_error": 1.0
        }
    },
    "top_n": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "collections.defaultdict": 1.0
        }
    },
    "ppc_all.savefig('ppc_all')ppc_all.savefig('ppc_all.pdf')bins": {
        "SCIKIT_LEARN": {
            "numpy.linspace": 1.0
        }
    },
    "bag.savefig('bag')bag.savefig('bag.pdf')bins": {
        "SCIKIT_LEARN": {
            "numpy.linspace": 1.0
        }
    },
    "text_clf": {
        "NUMPY_VISUALIZATION": {
            "sklearn.pipeline.Pipeline": 1.0
        }
    },
    "lin_reg_rmse_scores": {
        "NUMPY_VISUALIZATION": {
            "numpy.sqrt": 1.0
        }
    },
    "y_errors": {
        "NUMPY_VISUALIZATION": {
            "numpy.subtract": 1.0
        }
    },
    "named_features_pipeline": {
        "NUMPY_VISUALIZATION": {
            "sklearn.pipeline.Pipeline": 1.0
        }
    },
    "X_final_pipeline": {
        "NUMPY_VISUALIZATION": {
            "sklearn.pipeline.Pipeline": 1.0
        }
    },
    "y_final_pipeline": {
        "NUMPY_VISUALIZATION": {
            "sklearn.pipeline.Pipeline": 1.0
        }
    },
    "lin_reg_scores": {
        "NUMPY_VISUALIZATION": {
            "sklearn.model_selection.cross_val_score": 1.0
        }
    },
    "rng": {
        "SCIENTIFIC_COMPUTING": {
            "numpy.random.RandomState": 1.0
        }
    },
    "prec": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.zeros": 1.0
        }
    },
    "fscore": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.zeros": 1.0
        }
    },
    "model1": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.tree.DecisionTreeClassifier": 0.5,
            "sklearn.linear_model.LinearRegression": 0.5
        }
    },
    "self.p_sharing": {
        "CS771": {
            "numpy.array": 0.5,
            "numpy.append": 0.5
        }
    },
    "self.pos": {
        "CS771": {
            "numpy.array": 0.4,
            "numpy.asarray": 0.2,
            "numpy.concatenate": 0.4
        }
    },
    "q_sharing": {
        "CS771": {
            "numpy.array": 1.0
        }
    },
    "clusters": {
        "CS771": {
            "numpy.array": 1.0
        }
    },
    "sharing": {
        "CS771": {
            "numpy.array": 1.0
        }
    },
    "moves": {
        "CS771": {
            "numpy.asarray": 1.0
        }
    },
    "neighbors": {
        "CS771": {
            "numpy.asarray": 1.0
        }
    },
    "silhouettes": {
        "CS771": {
            "numpy.empty": 0.5,
            "numpy.append": 0.5
        }
    },
    "k_best": {
        "CS771": {
            "numpy.argmax": 1.0
        }
    },
    "self.payoffs": {
        "CS771": {
            "numpy.arctan": 1.0
        }
    },
    "dm": {
        "CS771": {
            "numpy.exp": 1.0
        }
    },
    "unique_elements,counts_elements": {
        "CS771": {
            "numpy.unique": 1.0
        }
    },
    "xtfidf_norm": {
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "sklearn.preprocessing.normalize": 1.0
        }
    },
    "horizontal_filter": {
        "STRUCTURED_DATA": {
            "numpy.ones": 1.0
        }
    },
    "face_x": {
        "STRUCTURED_DATA": {
            "numpy.expand_dims": 1.0
        }
    },
    "connections": {
        "CS771": {
            "numpy.zeros": 1.0
        }
    },
    "mins": {
        "CS771": {
            "numpy.zeros": 1.0
        }
    },
    "argmin_s": {
        "CS771": {
            "numpy.zeros": 1.0
        }
    },
    "probabilities": {
        "CS771": {
            "numpy.zeros": 1.0
        }
    },
    "actives_neuron": {
        "CS771": {
            "numpy.zeros": 1.0
        }
    },
    "probabilities_n": {
        "CS771": {
            "numpy.multiply": 1.0
        }
    },
    "distances[i][j]": {
        "CS771": {
            "numpy.linalg.norm": 1.0
        }
    },
    "connections_count": {
        "CS771": {
            "random.randint": 1.0
        }
    },
    "data_train,data_test,target_train,target_test": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.model_selection.train_test_split": 1.0
        }
    },
    "training_accuracy": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.metrics.accuracy_score": 1.0
        },
        "CS771": {
            "numpy.mean": 1.0
        }
    },
    "grid_clf": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.model_selection.GridSearchCV": 1.0
        }
    },
    "sourceSeqLengths": {
        "TENSOR_FLOW": {
            "numpy.zeros": 1.0
        }
    },
    "targetSeqLengths": {
        "TENSOR_FLOW": {
            "numpy.zeros": 1.0
        }
    },
    "batchInputs": {
        "TENSOR_FLOW": {
            "numpy.zeros": 1.0
        }
    },
    "batchTargetIn": {
        "TENSOR_FLOW": {
            "numpy.zeros": 1.0
        }
    },
    "batchTargetOut": {
        "TENSOR_FLOW": {
            "numpy.zeros": 1.0
        }
    },
    "batchInputs[batchI,:,:]": {
        "TENSOR_FLOW": {
            "numpy.pad": 1.0
        }
    },
    "batchTargetIn[batchI,:]": {
        "TENSOR_FLOW": {
            "numpy.pad": 1.0
        }
    },
    "batchTargetOut[batchI,:]": {
        "TENSOR_FLOW": {
            "numpy.pad": 1.0
        }
    },
    "batchRandIdx": {
        "TENSOR_FLOW": {
            "numpy.random.permutation": 1.0
        }
    },
    "test_scores": {
        "NUMPY_VISUALIZATION": {
            "numpy.concatenate": 0.5,
            "numpy.mean": 0.5
        }
    },
    "X_concat": {
        "NUMPY_VISUALIZATION": {
            "numpy.concatenate": 1.0
        }
    },
    "y_concat": {
        "NUMPY_VISUALIZATION": {
            "numpy.concatenate": 1.0
        }
    },
    "best_idx": {
        "NUMPY_VISUALIZATION": {
            "numpy.argmin": 1.0
        }
    },
    "sortidx": {
        "NUMPY_VISUALIZATION": {
            "numpy.argsort": 1.0
        }
    },
    "results[\"PCAexplainedvariance\"]": {
        "NUMPY_VISUALIZATION": {
            "numpy.sum": 1.0
        }
    },
    "results[\"Datapoints\"]": {
        "NUMPY_VISUALIZATION": {
            "numpy.sum": 1.0
        }
    },
    "y_sel": {
        "NUMPY_VISUALIZATION": {
            "numpy.log": 1.0
        }
    },
    "y_train_extra": {
        "NUMPY_VISUALIZATION": {
            "numpy.log": 1.0
        }
    },
    "alphas": {
        "NUMPY_VISUALIZATION": {
            "numpy.logspace": 1.0
        }
    },
    "zoom_alphas": {
        "NUMPY_VISUALIZATION": {
            "numpy.logspace": 1.0
        }
    },
    "vt": {
        "NUMPY_VISUALIZATION": {
            "sklearn.feature_selection.VarianceThreshold": 1.0
        }
    },
    "X_sel_train,X_sel_test,y_sel_train,y_sel_test": {
        "NUMPY_VISUALIZATION": {
            "sklearn.model_selection.train_test_split": 1.0
        }
    },
    "df['AgeState']": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.where": 1.0
        }
    },
    "df['IsMother']": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.where": 1.0
        }
    },
    "df['IsMale']": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.where": 1.0
        }
    },
    "LogFare": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.log": 1.0
        }
    },
    "train_data": {
        "NUMPY_VISUALIZATION": {
            "numpy.array": 1.0
        }
    },
    "eval_data": {
        "NUMPY_VISUALIZATION": {
            "numpy.array": 1.0
        }
    },
    "eval_labels": {
        "NUMPY_VISUALIZATION": {
            "numpy.array": 1.0
        }
    },
    "indsM": {
        "TENSOR_FLOW": {
            "numpy.arange": 1.0
        }
    },
    "fcfc": {
        "TENSOR_FLOW": {
            "numpy.dot": 1.0
        }
    },
    "fsfs": {
        "TENSOR_FLOW": {
            "numpy.dot": 1.0
        }
    },
    "win_mu": {
        "TENSOR_FLOW": {
            "numpy.mean": 1.0
        }
    },
    "nz_indsRow": {
        "TENSOR_FLOW": {
            "numpy.repeat": 1.0
        }
    },
    "content_t": {
        "TENSOR_FLOW": {
            "numpy.transpose": 1.0
        }
    },
    "style_t": {
        "TENSOR_FLOW": {
            "numpy.transpose": 1.0
        }
    },
    "Ds": {
        "TENSOR_FLOW": {
            "numpy.sqrt": 1.0
        }
    },
    "win_var": {
        "TENSOR_FLOW": {
            "numpy.einsum": 1.0
        }
    },
    "blended": {
        "TENSOR_FLOW": {
            "numpy.expand_dims": 1.0
        }
    },
    "nz_indsCol": {
        "TENSOR_FLOW": {
            "numpy.tile": 1.0
        }
    },
    "Dc": {
        "TENSOR_FLOW": {
            "numpy.diag": 1.0
        }
    },
    "ans[:,:,i]": {
        "TENSOR_FLOW": {
            "numpy.pad": 1.0
        }
    },
    "inv": {
        "TENSOR_FLOW": {
            "numpy.linalg.inv": 1.0
        }
    },
    "Ec,wc,_": {
        "TENSOR_FLOW": {
            "numpy.linalg.svd": 1.0
        }
    },
    "Es,ws,_": {
        "TENSOR_FLOW": {
            "numpy.linalg.svd": 1.0
        }
    },
    "inp": {
        "DEEP_NEURAL_NETWORKS": {
            "numpy.clip": 1.0
        }
    },
    "oof_train": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.zeros": 1.0
        }
    },
    "oof_test": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.zeros": 1.0
        }
    },
    "oof_test_skf": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.empty": 1.0
        }
    },
    "age_null_random_list": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.random.randint": 1.0
        }
    },
    "title_search": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "re.search": 1.0
        }
    },
    "SEED": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.model_selection.KFold": 1.0
        }
    },
    "x4": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.arange": 1.0
        }
    },
    "arr3": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.array": 1.0
        }
    },
    "canales": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.array": 1.0
        }
    },
    "datos": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.array": 1.0
        }
    },
    "hijos": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.array": 1.0
        }
    },
    "valores": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.array": 1.0
        }
    },
    "df['visitas']": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.array": 1.0
        }
    },
    "ceros": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.zeros": 1.0
        }
    },
    "unos": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.ones": 1.0
        }
    },
    "xs,ys": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.meshgrid": 1.0
        }
    },
    "diag": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.eye": 1.0
        },
        "SCIKIT_LEARN": {
            "numpy.diag": 1.0
        }
    },
    "values,count": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.unique": 1.0
        }
    },
    "arrays_c": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.load": 1.0
        }
    },
    "x3": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.random.beta": 1.0
        }
    },
    "y3": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.random.beta": 1.0
        }
    },
    "vector_gamma": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.random.gamma": 1.0
        }
    },
    "pois": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.random.normal": 1.0
        }
    },
    "vector_normal": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.random.normal": 1.0
        }
    },
    "vector_poisson": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.random.poisson": 1.0
        }
    },
    "pesos": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.random.uniform": 1.0
        }
    },
    "start": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "datetime.datetime": 1.0
        }
    },
    "gsc": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.model_selection.GridSearchCV": 1.0
        }
    },
    "rfr": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.ensemble.RandomForestRegressor": 1.0
        }
    },
    "new_array": {
        "NUMPY_VISUALIZATION": {
            "numpy.asarray": 1.0
        }
    },
    "df_temp": {
        "NUMPY_VISUALIZATION": {
            "sklearn.preprocessing.MinMaxScaler": 0.5,
            "sklearn.preprocessing.StandardScaler": 0.5
        }
    },
    "mask_gt": {
        "CS771": {
            "numpy.zeros": 1.0
        }
    },
    "X1": {
        "CS771": {
            "numpy.random.multivariate_normal": 1.0
        }
    },
    "X2": {
        "CS771": {
            "numpy.random.multivariate_normal": 1.0
        }
    },
    "X3": {
        "CS771": {
            "numpy.random.multivariate_normal": 1.0
        }
    },
    "X4": {
        "CS771": {
            "numpy.random.multivariate_normal": 1.0
        }
    },
    "true_positive": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.asarray": 1.0
        }
    },
    "false_positive": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.asarray": 1.0
        }
    },
    "false_negative": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.asarray": 1.0
        }
    },
    "onehot": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.zeros": 1.0
        }
    },
    "confusion_matrix": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.zeros": 1.0
        }
    },
    "TARGET_LOCATION[target]": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.argmax": 1.0
        }
    },
    "deff1(prediction,target,epoch,file_name": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.reshape": 1.0
        }
    },
    "word_vectors[word]": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.random.uniform": 1.0
        }
    },
    "lats": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.random.uniform": 1.0
        }
    },
    "lngs": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.random.uniform": 1.0
        }
    },
    "schema": {
        "IPython": {
            "collections.OrderedDict": 1.0
        }
    },
    "real_fake['content']": {
        "NUMPY_VISUALIZATION": {
            "numpy.where": 1.0
        }
    },
    "grad_hat": {
        "SCIKIT_LEARN": {
            "scipy.signal.savgol_filter": 1.0
        }
    },
    "ratio_hat": {
        "SCIKIT_LEARN": {
            "scipy.signal.savgol_filter": 1.0
        }
    },
    "death_vals_hat": {
        "SCIKIT_LEARN": {
            "scipy.signal.savgol_filter": 1.0
        }
    },
    "confirmed_grad_hat": {
        "SCIKIT_LEARN": {
            "scipy.signal.savgol_filter": 1.0
        }
    },
    "data_test['Country_Holand-Netherlands']": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.zeros": 1.0
        }
    },
    "rows": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.ceil": 1.0
        }
    },
    "df_train['Поедет']": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.preprocessing.LabelEncoder": 1.0
        }
    },
    "locally_best_tree": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.model_selection.GridSearchCV": 1.0
        }
    },
    "locally_best_forest": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.model_selection.GridSearchCV": 1.0
        }
    },
    "tuned_tree": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.tree.DecisionTreeClassifier": 1.0
        }
    },
    "accur": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.metrics.accuracy_score": 1.0
        }
    },
    "ward": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.cluster.AgglomerativeClustering": 1.0
        }
    },
    "complete": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.cluster.AgglomerativeClustering": 1.0
        }
    },
    "ward_ar_score": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.metrics.adjusted_rand_score": 1.0
        }
    },
    "complete_ar_score": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.metrics.adjusted_rand_score": 1.0
        }
    },
    "avg_ar_score": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.metrics.adjusted_rand_score": 1.0
        }
    },
    "X_train,y_train": {
        "NUMPY_VISUALIZATION": {
            "numpy.array": 1.0
        }
    },
    "gru_pred": {
        "NUMPY_VISUALIZATION": {
            "numpy.array": 0.5,
            "numpy.repeat": 0.5
        }
    },
    "current_batch": {
        "NUMPY_VISUALIZATION": {
            "numpy.append": 1.0
        }
    },
    "perm": {
        "NUMPY_VISUALIZATION": {
            "numpy.random.permutation": 1.0
        }
    },
    "train_set": {
        "IPython": {
            "sklearn.datasets.load_files": 1.0
        }
    },
    "scores3": {
        "IPython": {
            "sklearn.model_selection.cross_val_score": 1.0
        }
    },
    "labelencoder_X": {
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "sklearn.preprocessing.LabelEncoder": 1.0
        }
    },
    "onehotencoder": {
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "sklearn.preprocessing.OneHotEncoder": 1.0
        },
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.preprocessing.OneHotEncoder": 1.0
        }
    },
    "C_range": {
        "NUMPY_VISUALIZATION": {
            "numpy.logspace": 1.0
        }
    },
    "gamma_range": {
        "NUMPY_VISUALIZATION": {
            "numpy.logspace": 1.0
        }
    },
    "rbf_clf": {
        "NUMPY_VISUALIZATION": {
            "sklearn.svm.SVC": 1.0
        }
    },
    "lin_clf": {
        "NUMPY_VISUALIZATION": {
            "sklearn.svm.SVC": 1.0
        }
    },
    "poly_clf": {
        "NUMPY_VISUALIZATION": {
            "sklearn.svm.SVC": 1.0
        }
    },
    "pca_clf": {
        "NUMPY_VISUALIZATION": {
            "sklearn.svm.SVC": 1.0
        }
    },
    "normalized_rbf_clf": {
        "NUMPY_VISUALIZATION": {
            "sklearn.svm.SVC": 1.0
        }
    },
    "best_rbf_clf": {
        "NUMPY_VISUALIZATION": {
            "sklearn.svm.SVC": 1.0
        }
    },
    "linear_clf": {
        "NUMPY_VISUALIZATION": {
            "sklearn.svm.LinearSVC": 1.0
        }
    },
    "self.l_tq_squared_error": {
        "TENSOR_FLOW": {
            "collections.deque": 1.0
        }
    },
    "results": {
        "NUMPY_VISUALIZATION": {
            "sklearn.model_selection.cross_val_score": 1.0
        },
        "TENSOR_FLOW": {
            "numpy.zeros": 1.0
        }
    },
    "pix_pos": {
        "SCIKIT_LEARN": {
            "numpy.array": 1.0
        }
    },
    "peak_pos": {
        "SCIKIT_LEARN": {
            "numpy.array": 1.0
        }
    },
    "wl": {
        "SCIKIT_LEARN": {
            "numpy.array": 1.0
        }
    },
    "avgcol_starlamp": {
        "SCIKIT_LEARN": {
            "numpy.mean": 1.0
        }
    },
    "LnRg": {
        "SCIKIT_LEARN": {
            "numpy.poly1d": 1.0
        }
    },
    "fit": {
        "SCIKIT_LEARN": {
            "numpy.polyfit": 1.0
        }
    },
    "x_t": {
        "SCIKIT_LEARN": {
            "numpy.asarray": 1.0
        }
    },
    "df_fixed['Fare']": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.log1p": 1.0
        }
    },
    "gc": {
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "sklearn.model_selection.GridSearchCV": 1.0
        }
    },
    "gbc": {
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "sklearn.ensemble.GradientBoostingClassifier": 1.0
        }
    },
    "vv": {
        "STRUCTURED_DATA": {
            "numpy.array": 1.0
        }
    },
    "boost": {
        "STRUCTURED_DATA": {
            "numpy.zeros": 1.0
        }
    },
    "X_2": {
        "STRUCTURED_DATA": {
            "numpy.dot": 1.0
        }
    },
    "X_1": {
        "STRUCTURED_DATA": {
            "numpy.reshape": 1.0
        }
    },
    "beta_norm": {
        "STRUCTURED_DATA": {
            "numpy.linalg.norm": 1.0
        }
    },
    "age_range": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.arange": 1.0
        }
    },
    "chosen_class_with_floors.loc[chosen_missing,'cabin']": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.random.choice": 1.0
        }
    },
    "chosen_class_with_ports.loc[chosen_missing,'embarked']": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.random.choice": 1.0
        }
    },
    "admitted": {
        "SCIKIT_LEARN": {
            "numpy.array": 1.0
        }
    },
    "notAdmitted": {
        "SCIKIT_LEARN": {
            "numpy.array": 1.0
        }
    },
    "dR": {
        "SCIKIT_LEARN": {
            "numpy.array": 1.0
        }
    },
    "accepted": {
        "SCIKIT_LEARN": {
            "numpy.array": 1.0
        }
    },
    "rejected": {
        "SCIKIT_LEARN": {
            "numpy.array": 1.0
        }
    },
    "A_raw": {
        "SCIKIT_LEARN": {
            "numpy.array": 1.0
        }
    },
    "norms": {
        "SCIKIT_LEARN": {
            "numpy.array": 1.0
        }
    },
    "A_inv": {
        "SCIKIT_LEARN": {
            "numpy.dot": 1.0
        }
    },
    "comp": {
        "SCIKIT_LEARN": {
            "numpy.argsort": 1.0
        }
    },
    "bs": {
        "SCIKIT_LEARN": {
            "numpy.repeat": 1.0
        }
    },
    "L[i,i]": {
        "SCIKIT_LEARN": {
            "numpy.sqrt": 1.0
        }
    },
    "cond": {
        "SCIKIT_LEARN": {
            "numpy.linalg.cond": 0.5,
            "numpy.linalg.norm": 0.5
        }
    },
    "LU,p": {
        "SCIKIT_LEARN": {
            "scipy.linalg.lu_factor": 1.0
        }
    },
    "train_x,validation_x,train_y,validation_y": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.model_selection.train_test_split": 1.0
        }
    },
    "model3": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.linear_model.Ridge": 1.0
        }
    },
    "selected_model": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.linear_model.Ridge": 1.0
        }
    },
    "model4": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.linear_model.Lasso": 1.0
        }
    },
    "variances": {
        "SCIKIT_LEARN": {
            "numpy.concatenate": 1.0
        }
    },
    "both_conds": {
        "SCIKIT_LEARN": {
            "numpy.concatenate": 1.0
        }
    },
    "lambda_0": {
        "SCIKIT_LEARN": {
            "numpy.mean": 1.0
        }
    },
    "lambda_x": {
        "SCIKIT_LEARN": {
            "numpy.mean": 1.0
        }
    },
    "lambda_y": {
        "SCIKIT_LEARN": {
            "numpy.mean": 1.0
        }
    },
    "stat['mean'+'_'+cond]": {
        "SCIKIT_LEARN": {
            "numpy.mean": 1.0
        }
    },
    "likelihood_0": {
        "SCIKIT_LEARN": {
            "numpy.prod": 1.0
        }
    },
    "likelihood_a": {
        "SCIKIT_LEARN": {
            "numpy.prod": 1.0
        }
    },
    "stat['var'+'_'+cond]": {
        "SCIKIT_LEARN": {
            "numpy.var": 1.0
        }
    },
    "mean_diff": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.mean": 1.0
        }
    },
    "train_x": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.array": 1.0
        }
    },
    "validation_x": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.array": 1.0
        }
    },
    "Class_perform": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.zeros": 1.0
        }
    },
    "Class_Acc": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.zeros": 1.0
        }
    },
    "Country_perform": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.zeros": 1.0
        }
    },
    "Country_Acc": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.zeros": 1.0
        }
    },
    "label_encoder": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "sklearn.preprocessing.LabelEncoder": 1.0
        }
    },
    "country_encoder": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "sklearn.preprocessing.LabelEncoder": 1.0
        }
    },
    "train_X,validation_X,train_y,validation_y": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "sklearn.model_selection.train_test_split": 1.0
        }
    },
    "df_temp[c]": {
        "NUMPY_VISUALIZATION": {
            "sklearn.preprocessing.LabelEncoder": 1.0
        }
    },
    "cls_pred": {
        "TENSOR_FLOW": {
            "numpy.zeros": 1.0
        }
    },
    "data.test.cls": {
        "TENSOR_FLOW": {
            "numpy.argmax": 1.0
        }
    },
    "true_points": {
        "STRUCTURED_DATA": {
            "numpy.where": 1.0
        }
    },
    "sorted_objects": {
        "STRUCTURED_DATA": {
            "numpy.argsort": 1.0
        }
    },
    "upper_lines": {
        "STRUCTURED_DATA": {
            "numpy.append": 1.0
        }
    },
    "lower_lines": {
        "STRUCTURED_DATA": {
            "numpy.append": 1.0
        }
    },
    "filtered_bool": {
        "STRUCTURED_DATA": {
            "numpy.random.choice": 1.0
        }
    },
    "lasso_model": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.linear_model.LassoCV": 1.0
        }
    },
    "ridge_model": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.linear_model.RidgeCV": 1.0
        }
    },
    "enet_model": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.linear_model.ElasticNetCV": 1.0
        }
    },
    "cleo2": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.concatenate": 1.0
        }
    },
    "warnings.simplefilter(\"ignore\")l_alphas": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.logspace": 1.0
        }
    },
    "r_alphas": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.logspace": 1.0
        }
    },
    "enet_alphas": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.logspace": 1.0
        }
    },
    "cumulative": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.cumsum": 1.0
        }
    },
    "values,base": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.histogram": 1.0
        }
    },
    "itrain,itest": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.model_selection.train_test_split": 1.0
        }
    },
    "clf_best": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.model_selection.GridSearchCV": 1.0
        }
    },
    "training_auc": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.metrics.auc": 1.0
        }
    },
    "test_auc": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.metrics.auc": 1.0
        }
    },
    "training_f1": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.metrics.f1_score": 1.0
        }
    },
    "test_f1": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.metrics.f1_score": 1.0
        }
    },
    "fpr1,tpr1,thresholds1": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.metrics.roc_curve": 1.0
        }
    },
    "Xt_new": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.feature_selection.SelectKBest": 1.0
        }
    },
    "Y_val": {
        "TENSOR_FLOW": {
            "numpy.array": 1.0
        }
    },
    "train_kmm": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.array": 1.0
        }
    },
    "encoded_dim": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.shape": 1.0
        }
    },
    "k_means_labels_unique": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.unique": 1.0
        }
    },
    "df2[feature]": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.where": 1.0
        }
    },
    "GaussNB": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.naive_bayes.GaussianNB": 1.0
        }
    },
    "MultiNB": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.naive_bayes.MultinomialNB": 1.0
        }
    },
    "pipeline2": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.pipeline.Pipeline": 1.0
        }
    },
    "pipeline_nb": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.pipeline.Pipeline": 1.0
        }
    },
    "pipeline_nb1": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.pipeline.Pipeline": 1.0
        }
    },
    "self.min_max_scalar": {
        "SCIENTIFIC_COMPUTING": {
            "sklearn.preprocessing.MinMaxScaler": 1.0
        }
    },
    "y_pos": {
        "STRUCTURED_DATA": {
            "numpy.arange": 1.0
        }
    },
    "colors": {
        "STRUCTURED_DATA": {
            "numpy.random.rand": 1.0
        }
    },
    "area": {
        "STRUCTURED_DATA": {
            "numpy.random.rand": 1.0
        }
    },
    "df[\"PRICE\"]": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.array": 1.0
        }
    },
    "self.mean_": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.mean": 1.0
        }
    },
    "summary_table['Coefficient']": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.transpose": 1.0
        }
    },
    "self.var_": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.var": 1.0
        }
    },
    "summary_table['Odds_ratio']": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.exp": 1.0
        }
    },
    "self.scaler": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.preprocessing.StandardScaler": 1.0
        }
    },
    "encoded": {
        "TENSOR_FLOW": {
            "numpy.array": 1.0
        }
    },
    "image_id": {
        "TENSOR_FLOW": {
            "random.choice": 1.0
        }
    },
    "ixs": {
        "TENSOR_FLOW": {
            "numpy.arange": 0.3333333333333333,
            "numpy.where": 0.3333333333333333,
            "numpy.random.randint": 0.3333333333333333
        }
    },
    "roi_class_names": {
        "TENSOR_FLOW": {
            "numpy.array": 1.0
        }
    },
    "det_mask_specific": {
        "TENSOR_FLOW": {
            "numpy.array": 1.0
        }
    },
    "det_masks": {
        "TENSOR_FLOW": {
            "numpy.array": 1.0
        }
    },
    "positive_anchor_ix": {
        "TENSOR_FLOW": {
            "numpy.where": 1.0
        }
    },
    "negative_anchor_ix": {
        "TENSOR_FLOW": {
            "numpy.where": 1.0
        }
    },
    "neutral_anchor_ix": {
        "TENSOR_FLOW": {
            "numpy.where": 1.0
        }
    },
    "det_count": {
        "TENSOR_FLOW": {
            "numpy.where": 1.0
        }
    },
    "roi_positive_ixs": {
        "TENSOR_FLOW": {
            "numpy.where": 1.0
        }
    },
    "visibilities": {
        "TENSOR_FLOW": {
            "numpy.where": 1.0
        }
    },
    "keep": {
        "TENSOR_FLOW": {
            "numpy.where": 0.3333333333333333,
            "numpy.intersect1d": 0.6666666666666666
        }
    },
    "roi_class_ids": {
        "TENSOR_FLOW": {
            "numpy.argmax": 1.0
        }
    },
    "sorted_anchor_ids": {
        "TENSOR_FLOW": {
            "numpy.argsort": 1.0
        }
    },
    "proposals": {
        "TENSOR_FLOW": {
            "numpy.around": 1.0
        }
    },
    "nms_keep": {
        "TENSOR_FLOW": {
            "numpy.union1d": 1.0
        }
    },
    "image_ids": {
        "TENSOR_FLOW": {
            "numpy.random.choice": 1.0
        }
    },
    "npimg": {
        "STRUCTURED_DATA": {
            "numpy.array": 0.8333333333333334,
            "numpy.sum": 0.16666666666666666
        }
    },
    "\timage": {
        "STRUCTURED_DATA": {
            "numpy.asarray": 1.0
        }
    },
    "y_pred": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.array": 1.0
        }
    },
    "weather_labels_value": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.transpose": 1.0
        }
    },
    "array2": {
        "SCIENTIFIC_COMPUTING": {
            "numpy.array": 1.0
        }
    },
    "array3": {
        "SCIENTIFIC_COMPUTING": {
            "numpy.array": 1.0
        }
    },
    "array3.sum(axis": {
        "SCIENTIFIC_COMPUTING": {
            "numpy.array": 1.0
        }
    },
    "zerod": {
        "SCIENTIFIC_COMPUTING": {
            "numpy.zeros": 1.0
        }
    },
    "M_test_ans": {
        "CS771": {
            "numpy.array": 1.0
        }
    },
    "M_reduced_plot_test": {
        "CS771": {
            "numpy.array": 1.0
        }
    },
    "M_lengths": {
        "CS771": {
            "numpy.linalg.norm": 1.0
        }
    },
    "svd": {
        "CS771": {
            "sklearn.decomposition.TruncatedSVD": 1.0
        }
    },
    "elifnotcollections.Counter(self.indep_coords)": {
        "SCIENTIFIC_COMPUTING": {
            "collections.Counter": 1.0
        }
    },
    "ifnotcollections.Counter(_ham1.indep_coords)": {
        "SCIENTIFIC_COMPUTING": {
            "collections.Counter": 1.0
        }
    },
    "elifnotcollections.Counter(_op1.indep_coords)": {
        "SCIENTIFIC_COMPUTING": {
            "collections.Counter": 1.0
        }
    },
    "pos_inputs": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.array": 1.0
        }
    },
    "neg_inputs": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.array": 1.0
        }
    },
    "test_inputs": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.array": 1.0
        }
    },
    "temp_features": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.zeros": 1.0
        }
    },
    "neg_labels": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.zeros": 1.0
        }
    },
    "pos_full": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.concatenate": 1.0
        }
    },
    "neg_full": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.concatenate": 1.0
        }
    },
    "all_": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.concatenate": 1.0
        }
    },
    "pos_labels": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.ones": 1.0
        }
    },
    "gb_clf": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "sklearn.naive_bayes.GaussianNB": 0.5,
            "sklearn.ensemble.GradientBoostingClassifier": 0.5
        }
    },
    "rf_clf": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "sklearn.ensemble.RandomForestClassifier": 1.0
        }
    },
    "sv_clf": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "sklearn.svm.SVC": 1.0
        }
    },
    "lsv_clf": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "sklearn.svm.LinearSVC": 1.0
        }
    },
    "acc_score": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "sklearn.metrics.accuracy_score": 1.0
        }
    },
    "prec_score": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "sklearn.metrics.precision_score": 1.0
        }
    },
    "rec_score": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "sklearn.metrics.recall_score": 1.0
        }
    },
    "re_tag": {
        "STRUCTURED_DATA": {
            "re.compile": 1.0
        }
    },
    "tp": {
        "SCIENTIFIC_COMPUTING": {
            "numpy.dtype": 1.0
        }
    },
    "labelencoder_X_1": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.preprocessing.LabelEncoder": 1.0
        }
    },
    "labelencoder_X_2": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.preprocessing.LabelEncoder": 1.0
        }
    },
    "re_newlines": {
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "re.compile": 1.0
        }
    },
    "re_letters": {
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "re.compile": 1.0
        }
    },
    "re_spaces": {
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "re.compile": 1.0
        }
    },
    "word_vecs[word]": {
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "numpy.array": 1.0
        }
    },
    "W[0]": {
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "numpy.zeros": 1.0
        }
    },
    "W[1]": {
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "numpy.random.uniform": 1.0
        }
    },
    "W[i]": {
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "numpy.random.uniform": 1.0
        }
    },
    "plt.errorbar(np.array(mean_list),x,xerr": {
        "NUMPY_VISUALIZATION": {
            "numpy.array": 1.0
        }
    },
    "m,se": {
        "NUMPY_VISUALIZATION": {
            "numpy.mean": 1.0
        }
    },
    "years": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.arange": 1.0
        }
    },
    "oil": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.log": 1.0
        }
    },
    "snp": {
        "STRUCTURED_DATA_VISUALIZATION_2": {
            "numpy.log": 1.0
        }
    },
    "time_steps": {
        "DEEP_NEURAL_NETWORKS": {
            "numpy.linspace": 1.0
        }
    },
    "false_positive_rate,recall,thresholds": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.metrics.roc_curve": 1.0
        }
    },
    "self._table": {
        "CS771": {
            "numpy.zeros": 1.0
        }
    },
    "self._learning_rates": {
        "CS771": {
            "numpy.ones": 1.0
        }
    },
    "nonzeroy": {
        "SCIKIT_LEARN": {
            "numpy.array": 1.0
        }
    },
    "nonzerox": {
        "SCIKIT_LEARN": {
            "numpy.array": 1.0
        }
    },
    "hist_features": {
        "SCIKIT_LEARN": {
            "numpy.concatenate": 1.0
        }
    },
    "heat": {
        "SCIKIT_LEARN": {
            "numpy.zeros_like": 1.0
        }
    },
    "heatmap": {
        "SCIKIT_LEARN": {
            "numpy.clip": 1.0
        }
    },
    "hog_features": {
        "SCIKIT_LEARN": {
            "numpy.ravel": 0.5,
            "numpy.hstack": 0.5
        }
    },
    "imcopy": {
        "SCIKIT_LEARN": {
            "numpy.copy": 1.0
        }
    },
    "else:feature_image": {
        "SCIKIT_LEARN": {
            "numpy.copy": 1.0
        }
    },
    "draw_image": {
        "SCIKIT_LEARN": {
            "numpy.copy": 1.0
        }
    },
    "draw_img": {
        "SCIKIT_LEARN": {
            "numpy.copy": 1.0
        }
    },
    "img_copy": {
        "SCIKIT_LEARN": {
            "numpy.copy": 1.0
        },
        "STRUCTURED_DATA": {
            "numpy.copy": 1.0
        }
    },
    "channel1_hist": {
        "SCIKIT_LEARN": {
            "numpy.histogram": 1.0
        }
    },
    "channel2_hist": {
        "SCIKIT_LEARN": {
            "numpy.histogram": 1.0
        }
    },
    "channel3_hist": {
        "SCIKIT_LEARN": {
            "numpy.histogram": 1.0
        }
    },
    "car_ind": {
        "SCIKIT_LEARN": {
            "numpy.random.randint": 1.0
        }
    },
    "notcar_ind": {
        "SCIKIT_LEARN": {
            "numpy.random.randint": 1.0
        }
    },
    "rand_state": {
        "SCIKIT_LEARN": {
            "numpy.random.randint": 1.0
        }
    },
    "svc": {
        "SCIKIT_LEARN": {
            "sklearn.svm.LinearSVC": 1.0
        },
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "sklearn.svm.SVC": 1.0
        },
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.svm.SVC": 1.0
        }
    },
    "X_scaler": {
        "SCIKIT_LEARN": {
            "sklearn.preprocessing.StandardScaler": 1.0
        }
    },
    "X_train,X_held_out,y_train,y_held_out,indices_train,indices_test": {
        "NUMPY_VISUALIZATION": {
            "sklearn.model_selection.train_test_split": 1.0
        }
    },
    "lik_model": {
        "NUMPY_VISUALIZATION": {
            "scipy.optimize.minimize": 1.0
        }
    },
    "jHistory": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.empty": 1.0
        }
    },
    "nopunc": {
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "re.sub": 1.0
        }
    },
    "nb": {
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "sklearn.naive_bayes.BernoulliNB": 1.0
        }
    },
    "d_tree": {
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "sklearn.tree.DecisionTreeClassifier": 1.0
        }
    },
    "accuracies_mean": {
        "CS771": {
            "numpy.array": 1.0
        }
    },
    "accuracies_std": {
        "CS771": {
            "numpy.array": 1.0
        }
    },
    "X_train_cycle": {
        "CS771": {
            "numpy.concatenate": 1.0
        }
    },
    "y_train_cycle": {
        "CS771": {
            "numpy.concatenate": 1.0
        }
    },
    "num_correct": {
        "CS771": {
            "numpy.sum": 1.0
        }
    },
    "X_train_folds": {
        "CS771": {
            "numpy.array_split": 1.0
        }
    },
    "y_train_folds": {
        "CS771": {
            "numpy.array_split": 1.0
        }
    },
    "submission.total_cases": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.concatenate": 1.0
        }
    },
    "lassoreg": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.linear_model.Lasso": 1.0
        }
    },
    "lreg": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.linear_model.LinearRegression": 1.0
        }
    },
    "logregW": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.linear_model.LogisticRegression": 1.0
        }
    },
    "linear": {
        "NUMPY_VISUALIZATION": {
            "sklearn.linear_model.LinearRegression": 1.0
        }
    },
    "gdbt": {
        "NUMPY_VISUALIZATION": {
            "sklearn.ensemble.GradientBoostingRegressor": 1.0
        }
    },
    "Nt1t0": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.array": 1.0
        }
    },
    "Ntw": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.zeros": 1.0
        }
    },
    "indexes_child": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.argmax": 1.0
        }
    },
    "context_lengths": {
        "DEEP_NEURAL_NETWORKS": {
            "numpy.array": 1.0
        }
    },
    "l1_par_range": {
        "TENSOR_FLOW": {
            "numpy.sqrt": 1.0
        }
    },
    "l2_par_range": {
        "TENSOR_FLOW": {
            "numpy.sqrt": 1.0
        }
    },
    "y_right": {
        "NUMPY_VISUALIZATION": {
            "numpy.array": 1.0
        }
    },
    "y2_correct": {
        "NUMPY_VISUALIZATION": {
            "numpy.array": 1.0
        }
    },
    "average_length": {
        "CS771": {
            "numpy.mean": 1.0
        }
    },
    "hilbert": {
        "SCIKIT_LEARN": {
            "numpy.imag": 1.0
        }
    },
    "p_test": {
        "SCIKIT_LEARN": {
            "numpy.array": 1.0
        }
    },
    "q_test": {
        "SCIKIT_LEARN": {
            "numpy.array": 1.0
        }
    },
    "ba_deg_distr": {
        "SCIKIT_LEARN": {
            "numpy.array": 1.0
        }
    },
    "importnumpyasnpadjacency": {
        "SCIKIT_LEARN": {
            "numpy.load": 1.0
        }
    },
    "full_sites_sparse": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "scipy.sparse.csr_matrix": 1.0
        }
    },
    "img_model": {
        "STRUCTURED_DATA": {
            "numpy.reshape": 1.0
        }
    },
    "img_copy_1": {
        "STRUCTURED_DATA": {
            "numpy.copy": 1.0
        }
    },
    "xfit": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.linspace": 1.0
        }
    },
    "Y,X": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "numpy.meshgrid": 1.0
        }
    },
    "faces": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.datasets.fetch_lfw_people": 1.0
        }
    },
    "Xtrain,Xtest,ytrain,ytest": {
        "SCIKIT_LEARN_VISUALIZATION": {
            "sklearn.model_selection.train_test_split": 1.0
        }
    },
    "similarity_matrix": {
        "STRUCTURED_DATA": {
            "numpy.zeros": 1.0
        }
    },
    "validation_accuracy": {
        "CS771": {
            "numpy.mean": 1.0
        }
    },
    "x_grid": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.linspace": 1.0
        }
    },
    "abd": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "sklearn.ensemble.AdaBoostClassifier": 0.5,
            "sklearn.tree.DecisionTreeClassifier": 0.5
        }
    },
    "hits": {
        "SCIKIT_LEARN_WITH_NATURAL_LANGUAGE_PROCESSING": {
            "numpy.sum": 1.0
        }
    },
    "old_windowed_buf": {
        "NUMPY_VISUALIZATION": {
            "numpy.zeros": 1.0
        }
    },
    "beat_sequence": {
        "NUMPY_VISUALIZATION": {
            "numpy.zeros": 1.0
        }
    },
    "data_new": {
        "NUMPY_VISUALIZATION": {
            "numpy.zeros": 0.14285714285714285,
            "numpy.empty": 0.42857142857142855,
            "numpy.append": 0.42857142857142855
        }
    },
    "frame_sizes": {
        "NUMPY_VISUALIZATION": {
            "numpy.zeros": 1.0
        }
    },
    "frame_temp2": {
        "NUMPY_VISUALIZATION": {
            "numpy.zeros": 1.0
        }
    },
    "pitch": {
        "NUMPY_VISUALIZATION": {
            "numpy.zeros": 1.0
        }
    },
    "outw": {
        "NUMPY_VISUALIZATION": {
            "numpy.empty": 0.5,
            "numpy.append": 0.5
        }
    },
    "clusters[str(i)]": {
        "NUMPY_VISUALIZATION": {
            "numpy.flatnonzero": 1.0
        }
    },
    "pitch[0]": {
        "NUMPY_VISUALIZATION": {
            "numpy.argmax": 1.0
        }
    },
    "pitch[n]": {
        "NUMPY_VISUALIZATION": {
            "numpy.argmax": 1.0
        }
    },
    "data[len(data)-end_size:len(data)]*": {
        "NUMPY_VISUALIZATION": {
            "numpy.linspace": 1.0
        }
    },
    "data[:end_size]*": {
        "NUMPY_VISUALIZATION": {
            "numpy.linspace": 1.0
        }
    },
    "steps_in": {
        "NUMPY_VISUALIZATION": {
            "numpy.diff": 1.0
        }
    },
    "steps_out": {
        "NUMPY_VISUALIZATION": {
            "numpy.diff": 1.0
        }
    },
    "buf": {
        "NUMPY_VISUALIZATION": {
            "numpy.append": 0.5,
            "numpy.fft.irfft": 0.5
        }
    },
    "frames": {
        "NUMPY_VISUALIZATION": {
            "numpy.append": 0.6666666666666666,
            "numpy.unique": 0.3333333333333333
        }
    },
    "temp_frame": {
        "NUMPY_VISUALIZATION": {
            "numpy.pad": 1.0
        }
    },
    "iflen(cluster_dict[str(labels1[i])])": {
        "NUMPY_VISUALIZATION": {
            "numpy.random.choice": 1.0
        }
    },
    "ph": {
        "NUMPY_VISUALIZATION": {
            "numpy.random.uniform": 1.0
        }
    },
    "verts": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "numpy.append": 0.3333333333333333,
            "numpy.column_stack": 0.6666666666666666
        }
    },
    "projects": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "collections.defaultdict": 1.0
        }
    },
    "existing_projects": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "collections.defaultdict": 1.0
        }
    },
    "error_occurences[lang]": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "collections.defaultdict": 1.0
        }
    },
    "normalized_error_codes": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "collections.defaultdict": 1.0
        }
    },
    "plot_signifs": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "collections.defaultdict": 1.0
        }
    },
    "Project": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "collections.namedtuple": 1.0
        }
    },
    "target_signif[bg_lang]": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "collections.OrderedDict": 1.0
        }
    },
    "existing_projects[TARGET_LANGUAGE]": {
        "STRUCTURED_DATA_VISUALIZATION": {
            "random.sample": 1.0
        }
    },
    "buffer": {
        "TENSOR_FLOW": {
            "collections.deque": 1.0
        }
    },
    "embedding_size": {
        "TENSOR_FLOW": {
            "numpy.array": 1.0
        }
    }
}
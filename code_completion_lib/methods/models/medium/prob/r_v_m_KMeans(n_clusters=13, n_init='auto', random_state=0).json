{
    "everything": {
        "CLUSTER_0": {
            "numpy.fromfile": 1.0
        }
    },
    "scaler": {
        "CLUSTER_5": {
            "sklearn.preprocessing.MinMaxScaler": 1.0
        }
    },
    "B": {
        "CLUSTER_4": {
            "math.ceil": 1.0
        },
        "CLUSTER_10": {
            "numpy.imag": 1.0
        }
    },
    "training_loss": {
        "CLUSTER_0": {
            "math.sqrt": 1.0
        }
    },
    "durations": {
        "CLUSTER_11": {
            "pandas.concat": 1.0
        }
    },
    "fig": {
        "CLUSTER_8": {
            "matplotlib.pyplot.gcf": 0.4,
            "matplotlib.pyplot.figure": 0.6
        },
        "CLUSTER_11": {
            "matplotlib.pyplot.figure": 1.0
        },
        "CLUSTER_5": {
            "matplotlib.pyplot.figure": 1.0
        }
    },
    "fig,ax": {
        "CLUSTER_8": {
            "matplotlib.pyplot.subplots": 1.0
        },
        "CLUSTER_3": {
            "matplotlib.pyplot.subplots": 1.0
        },
        "CLUSTER_2": {
            "matplotlib.pyplot.subplots": 1.0
        },
        "CLUSTER_11": {
            "matplotlib.pyplot.subplots": 1.0
        },
        "CLUSTER_5": {
            "matplotlib.pyplot.subplots": 1.0
        },
        "CLUSTER_0": {
            "matplotlib.pyplot.subplots": 1.0
        }
    },
    "flist": {
        "CLUSTER_11": {
            "os.listdir": 1.0
        }
    },
    "ifpxy": {
        "CLUSTER_8": {
            "math.log": 1.0
        }
    },
    "movies_list": {
        "CLUSTER_1": {
            "pandas.merge": 0.5454545454545454,
            "pandas.concat": 0.2727272727272727,
            "pandas.pivot_table": 0.18181818181818182
        }
    },
    "X_train,X_test,y_train,y_test": {
        "CLUSTER_5": {
            "sklearn.model_selection.train_test_split": 1.0
        },
        "CLUSTER_11": {
            "sklearn.model_selection.train_test_split": 1.0
        },
        "CLUSTER_0": {
            "sklearn.model_selection.train_test_split": 1.0
        },
        "CLUSTER_9": {
            "sklearn.model_selection.train_test_split": 1.0
        }
    },
    "std": {
        "CLUSTER_1": {
            "numpy.std": 1.0
        }
    },
    "lin_reg_2": {
        "CLUSTER_5": {
            "sklearn.linear_model.LinearRegression": 1.0
        }
    },
    "score": {
        "CLUSTER_5": {
            "sklearn.model_selection.cross_val_score": 0.5,
            "sklearn.metrics.accuracy_score": 0.5
        }
    },
    "pca": {
        "CLUSTER_0": {
            "sklearn.decomposition.PCA": 1.0
        },
        "CLUSTER_5": {
            "sklearn.decomposition.PCA": 1.0
        }
    },
    "outlier_data['date']": {
        "CLUSTER_4": {
            "pandas.to_datetime": 1.0
        }
    },
    "df_l": {
        "CLUSTER_3": {
            "pandas.read_csv": 1.0
        }
    },
    "axes": {
        "CLUSTER_9": {
            "matplotlib.pyplot.gca": 1.0
        }
    },
    "df": {
        "CLUSTER_3": {
            "pandas.DataFrame": 0.5,
            "pandas.concat": 0.5
        },
        "CLUSTER_5": {
            "pandas.concat": 0.6,
            "pandas.read_csv": 0.2,
            "datetime.date": 0.2
        },
        "CLUSTER_2": {
            "pandas.read_csv": 0.5,
            "pandas.DataFrame": 0.5
        },
        "CLUSTER_4": {
            "pandas.read_json": 1.0
        }
    },
    "lm_tp": {
        "CLUSTER_4": {
            "sklearn.linear_model.LinearRegression": 1.0
        }
    },
    "features": {
        "CLUSTER_7": {
            "numpy.array": 1.0
        }
    },
    "delta": {
        "CLUSTER_11": {
            "numpy.array": 1.0
        }
    },
    "writers_list": {
        "CLUSTER_1": {
            "pandas.read_sql": 0.3333333333333333,
            "pandas.merge": 0.3333333333333333,
            "pandas.read_csv": 0.3333333333333333
        }
    },
    "fold": {
        "CLUSTER_1": {
            "sklearn.model_selection.StratifiedKFold": 1.0
        }
    },
    "G": {
        "CLUSTER_10": {
            "numpy.real": 1.0
        }
    },
    "rf": {
        "CLUSTER_5": {
            "sklearn.ensemble.RandomForestClassifier": 1.0
        }
    },
    "fig,axes": {
        "CLUSTER_3": {
            "matplotlib.pyplot.subplots": 1.0
        },
        "CLUSTER_11": {
            "matplotlib.pyplot.subplots": 1.0
        }
    },
    "featureScores": {
        "CLUSTER_9": {
            "pandas.concat": 1.0
        }
    },
    "tr_finite": {
        "CLUSTER_11": {
            "matplotlib.pyplot.plot": 1.0
        }
    },
    "roc_auc[\"macro\"]": {
        "CLUSTER_0": {
            "sklearn.metrics.auc": 1.0
        }
    },
    "J2": {
        "CLUSTER_10": {
            "numpy.hstack": 1.0
        }
    },
    "writer_ratings": {
        "CLUSTER_1": {
            "pandas.read_sql": 0.5,
            "pandas.read_csv": 0.5
        }
    },
    "action": {
        "CLUSTER_10": {
            "numpy.argmax": 1.0
        }
    },
    "B_2line": {
        "CLUSTER_10": {
            "numpy.zeros": 1.0
        }
    },
    "cm": {
        "CLUSTER_5": {
            "sklearn.metrics.confusion_matrix": 1.0
        }
    },
    "cf": {
        "CLUSTER_10": {
            "numpy.array": 1.0
        }
    },
    "french_words_counter": {
        "CLUSTER_7": {
            "collections.Counter": 1.0
        }
    },
    "trainX,testX,trainy,testy": {
        "CLUSTER_5": {
            "sklearn.model_selection.train_test_split": 1.0
        }
    },
    "df_r": {
        "CLUSTER_3": {
            "pandas.read_csv": 1.0
        }
    },
    "poly_reg": {
        "CLUSTER_5": {
            "sklearn.preprocessing.PolynomialFeatures": 1.0
        }
    },
    "data2": {
        "CLUSTER_5": {
            "pandas.read_csv": 1.0
        }
    },
    "size": {
        "CLUSTER_11": {
            "numpy.prod": 1.0
        }
    },
    "freqReviewDf": {
        "CLUSTER_8": {
            "pandas.DataFrame": 1.0
        }
    },
    "self.all_weights": {
        "CLUSTER_11": {
            "numpy.frombuffer": 1.0
        }
    },
    "accuracies": {
        "CLUSTER_5": {
            "sklearn.model_selection.cross_val_score": 1.0
        }
    },
    "pmi": {
        "CLUSTER_8": {
            "math.log": 1.0
        }
    },
    "hotelDfRaw": {
        "CLUSTER_8": {
            "pandas.read_csv": 1.0
        }
    },
    "fpr[\"micro\"],tpr[\"micro\"],_": {
        "CLUSTER_0": {
            "sklearn.metrics.roc_curve": 1.0
        }
    },
    "figsize": {
        "CLUSTER_11": {
            "numpy.array": 1.0
        }
    },
    "data": {
        "CLUSTER_11": {
            "matplotlib.pyplot.imread": 1.0
        },
        "CLUSTER_3": {
            "pandas.read_csv": 1.0
        },
        "CLUSTER_5": {
            "pandas.read_csv": 0.5,
            "numpy.array": 0.25,
            "pandas.DataFrame": 0.25
        },
        "CLUSTER_1": {
            "pandas.DataFrame": 0.6666666666666666,
            "pandas.read_csv": 0.3333333333333333
        },
        "CLUSTER_9": {
            "pandas.read_csv": 1.0
        },
        "CLUSTER_8": {
            "pandas.DataFrame": 1.0
        }
    },
    "sstot": {
        "CLUSTER_0": {
            "numpy.sum": 1.0
        }
    },
    "pmidf": {
        "CLUSTER_8": {
            "pandas.DataFrame": 1.0
        }
    },
    "os.chdir(default_path)countries": {
        "CLUSTER_4": {
            "os.listdir": 1.0
        }
    },
    "food_info": {
        "CLUSTER_4": {
            "pandas.read_csv": 0.5,
            "pandas.DataFrame": 0.5
        }
    },
    "DQ": {
        "CLUSTER_10": {
            "numpy.zeros_like": 1.0
        }
    },
    "array": {
        "CLUSTER_0": {
            "numpy.load": 1.0
        }
    },
    "r": {
        "CLUSTER_4": {
            "requests.get": 1.0
        }
    },
    "b": {
        "CLUSTER_10": {
            "numpy.imag": 1.0
        }
    },
    "x_values": {
        "CLUSTER_9": {
            "numpy.linspace": 1.0
        }
    },
    "plot_list": {
        "CLUSTER_1": {
            "pandas.read_csv": 0.5,
            "pandas.read_sql": 0.5
        }
    },
    "channel_states": {
        "CLUSTER_3": {
            "numpy.zeros": 1.0
        }
    },
    "gross_list": {
        "CLUSTER_1": {
            "pandas.read_csv": 0.3333333333333333,
            "pandas.read_sql": 0.3333333333333333,
            "pandas.pivot_table": 0.3333333333333333
        }
    },
    "au_1062bio": {
        "CLUSTER_0": {
            "pandas.DataFrame": 1.0
        }
    },
    "g": {
        "CLUSTER_8": {
            "seaborn.clustermap": 1.0
        },
        "CLUSTER_10": {
            "numpy.real": 1.0
        }
    },
    "diff": {
        "CLUSTER_9": {
            "numpy.asarray": 1.0
        }
    },
    "frame": {
        "CLUSTER_11": {
            "pandas.DataFrame": 1.0
        }
    },
    "yhat": {
        "CLUSTER_0": {
            "numpy.argmax": 1.0
        }
    },
    "alarms_over_1_min": {
        "CLUSTER_11": {
            "pandas.DataFrame": 1.0
        }
    },
    "stamp": {
        "CLUSTER_11": {
            "numpy.array": 1.0
        }
    },
    "tic": {
        "CLUSTER_10": {
            "time.time": 1.0
        }
    },
    "var": {
        "CLUSTER_0": {
            "numpy.cumsum": 1.0
        }
    },
    "scale": {
        "CLUSTER_0": {
            "sklearn.preprocessing.StandardScaler": 1.0
        }
    },
    "ax": {
        "CLUSTER_5": {
            "matplotlib.pyplot.subplot": 0.3333333333333333,
            "matplotlib.pyplot.axes": 0.6666666666666666
        },
        "CLUSTER_11": {
            "matplotlib.pyplot.gca": 0.5,
            "matplotlib.pyplot.subplot": 0.5
        }
    },
    "X_test": {
        "CLUSTER_5": {
            "numpy.reshape": 0.5,
            "numpy.array": 0.5
        },
        "CLUSTER_10": {
            "numpy.reshape": 1.0
        }
    },
    "fpr,tpr,thresholds": {
        "CLUSTER_0": {
            "sklearn.metrics.roc_curve": 1.0
        }
    },
    "start": {
        "CLUSTER_5": {
            "numpy.datetime64": 1.0
        },
        "CLUSTER_12": {
            "datetime.datetime.now": 1.0
        }
    },
    "outlier_data['residual'][i]": {
        "CLUSTER_4": {
            "numpy.absolute": 1.0
        }
    },
    "pred": {
        "CLUSTER_0": {
            "numpy.argmax": 1.0
        }
    },
    "resampled_df": {
        "CLUSTER_5": {
            "pandas.concat": 1.0
        }
    },
    "pmineglist": {
        "CLUSTER_8": {
            "pandas.DataFrame": 1.0
        }
    },
    "big_mat2": {
        "CLUSTER_6": {
            "numpy.ones": 1.0
        }
    },
    "X": {
        "CLUSTER_8": {
            "pandas.get_dummies": 1.0
        }
    },
    "price": {
        "CLUSTER_4": {
            "numpy.where": 1.0
        }
    },
    "H": {
        "CLUSTER_10": {
            "numpy.zeros": 1.0
        }
    },
    "sentences": {
        "CLUSTER_7": {
            "numpy.array": 1.0
        }
    },
    "per_school_summary_df[\"SpendingRanges(PerStudent)\"]": {
        "CLUSTER_3": {
            "pandas.cut": 1.0
        }
    },
    "mismP": {
        "CLUSTER_10": {
            "numpy.append": 0.6666666666666666,
            "numpy.array": 0.3333333333333333
        }
    },
    "y": {
        "CLUSTER_11": {
            "numpy.array": 1.0
        },
        "CLUSTER_10": {
            "numpy.sin": 1.0
        }
    },
    "im": {
        "CLUSTER_11": {
            "numpy.array": 1.0
        }
    },
    "images": {
        "CLUSTER_0": {
            "numpy.transpose": 0.5,
            "numpy.reshape": 0.5
        }
    },
    "model": {
        "CLUSTER_5": {
            "sklearn.linear_model.LogisticRegression": 1.0
        },
        "CLUSTER_1": {
            "sklearn.tree.DecisionTreeRegressor": 0.5,
            "sklearn.ensemble.RandomForestRegressor": 0.5
        },
        "CLUSTER_9": {
            "sklearn.ensemble.ExtraTreesClassifier": 1.0
        }
    },
    "small_df": {
        "CLUSTER_3": {
            "pandas.concat": 1.0
        }
    },
    "response": {
        "CLUSTER_2": {
            "requests.get": 1.0
        }
    },
    "plt.imshow(output_weight.reshape([2,20]),cmap": {
        "CLUSTER_7": {
            "matplotlib.pyplot.get_cmap": 1.0
        }
    },
    "test_acc": {
        "CLUSTER_7": {
            "numpy.mean": 1.0
        }
    },
    "f3,axs3": {
        "CLUSTER_5": {
            "matplotlib.pyplot.subplots": 1.0
        }
    },
    "X_TF_train": {
        "CLUSTER_0": {
            "numpy.array": 1.0
        }
    },
    "returns": {
        "CLUSTER_3": {
            "numpy.dot": 1.0
        }
    },
    "indices": {
        "CLUSTER_9": {
            "numpy.argsort": 1.0
        },
        "CLUSTER_1": {
            "numpy.argsort": 1.0
        }
    },
    "zeros": {
        "CLUSTER_3": {
            "numpy.zeros": 1.0
        }
    },
    "all_durations": {
        "CLUSTER_11": {
            "pandas.concat": 1.0
        }
    },
    "mdl": {
        "CLUSTER_2": {
            "sklearn.tree.DecisionTreeClassifier": 1.0
        }
    },
    "anddirty_data['time'][i]<": {
        "CLUSTER_4": {
            "datetime.timedelta": 1.0
        }
    },
    "dirty_data['time']": {
        "CLUSTER_4": {
            "pandas.to_timedelta": 1.0
        }
    },
    "numbered": {
        "CLUSTER_11": {
            "pandas.Series": 1.0
        }
    },
    "summary": {
        "CLUSTER_9": {
            "pandas.DataFrame": 1.0
        }
    },
    "writer": {
        "CLUSTER_11": {
            "pandas.ExcelWriter": 1.0
        }
    },
    "alarm_settings_2[recording]": {
        "CLUSTER_11": {
            "pandas.concat": 1.0
        }
    },
    "skf": {
        "CLUSTER_0": {
            "sklearn.model_selection.StratifiedKFold": 1.0
        }
    },
    "emoji_pattern": {
        "CLUSTER_4": {
            "re.compile": 1.0
        }
    },
    "y_train": {
        "CLUSTER_0": {
            "numpy.array": 1.0
        }
    },
    "B_line_inv": {
        "CLUSTER_10": {
            "numpy.linalg.inv": 1.0
        }
    },
    "df_json": {
        "CLUSTER_3": {
            "pandas.read_json": 1.0
        }
    },
    "kf": {
        "CLUSTER_1": {
            "sklearn.model_selection.KFold": 1.0
        }
    },
    "correct_scores": {
        "CLUSTER_10": {
            "numpy.asarray": 1.0
        }
    },
    "budget_df['release_date']": {
        "CLUSTER_11": {
            "pandas.to_datetime": 1.0
        }
    },
    "data1": {
        "CLUSTER_5": {
            "pandas.read_csv": 1.0
        }
    },
    "sc_X": {
        "CLUSTER_5": {
            "sklearn.preprocessing.StandardScaler": 1.0
        }
    },
    "mpaa_list": {
        "CLUSTER_1": {
            "pandas.read_sql": 0.5,
            "pandas.read_csv": 0.5
        }
    },
    "df_train": {
        "CLUSTER_5": {
            "pandas.read_csv": 1.0
        }
    },
    "xtrain,xtest,ytrain,ytest": {
        "CLUSTER_5": {
            "sklearn.model_selection.train_test_split": 1.0
        }
    },
    "train": {
        "CLUSTER_1": {
            "pandas.read_csv": 1.0
        },
        "CLUSTER_5": {
            "pandas.read_csv": 1.0
        }
    },
    "training_data_len": {
        "CLUSTER_5": {
            "math.ceil": 1.0
        }
    },
    "Y": {
        "CLUSTER_10": {
            "numpy.zeros": 1.0
        }
    },
    "cf_a": {
        "CLUSTER_10": {
            "numpy.array": 1.0
        }
    },
    "bins": {
        "CLUSTER_3": {
            "numpy.linspace": 1.0
        }
    },
    "self.key_pts_frame": {
        "CLUSTER_11": {
            "pandas.read_csv": 1.0
        }
    },
    "v": {
        "CLUSTER_5": {
            "pandas.concat": 1.0
        }
    },
    "stats_all": {
        "CLUSTER_11": {
            "pandas.concat": 1.0
        }
    },
    "miScoredf": {
        "CLUSTER_8": {
            "pandas.DataFrame": 1.0
        }
    },
    "df_clean[\"date\"]": {
        "CLUSTER_2": {
            "pandas.to_datetime": 1.0
        }
    },
    "actors": {
        "CLUSTER_1": {
            "pandas.read_csv": 0.5,
            "pandas.read_sql": 0.5
        }
    },
    "DV": {
        "CLUSTER_10": {
            "numpy.dot": 1.0
        }
    },
    "submission": {
        "CLUSTER_5": {
            "pandas.read_csv": 1.0
        }
    },
    "f,ax": {
        "CLUSTER_8": {
            "matplotlib.pyplot.subplots": 1.0
        }
    },
    "counter": {
        "CLUSTER_8": {
            "collections.Counter": 1.0
        }
    },
    "f_test": {
        "CLUSTER_0": {
            "numpy.var": 1.0
        }
    },
    "X,y": {
        "CLUSTER_8": {
            "sklearn.datasets.make_circles": 1.0
        }
    },
    "AUC": {
        "CLUSTER_0": {
            "scipy.integrate.simps": 1.0
        }
    },
    "DP": {
        "CLUSTER_10": {
            "numpy.zeros_like": 1.0
        }
    },
    "food_review_total": {
        "CLUSTER_4": {
            "pandas.concat": 1.0
        }
    },
    "J1": {
        "CLUSTER_10": {
            "numpy.hstack": 1.0
        }
    },
    "y_test": {
        "CLUSTER_0": {
            "numpy.array": 1.0
        }
    },
    "X_std_test": {
        "CLUSTER_5": {
            "sklearn.preprocessing.StandardScaler": 1.0
        }
    },
    "directors_list": {
        "CLUSTER_1": {
            "pandas.read_sql": 0.3333333333333333,
            "pandas.merge": 0.3333333333333333,
            "pandas.read_csv": 0.3333333333333333
        }
    },
    "a1": {
        "CLUSTER_3": {
            "numpy.array": 1.0
        }
    },
    "tempCounter": {
        "CLUSTER_8": {
            "collections.Counter": 1.0
        }
    },
    "X_test_cnn": {
        "CLUSTER_0": {
            "numpy.expand_dims": 1.0
        }
    },
    "N": {
        "CLUSTER_10": {
            "numpy.zeros": 1.0
        }
    },
    "batch_y": {
        "CLUSTER_7": {
            "numpy.array": 1.0
        }
    },
    "clf": {
        "CLUSTER_0": {
            "sklearn.svm.LinearSVC": 0.6666666666666666,
            "sklearn.svm.SVR": 0.3333333333333333
        }
    },
    "mlp": {
        "CLUSTER_0": {
            "sklearn.neural_network.MLPRegressor": 1.0
        }
    },
    "max_sharpe[date]": {
        "CLUSTER_3": {
            "numpy.argmax": 1.0
        }
    },
    "clinical_details": {
        "CLUSTER_11": {
            "pandas.read_excel": 1.0
        }
    },
    "mismQ": {
        "CLUSTER_10": {
            "numpy.append": 0.6666666666666666,
            "numpy.array": 0.3333333333333333
        }
    },
    "a": {
        "CLUSTER_11": {
            "numpy.array": 1.0
        },
        "CLUSTER_4": {
            "numpy.array": 1.0
        },
        "CLUSTER_10": {
            "numpy.array": 1.0
        }
    },
    "pmi_dist_matrix": {
        "CLUSTER_5": {
            "pandas.DataFrame": 1.0
        }
    },
    "dinner_prices": {
        "CLUSTER_4": {
            "numpy.linalg.solve": 1.0
        }
    },
    "model_tp": {
        "CLUSTER_4": {
            "sklearn.linear_model.LinearRegression": 1.0
        }
    },
    "actor_ratings": {
        "CLUSTER_1": {
            "pandas.read_sql": 1.0
        }
    },
    "normalSample": {
        "CLUSTER_5": {
            "numpy.insert": 1.0
        }
    },
    "cities": {
        "CLUSTER_4": {
            "os.listdir": 1.0
        }
    },
    "Q1": {
        "CLUSTER_4": {
            "numpy.percentile": 1.0
        }
    },
    "mean_tpr": {
        "CLUSTER_0": {
            "numpy.zeros_like": 1.0
        }
    },
    "key_pts_copy": {
        "CLUSTER_11": {
            "numpy.copy": 1.0
        }
    },
    "x_train": {
        "CLUSTER_5": {
            "numpy.reshape": 1.0
        }
    },
    "x": {
        "CLUSTER_0": {
            "numpy.load": 1.0
        },
        "CLUSTER_10": {
            "numpy.linspace": 1.0
        },
        "CLUSTER_8": {
            "matplotlib.pyplot.figure": 1.0
        }
    },
    "ones": {
        "CLUSTER_3": {
            "numpy.ones": 1.0
        }
    },
    "big_mat1": {
        "CLUSTER_6": {
            "numpy.ones": 1.0
        }
    },
    "dataset": {
        "CLUSTER_5": {
            "pandas.read_csv": 1.0
        }
    },
    "fig1,ax1": {
        "CLUSTER_0": {
            "matplotlib.pyplot.subplots": 1.0
        }
    },
    "mean_image": {
        "CLUSTER_10": {
            "numpy.mean": 1.0
        }
    },
    "rmse": {
        "CLUSTER_5": {
            "numpy.sqrt": 1.0
        }
    },
    "dataframe": {
        "CLUSTER_9": {
            "pandas.read_csv": 1.0
        }
    },
    "alarm_t": {
        "CLUSTER_11": {
            "pandas.DataFrame": 1.0
        }
    },
    "x_train,y_train": {
        "CLUSTER_5": {
            "numpy.array": 1.0
        }
    },
    "error": {
        "CLUSTER_0": {
            "numpy.var": 1.0
        }
    },
    "J": {
        "CLUSTER_10": {
            "numpy.linalg.inv": 1.0
        }
    },
    "roc_auc+": {
        "CLUSTER_0": {
            "sklearn.metrics.auc": 1.0
        }
    },
    "class_names": {
        "CLUSTER_0": {
            "os.listdir": 1.0
        }
    },
    "labels": {
        "CLUSTER_0": {
            "numpy.fromfile": 1.0
        }
    },
    "x_test": {
        "CLUSTER_5": {
            "numpy.array": 0.5,
            "numpy.reshape": 0.5
        }
    },
    "B_line": {
        "CLUSTER_10": {
            "numpy.zeros": 1.0
        }
    },
    "df_raw": {
        "CLUSTER_9": {
            "pandas.read_excel": 0.5,
            "pandas.get_dummies": 0.5
        }
    },
    "tij": {
        "CLUSTER_10": {
            "numpy.zeros": 1.0
        }
    },
    "dummy_variable_1": {
        "CLUSTER_3": {
            "pandas.get_dummies": 1.0
        }
    },
    "classes": {
        "CLUSTER_5": {
            "numpy.unique": 1.0
        },
        "CLUSTER_0": {
            "numpy.unique": 1.0
        }
    },
    "self.fires": {
        "CLUSTER_10": {
            "numpy.zeros": 1.0
        }
    },
    "tjj": {
        "CLUSTER_10": {
            "numpy.zeros": 1.0
        }
    },
    "tiny_image": {
        "CLUSTER_10": {
            "numpy.array": 1.0
        }
    },
    "pca_ll_dist_matrix": {
        "CLUSTER_5": {
            "pandas.DataFrame": 1.0
        }
    },
    "y_true,y_pred": {
        "CLUSTER_0": {
            "numpy.array": 1.0
        }
    },
    "food_info_total": {
        "CLUSTER_4": {
            "pandas.DataFrame": 1.0
        }
    },
    "A": {
        "CLUSTER_4": {
            "math.ceil": 1.0
        }
    },
    "movie_ratings": {
        "CLUSTER_1": {
            "pandas.read_csv": 1.0
        }
    },
    "v_abs_mean": {
        "CLUSTER_3": {
            "numpy.mean": 1.0
        }
    },
    "tii": {
        "CLUSTER_10": {
            "numpy.zeros": 1.0
        }
    },
    "imageTest": {
        "CLUSTER_0": {
            "numpy.array": 1.0
        }
    },
    "pmiposlist": {
        "CLUSTER_8": {
            "pandas.DataFrame": 1.0
        }
    },
    "res": {
        "CLUSTER_0": {
            "numpy.argmax": 1.0
        }
    },
    "start_time": {
        "CLUSTER_10": {
            "time.time": 1.0
        }
    },
    "dtree": {
        "CLUSTER_9": {
            "sklearn.tree.DecisionTreeClassifier": 1.0
        }
    },
    "fires": {
        "CLUSTER_10": {
            "numpy.zeros": 1.0
        }
    },
    "X_std": {
        "CLUSTER_5": {
            "sklearn.preprocessing.StandardScaler": 1.0
        }
    },
    "mask": {
        "CLUSTER_10": {
            "numpy.where": 1.0
        }
    },
    "X_train": {
        "CLUSTER_10": {
            "numpy.reshape": 1.0
        }
    },
    "reloaded_df": {
        "CLUSTER_5": {
            "pandas.read_csv": 1.0
        }
    },
    "dirty_data['order_items'][i]": {
        "CLUSTER_4": {
            "re.sub": 1.0
        }
    },
    "cmap": {
        "CLUSTER_8": {
            "seaborn.cubehelix_palette": 1.0
        }
    },
    "raw_dist_matrix": {
        "CLUSTER_5": {
            "pandas.DataFrame": 1.0
        }
    },
    "X_TF_pred": {
        "CLUSTER_0": {
            "numpy.array": 1.0
        }
    },
    "add_cf": {
        "CLUSTER_10": {
            "numpy.array": 1.0
        }
    },
    "bestfeatures": {
        "CLUSTER_9": {
            "sklearn.feature_selection.SelectKBest": 1.0
        }
    },
    "recording_times_frame": {
        "CLUSTER_11": {
            "pandas.DataFrame": 1.0
        }
    },
    "X_val": {
        "CLUSTER_10": {
            "numpy.reshape": 1.0
        }
    },
    "max_sims": {
        "CLUSTER_5": {
            "collections.Counter": 1.0
        }
    },
    "kmeans": {
        "CLUSTER_5": {
            "sklearn.cluster.KMeans": 1.0
        }
    },
    "alarm_stats_cum_rec": {
        "CLUSTER_11": {
            "pandas.DataFrame": 1.0
        }
    },
    "total_recording_time": {
        "CLUSTER_11": {
            "datetime.timedelta": 1.0
        }
    },
    "sc": {
        "CLUSTER_5": {
            "sklearn.preprocessing.StandardScaler": 1.0
        }
    },
    "train_data": {
        "CLUSTER_8": {
            "pandas.read_csv": 1.0
        }
    },
    "range_arrays": {
        "CLUSTER_3": {
            "numpy.arange": 1.0
        }
    },
    "val_class_names": {
        "CLUSTER_0": {
            "os.listdir": 1.0
        }
    },
    "out_index.append(i)Q1": {
        "CLUSTER_4": {
            "numpy.percentile": 1.0
        }
    },
    "t": {
        "CLUSTER_5": {
            "pandas.concat": 1.0
        }
    },
    "qtable": {
        "CLUSTER_10": {
            "numpy.zeros": 1.0
        }
    },
    "x_train_up": {
        "CLUSTER_0": {
            "numpy.stack": 1.0
        }
    },
    "yhat_cnn": {
        "CLUSTER_0": {
            "numpy.argmax": 1.0
        }
    },
    "budget_list": {
        "CLUSTER_1": {
            "pandas.read_sql": 0.5,
            "pandas.read_csv": 0.5
        }
    },
    "num_complete_minibatches": {
        "CLUSTER_9": {
            "math.floor": 1.0
        }
    },
    "roc_auc[\"micro\"]": {
        "CLUSTER_0": {
            "sklearn.metrics.auc": 1.0
        }
    },
    "Q_Calc": {
        "CLUSTER_10": {
            "numpy.zeros_like": 1.0
        }
    },
    "pca_pmi_dist_matrix": {
        "CLUSTER_5": {
            "pandas.DataFrame": 1.0
        }
    },
    "X_train_cnn": {
        "CLUSTER_0": {
            "numpy.expand_dims": 1.0
        }
    },
    "movies": {
        "CLUSTER_1": {
            "pandas.read_sql": 0.5,
            "pandas.read_csv": 0.5
        }
    },
    "test": {
        "CLUSTER_5": {
            "pandas.read_csv": 1.0
        },
        "CLUSTER_1": {
            "pandas.read_csv": 1.0
        }
    },
    "n": {
        "CLUSTER_10": {
            "numpy.array": 1.0
        }
    },
    "ss": {
        "CLUSTER_5": {
            "pandas.concat": 1.0
        }
    },
    "principalDf": {
        "CLUSTER_0": {
            "pandas.DataFrame": 1.0
        }
    },
    "lunch_prices": {
        "CLUSTER_4": {
            "numpy.linalg.solve": 1.0
        }
    },
    "embedding_matrix": {
        "CLUSTER_1": {
            "numpy.zeros": 1.0
        }
    },
    "missing_data['date']": {
        "CLUSTER_4": {
            "pandas.to_datetime": 1.0
        }
    },
    "df_capacitances": {
        "CLUSTER_3": {
            "pandas.DataFrame": 1.0
        }
    },
    "ys": {
        "CLUSTER_7": {
            "numpy.array": 1.0
        }
    },
    "wine": {
        "CLUSTER_5": {
            "sklearn.datasets.load_wine": 1.0
        }
    },
    "image_copy": {
        "CLUSTER_11": {
            "numpy.copy": 1.0
        }
    },
    "spin": {
        "CLUSTER_4": {
            "random.randint": 1.0
        }
    },
    "total_time": {
        "CLUSTER_10": {
            "time.time": 1.0
        }
    },
    "df_1": {
        "CLUSTER_3": {
            "pandas.DataFrame": 1.0
        }
    },
    "cf1": {
        "CLUSTER_10": {
            "numpy.array": 1.0
        }
    },
    "sample": {
        "CLUSTER_0": {
            "numpy.array": 1.0
        }
    },
    "alarm_stats_cum_total": {
        "CLUSTER_11": {
            "pandas.DataFrame": 1.0
        }
    },
    "frame1": {
        "CLUSTER_7": {
            "matplotlib.pyplot.gca": 1.0
        }
    },
    "sklearn_pca": {
        "CLUSTER_5": {
            "sklearn.decomposition.PCA": 1.0
        }
    },
    "df['horsepower-binned']": {
        "CLUSTER_3": {
            "pandas.cut": 1.0
        }
    },
    "df_test": {
        "CLUSTER_4": {
            "pandas.read_csv": 1.0
        }
    },
    "per_school_summary_df": {
        "CLUSTER_3": {
            "pandas.DataFrame": 1.0
        }
    },
    "weights/": {
        "CLUSTER_3": {
            "numpy.sum": 1.0
        }
    },
    "reading_scores_by_grade": {
        "CLUSTER_3": {
            "pandas.DataFrame": 1.0
        }
    },
    "L": {
        "CLUSTER_10": {
            "numpy.zeros": 1.0
        }
    },
    "food_review_merge": {
        "CLUSTER_4": {
            "pandas.merge": 1.0
        }
    },
    "alarms_over_1_hour": {
        "CLUSTER_11": {
            "pandas.DataFrame": 1.0
        }
    },
    "yhat_mlp": {
        "CLUSTER_0": {
            "numpy.argmax": 1.0
        }
    },
    "mean_fpr": {
        "CLUSTER_0": {
            "numpy.linspace": 1.0
        }
    },
    "x_test_up": {
        "CLUSTER_0": {
            "numpy.stack": 1.0
        }
    },
    "estimator": {
        "CLUSTER_5": {
            "sklearn.linear_model.LinearRegression": 1.0
        }
    },
    "ind": {
        "CLUSTER_0": {
            "numpy.arange": 1.0
        }
    },
    "sample_array": {
        "CLUSTER_3": {
            "numpy.array": 1.0
        }
    },
    "data3": {
        "CLUSTER_5": {
            "pandas.read_csv": 1.0
        }
    },
    "data['dist']": {
        "CLUSTER_8": {
            "numpy.sqrt": 1.0
        }
    },
    "self._data": {
        "CLUSTER_7": {
            "numpy.hstack": 1.0
        }
    },
    "director_ratings": {
        "CLUSTER_1": {
            "pandas.read_csv": 1.0
        }
    },
    "s[\"dW\"+str(l+1)]": {
        "CLUSTER_9": {
            "numpy.zeros_like": 1.0
        }
    },
    "df_food_review": {
        "CLUSTER_4": {
            "pandas.DataFrame": 1.0
        }
    },
    "y_TF_train": {
        "CLUSTER_0": {
            "numpy.array": 1.0
        }
    },
    "class_sort": {
        "CLUSTER_11": {
            "numpy.argsort": 1.0
        }
    },
    "tsne": {
        "CLUSTER_0": {
            "sklearn.manifold.TSNE": 1.0
        }
    },
    "dfcolumns": {
        "CLUSTER_9": {
            "pandas.DataFrame": 1.0
        }
    },
    "random_df": {
        "CLUSTER_8": {
            "pandas.DataFrame": 1.0
        }
    },
    "train_Y": {
        "CLUSTER_5": {
            "numpy.log1p": 1.0
        }
    },
    "budget_df": {
        "CLUSTER_11": {
            "pandas.read_csv": 1.0
        }
    },
    "upperPartSelector": {
        "CLUSTER_5": {
            "numpy.array": 1.0
        }
    },
    "files": {
        "CLUSTER_0": {
            "os.listdir": 1.0
        }
    },
    "genres_list": {
        "CLUSTER_1": {
            "pandas.read_csv": 1.0
        }
    },
    "reviewDf": {
        "CLUSTER_8": {
            "pandas.DataFrame": 1.0
        }
    },
    "a3": {
        "CLUSTER_3": {
            "numpy.array": 1.0
        }
    },
    "v_filtered_mean": {
        "CLUSTER_3": {
            "numpy.mean": 1.0
        }
    },
    "y_TF_pred": {
        "CLUSTER_0": {
            "numpy.array": 1.0
        }
    },
    "a2": {
        "CLUSTER_3": {
            "numpy.array": 1.0
        }
    },
    "data_branches": {
        "CLUSTER_10": {
            "numpy.loadtxt": 1.0
        }
    },
    "data['DATE']": {
        "CLUSTER_3": {
            "pandas.to_datetime": 1.0
        }
    },
    "u0": {
        "CLUSTER_10": {
            "numpy.ones": 1.0
        }
    },
    "return(100.0*np.sum(np.argmax(predictions,1)": {
        "CLUSTER_7": {
            "numpy.argmax": 1.0
        }
    },
    "cwd": {
        "CLUSTER_12": {
            "os.getcwd": 1.0
        }
    },
    "trained_label": {
        "CLUSTER_11": {
            "numpy.array": 1.0
        }
    },
    "dirty_data['date']": {
        "CLUSTER_4": {
            "pandas.to_datetime": 1.0
        }
    },
    "regr": {
        "CLUSTER_0": {
            "sklearn.ensemble.RandomForestRegressor": 1.0
        }
    },
    "dfA": {
        "CLUSTER_9": {
            "pandas.read_csv": 1.0
        }
    },
    "school_data_df": {
        "CLUSTER_3": {
            "pandas.read_csv": 1.0
        }
    },
    "X_grid": {
        "CLUSTER_5": {
            "numpy.arange": 1.0
        }
    }
}